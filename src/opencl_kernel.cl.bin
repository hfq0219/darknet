//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23770342
// Driver 384.130
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30, texmode_independent
.address_size 64

	// .globl	binary_gradient_array_opencl
// backward_scale_opencl$part has been demoted
// backward_bias_opencl$part has been demoted
// fast_mean_delta_opencl$loca has been demoted
// fast_variance_delta_opencl$loca has been demoted
// fast_mean_opencl$loca has been demoted
// fast_variance_opencl$loca has been demoted
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.entry binary_gradient_array_opencl(
	.param .u64 .ptr .global .align 4 binary_gradient_array_opencl_param_0,
	.param .u64 .ptr .global .align 4 binary_gradient_array_opencl_param_1,
	.param .u32 binary_gradient_array_opencl_param_2,
	.param .u32 binary_gradient_array_opencl_param_3,
	.param .u32 binary_gradient_array_opencl_param_4,
	.param .u64 .ptr .global .align 4 binary_gradient_array_opencl_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [binary_gradient_array_opencl_param_0];
	ld.param.u64 	%rd2, [binary_gradient_array_opencl_param_1];
	ld.param.u32 	%r3, [binary_gradient_array_opencl_param_2];
	ld.param.u32 	%r2, [binary_gradient_array_opencl_param_3];
	ld.param.u64 	%rd3, [binary_gradient_array_opencl_param_5];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB0_2;

	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd1, %rd4;
	shr.u32 	%r14, %r2, 31;
	add.s32 	%r15, %r2, %r14;
	shr.s32 	%r16, %r15, 1;
	add.s32 	%r17, %r16, %r1;
	mul.wide.s32 	%rd6, %r17, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	add.s64 	%rd8, %rd2, %rd4;
	ld.global.f32 	%f3, [%rd8];
	mul.f32 	%f4, %f1, %f3;
	add.s64 	%rd9, %rd3, %rd4;
	st.global.f32 	[%rd9], %f4;
	mul.f32 	%f5, %f2, %f3;
	add.s64 	%rd10, %rd3, %rd6;
	st.global.f32 	[%rd10], %f5;

BB0_2:
	ret;
}

	// .globl	binary_activate_array_opencl
.entry binary_activate_array_opencl(
	.param .u64 .ptr .global .align 4 binary_activate_array_opencl_param_0,
	.param .u32 binary_activate_array_opencl_param_1,
	.param .u32 binary_activate_array_opencl_param_2,
	.param .u32 binary_activate_array_opencl_param_3,
	.param .u64 .ptr .global .align 4 binary_activate_array_opencl_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [binary_activate_array_opencl_param_0];
	ld.param.u32 	%r3, [binary_activate_array_opencl_param_1];
	ld.param.u32 	%r2, [binary_activate_array_opencl_param_2];
	ld.param.u64 	%rd2, [binary_activate_array_opencl_param_4];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB1_2;

	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd1, %rd3;
	shr.u32 	%r14, %r2, 31;
	add.s32 	%r15, %r2, %r14;
	shr.s32 	%r16, %r15, 1;
	add.s32 	%r17, %r16, %r1;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd4];
	mul.f32 	%f3, %f1, %f2;
	add.s64 	%rd7, %rd2, %rd3;
	st.global.f32 	[%rd7], %f3;

BB1_2:
	ret;
}

	// .globl	activate_array_opencl
.entry activate_array_opencl(
	.param .u64 .ptr .global .align 4 activate_array_opencl_param_0,
	.param .u32 activate_array_opencl_param_1,
	.param .u32 activate_array_opencl_param_2
)
{
	.reg .pred 	%p<46>;
	.reg .f32 	%f<113>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd2, [activate_array_opencl_param_0];
	ld.param.u32 	%r4, [activate_array_opencl_param_1];
	ld.param.u32 	%r3, [activate_array_opencl_param_2];
	mov.b32	%r5, %envreg0;
	mov.u32 	%r6, %ctaid.x;
	add.s32 	%r7, %r6, %r5;
	mov.u32 	%r8, %ctaid.y;
	mov.b32	%r9, %envreg1;
	add.s32 	%r10, %r8, %r9;
	mov.b32	%r11, %envreg6;
	mad.lo.s32 	%r12, %r10, %r11, %r7;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r12, %r13, %r14;
	setp.ge.s32	%p1, %r1, %r4;
	@%p1 bra 	BB2_44;

	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd1, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd1];
	mov.f32 	%f112, 0f00000000;
	setp.gt.s32	%p2, %r3, 6;
	@%p2 bra 	BB2_16;

	setp.gt.s32	%p12, %r3, 2;
	@%p12 bra 	BB2_7;

	setp.eq.s32	%p18, %r3, 0;
	@%p18 bra 	BB2_41;

	setp.eq.s32	%p19, %r3, 1;
	@%p19 bra 	BB2_40;
	bra.uni 	BB2_5;

BB2_40:
	setp.gt.f32	%p41, %f1, 0f00000000;
	selp.f32	%f112, %f1, 0f00000000, %p41;
	bra.uni 	BB2_43;

BB2_16:
	setp.gt.s32	%p3, %r3, 9;
	@%p3 bra 	BB2_21;

	setp.eq.s32	%p9, %r3, 7;
	@%p9 bra 	BB2_37;

	setp.eq.s32	%p10, %r3, 8;
	@%p10 bra 	BB2_39;
	bra.uni 	BB2_19;

BB2_39:
	setp.ge.f32	%p37, %f1, 0f00000000;
	selp.u32	%r17, 1, 0, %p37;
	cvt.rn.f32.s32	%f69, %r17;
	mul.f32 	%f70, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f71, %f70;
	mov.f32 	%f72, 0fBF317200;
	fma.rn.f32 	%f73, %f71, %f72, %f1;
	mov.f32 	%f74, 0fB5BFBE8E;
	fma.rn.f32 	%f75, %f71, %f74, %f73;
	mul.f32 	%f68, %f75, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f67,%f68;
	// inline asm
	add.f32 	%f76, %f71, 0f00000000;
	ex2.approx.f32 	%f77, %f76;
	fma.rn.f32 	%f78, %f67, %f77, 0fBF800000;
	setp.lt.f32	%p38, %f1, 0fC2D20000;
	selp.f32	%f79, 0fBF800000, %f78, %p38;
	setp.gt.f32	%p39, %f1, 0f42D20000;
	selp.f32	%f80, 0f7F800000, %f79, %p39;
	setp.lt.f32	%p40, %f1, 0f00000000;
	selp.f32	%f81, %f80, 0f00000000, %p40;
	fma.rn.f32 	%f112, %f69, %f1, %f81;
	bra.uni 	BB2_43;

BB2_7:
	setp.gt.s32	%p13, %r3, 4;
	@%p13 bra 	BB2_11;

	setp.eq.s32	%p16, %r3, 3;
	@%p16 bra 	BB2_42;

	setp.eq.s32	%p17, %r3, 4;
	@%p17 bra 	BB2_10;
	bra.uni 	BB2_43;

BB2_10:
	setp.gt.f32	%p31, %f1, 0f00000000;
	selp.u32	%r16, 1, 0, %p31;
	cvt.rn.f32.s32	%f48, %r16;
	mul.f32 	%f49, %f1, 0f3DCCCCCD;
	fma.rn.f32 	%f112, %f1, %f48, %f49;
	bra.uni 	BB2_43;

BB2_21:
	setp.gt.s32	%p4, %r3, 11;
	@%p4 bra 	BB2_26;

	setp.eq.s32	%p7, %r3, 10;
	@%p7 bra 	BB2_32;
	bra.uni 	BB2_23;

BB2_32:
	// inline asm
	cvt.rmi.f32.f32 	%f23, %f1;
	// inline asm
	cvt.rzi.s32.f32	%r2, %f23;
	and.b32  	%r15, %r2, 1;
	setp.eq.b32	%p25, %r15, 1;
	mul.f32 	%f26, %f1, 0f3F000000;
	// inline asm
	cvt.rmi.f32.f32 	%f112, %f26;
	// inline asm
	@!%p25 bra 	BB2_43;
	bra.uni 	BB2_33;

BB2_33:
	cvt.rn.f32.s32	%f27, %r2;
	sub.f32 	%f28, %f1, %f27;
	add.f32 	%f112, %f112, %f28;
	bra.uni 	BB2_43;

BB2_11:
	setp.eq.s32	%p14, %r3, 5;
	@%p14 bra 	BB2_36;
	bra.uni 	BB2_12;

BB2_36:
	mul.f32 	%f33, %f1, 0fC0000000;
	mul.f32 	%f34, %f33, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f35, %f34;
	mov.f32 	%f36, 0fBF317200;
	fma.rn.f32 	%f37, %f35, %f36, %f33;
	mov.f32 	%f38, 0fB5BFBE8E;
	fma.rn.f32 	%f39, %f35, %f38, %f37;
	mul.f32 	%f32, %f39, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f31,%f32;
	// inline asm
	add.f32 	%f40, %f35, 0f00000000;
	ex2.approx.f32 	%f41, %f40;
	setp.lt.f32	%p28, %f33, 0fC2D20000;
	setp.gt.f32	%p29, %f33, 0f42D20000;
	fma.rn.f32 	%f42, %f31, %f41, 0f3F800000;
	mov.f32 	%f43, 0f40000000;
	div.full.f32 	%f44, %f43, %f42;
	add.f32 	%f45, %f44, 0fBF800000;
	selp.f32	%f46, 0f3F800000, %f45, %p28;
	selp.f32	%f112, 0fBF800000, %f46, %p29;
	bra.uni 	BB2_43;

BB2_26:
	setp.eq.s32	%p5, %r3, 13;
	@%p5 bra 	BB2_38;
	bra.uni 	BB2_27;

BB2_38:
	setp.ge.f32	%p33, %f1, 0f00000000;
	selp.f32	%f53, 0f3F867D56, 0f00000000, %p33;
	setp.lt.f32	%p34, %f1, 0f00000000;
	selp.f32	%f54, 0f3FE1072A, 0f00000000, %p34;
	mul.f32 	%f55, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f56, %f55;
	mov.f32 	%f57, 0fBF317200;
	fma.rn.f32 	%f58, %f56, %f57, %f1;
	mov.f32 	%f59, 0fB5BFBE8E;
	fma.rn.f32 	%f60, %f56, %f59, %f58;
	mul.f32 	%f52, %f60, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f51,%f52;
	// inline asm
	add.f32 	%f61, %f56, 0f00000000;
	ex2.approx.f32 	%f62, %f61;
	fma.rn.f32 	%f63, %f51, %f62, 0fBF800000;
	setp.lt.f32	%p35, %f1, 0fC2D20000;
	selp.f32	%f64, 0fBF800000, %f63, %p35;
	setp.gt.f32	%p36, %f1, 0f42D20000;
	selp.f32	%f65, 0f7F800000, %f64, %p36;
	mul.f32 	%f66, %f54, %f65;
	fma.rn.f32 	%f112, %f53, %f1, %f66;
	bra.uni 	BB2_43;

BB2_41:
	neg.f32 	%f100, %f1;
	mul.f32 	%f101, %f1, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f102, %f101;
	mov.f32 	%f103, 0fBF317200;
	fma.rn.f32 	%f104, %f102, %f103, %f100;
	mov.f32 	%f105, 0fB5BFBE8E;
	fma.rn.f32 	%f106, %f102, %f105, %f104;
	mul.f32 	%f99, %f106, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f98,%f99;
	// inline asm
	add.f32 	%f107, %f102, 0f00000000;
	ex2.approx.f32 	%f108, %f107;
	fma.rn.f32 	%f109, %f98, %f108, 0f3F800000;
	rcp.approx.f32 	%f110, %f109;
	setp.gt.f32	%p44, %f1, 0f42D20000;
	selp.f32	%f111, 0f3F800000, %f110, %p44;
	setp.lt.f32	%p45, %f1, 0fC2D20000;
	selp.f32	%f112, 0f00000000, %f111, %p45;
	bra.uni 	BB2_43;

BB2_5:
	setp.eq.s32	%p20, %r3, 2;
	@%p20 bra 	BB2_6;
	bra.uni 	BB2_43;

BB2_6:
	setp.gt.f32	%p32, %f1, 0f00000000;
	mul.f32 	%f50, %f1, 0f3C23D70A;
	selp.f32	%f112, %f1, %f50, %p32;
	bra.uni 	BB2_43;

BB2_37:
	setp.gt.f32	%p30, %f1, 0f00000000;
	mul.f32 	%f47, %f1, 0f3DCCCCCD;
	selp.f32	%f112, %f1, %f47, %p30;
	bra.uni 	BB2_43;

BB2_19:
	setp.eq.s32	%p11, %r3, 9;
	@%p11 bra 	BB2_20;
	bra.uni 	BB2_43;

BB2_20:
	neg.f32 	%f84, %f1;
	mul.f32 	%f85, %f1, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f86, %f85;
	mov.f32 	%f87, 0fBF317200;
	fma.rn.f32 	%f88, %f86, %f87, %f84;
	mov.f32 	%f89, 0fB5BFBE8E;
	fma.rn.f32 	%f90, %f86, %f89, %f88;
	mul.f32 	%f83, %f90, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f82,%f83;
	// inline asm
	add.f32 	%f91, %f86, 0f00000000;
	ex2.approx.f32 	%f92, %f91;
	fma.rn.f32 	%f93, %f82, %f92, 0f3F800000;
	mov.f32 	%f94, 0f40000000;
	div.full.f32 	%f95, %f94, %f93;
	add.f32 	%f96, %f95, 0fBF800000;
	setp.gt.f32	%p42, %f1, 0f42D20000;
	selp.f32	%f97, 0f3F800000, %f96, %p42;
	setp.lt.f32	%p43, %f1, 0fC2D20000;
	selp.f32	%f112, 0fBF800000, %f97, %p43;
	bra.uni 	BB2_43;

BB2_23:
	setp.eq.s32	%p8, %r3, 11;
	@%p8 bra 	BB2_24;
	bra.uni 	BB2_43;

BB2_24:
	setp.lt.f32	%p23, %f1, 0fBF800000;
	mov.f32 	%f112, 0fBF800000;
	@%p23 bra 	BB2_43;

	setp.gt.f32	%p24, %f1, 0f3F800000;
	selp.f32	%f112, 0f3F800000, %f1, %p24;
	bra.uni 	BB2_43;

BB2_12:
	setp.eq.s32	%p15, %r3, 6;
	@%p15 bra 	BB2_13;
	bra.uni 	BB2_43;

BB2_13:
	setp.lt.f32	%p26, %f1, 0fC0800000;
	@%p26 bra 	BB2_35;
	bra.uni 	BB2_14;

BB2_35:
	add.f32 	%f30, %f1, 0f40800000;
	mul.f32 	%f112, %f30, 0f3C23D70A;
	bra.uni 	BB2_43;

BB2_27:
	setp.ne.s32	%p6, %r3, 12;
	@%p6 bra 	BB2_43;

	setp.lt.f32	%p21, %f1, 0f00000000;
	@%p21 bra 	BB2_31;
	bra.uni 	BB2_29;

BB2_31:
	mul.f32 	%f112, %f1, 0f3A83126F;
	bra.uni 	BB2_43;

BB2_14:
	setp.gt.f32	%p27, %f1, 0f40800000;
	@%p27 bra 	BB2_34;
	bra.uni 	BB2_15;

BB2_34:
	add.f32 	%f29, %f1, 0fC0800000;
	fma.rn.f32 	%f112, %f29, 0f3C23D70A, 0f3F800000;
	bra.uni 	BB2_43;

BB2_29:
	setp.leu.f32	%p22, %f1, 0f3F800000;
	@%p22 bra 	BB2_42;

	add.f32 	%f21, %f1, 0fBF800000;
	fma.rn.f32 	%f112, %f21, 0f3A83126F, 0f3F800000;
	bra.uni 	BB2_43;

BB2_42:
	mov.f32 	%f112, %f1;

BB2_43:
	st.global.f32 	[%rd1], %f112;

BB2_44:
	ret;

BB2_15:
	fma.rn.f32 	%f112, %f1, 0f3E000000, 0f3F000000;
	bra.uni 	BB2_43;
}

	// .globl	gradient_array_opencl
.entry gradient_array_opencl(
	.param .u64 .ptr .global .align 4 gradient_array_opencl_param_0,
	.param .u32 gradient_array_opencl_param_1,
	.param .u32 gradient_array_opencl_param_2,
	.param .u64 .ptr .global .align 4 gradient_array_opencl_param_3
)
{
	.reg .pred 	%p<38>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<19>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [gradient_array_opencl_param_0];
	ld.param.u32 	%r3, [gradient_array_opencl_param_1];
	ld.param.u32 	%r2, [gradient_array_opencl_param_2];
	ld.param.u64 	%rd3, [gradient_array_opencl_param_3];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB3_36;

	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd2, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mov.f32 	%f35, 0f00000000;
	setp.gt.s32	%p2, %r2, 6;
	@%p2 bra 	BB3_15;

	setp.gt.s32	%p12, %r2, 2;
	@%p12 bra 	BB3_7;

	setp.eq.s32	%p18, %r2, 0;
	@%p18 bra 	BB3_33;

	setp.eq.s32	%p19, %r2, 1;
	@%p19 bra 	BB3_32;
	bra.uni 	BB3_5;

BB3_32:
	setp.gt.f32	%p37, %f1, 0f00000000;
	selp.u32	%r18, 1, 0, %p37;
	cvt.rn.f32.s32	%f35, %r18;
	bra.uni 	BB3_35;

BB3_15:
	setp.gt.s32	%p3, %r2, 9;
	@%p3 bra 	BB3_20;

	setp.eq.s32	%p9, %r2, 7;
	@%p9 bra 	BB3_29;

	setp.eq.s32	%p10, %r2, 8;
	@%p10 bra 	BB3_31;
	bra.uni 	BB3_18;

BB3_31:
	setp.ge.f32	%p35, %f1, 0f00000000;
	selp.u32	%r16, 1, 0, %p35;
	cvt.rn.f32.s32	%f22, %r16;
	setp.lt.f32	%p36, %f1, 0f00000000;
	selp.u32	%r17, 1, 0, %p36;
	cvt.rn.f32.s32	%f23, %r17;
	add.f32 	%f24, %f1, 0f3F800000;
	fma.rn.f32 	%f35, %f23, %f24, %f22;
	bra.uni 	BB3_35;

BB3_7:
	setp.gt.s32	%p13, %r2, 4;
	@%p13 bra 	BB3_11;

	setp.eq.s32	%p16, %r2, 3;
	@%p16 bra 	BB3_34;
	bra.uni 	BB3_9;

BB3_34:
	mov.f32 	%f35, 0f3F800000;
	bra.uni 	BB3_35;

BB3_20:
	setp.gt.s32	%p4, %r2, 11;
	@%p4 bra 	BB3_24;

	setp.eq.s32	%p7, %r2, 10;
	@%p7 bra 	BB3_27;
	bra.uni 	BB3_22;

BB3_27:
	// inline asm
	cvt.rmi.f32.f32 	%f17, %f1;
	// inline asm
	setp.eq.f32	%p27, %f17, %f1;
	selp.f32	%f35, 0f00000000, 0f3F800000, %p27;
	bra.uni 	BB3_35;

BB3_11:
	setp.eq.s32	%p14, %r2, 5;
	@%p14 bra 	BB3_28;
	bra.uni 	BB3_12;

BB3_28:
	neg.f32 	%f20, %f1;
	fma.rn.f32 	%f35, %f20, %f1, 0f3F800000;
	bra.uni 	BB3_35;

BB3_24:
	setp.eq.s32	%p5, %r2, 13;
	@%p5 bra 	BB3_30;
	bra.uni 	BB3_25;

BB3_30:
	setp.ge.f32	%p33, %f1, 0f00000000;
	selp.u32	%r15, 1, 0, %p33;
	cvt.rn.f64.s32	%fd1, %r15;
	cvt.f64.f32	%fd2, %f1;
	add.f64 	%fd3, %fd2, 0d3FFC20E55D92575B;
	setp.lt.f32	%p34, %f1, 0f00000000;
	selp.f64	%fd4, %fd3, 0d0000000000000000, %p34;
	fma.rn.f64 	%fd5, %fd1, 0d3FF0CFAACD9E83E4, %fd4;
	cvt.rn.f32.f64	%f35, %fd5;
	bra.uni 	BB3_35;

BB3_33:
	mov.f32 	%f30, 0f3F800000;
	sub.f32 	%f31, %f30, %f1;
	mul.f32 	%f35, %f1, %f31;
	bra.uni 	BB3_35;

BB3_5:
	setp.eq.s32	%p20, %r2, 2;
	@%p20 bra 	BB3_6;
	bra.uni 	BB3_35;

BB3_6:
	setp.gt.f32	%p32, %f1, 0f00000000;
	selp.f32	%f35, 0f3F800000, 0f3C23D70A, %p32;
	bra.uni 	BB3_35;

BB3_29:
	setp.gt.f32	%p30, %f1, 0f00000000;
	selp.f32	%f35, 0f3F800000, 0f3DCCCCCD, %p30;
	bra.uni 	BB3_35;

BB3_18:
	setp.eq.s32	%p11, %r2, 9;
	@%p11 bra 	BB3_19;
	bra.uni 	BB3_35;

BB3_19:
	add.f32 	%f25, %f1, 0f3F800000;
	mul.f32 	%f26, %f25, 0f3F000000;
	mov.f32 	%f27, 0f3F800000;
	sub.f32 	%f28, %f27, %f26;
	add.f32 	%f29, %f28, %f28;
	mul.f32 	%f35, %f26, %f29;
	bra.uni 	BB3_35;

BB3_9:
	setp.eq.s32	%p17, %r2, 4;
	@%p17 bra 	BB3_10;
	bra.uni 	BB3_35;

BB3_10:
	setp.gt.f32	%p31, %f1, 0f00000000;
	selp.u32	%r14, 1, 0, %p31;
	cvt.rn.f32.s32	%f21, %r14;
	add.f32 	%f35, %f21, 0f3DCCCCCD;
	bra.uni 	BB3_35;

BB3_22:
	setp.eq.s32	%p8, %r2, 11;
	@%p8 bra 	BB3_23;
	bra.uni 	BB3_35;

BB3_23:
	setp.gt.f32	%p24, %f1, 0fBF800000;
	setp.lt.f32	%p25, %f1, 0f3F800000;
	and.pred  	%p26, %p24, %p25;
	selp.f32	%f35, 0f3F800000, 0f00000000, %p26;
	bra.uni 	BB3_35;

BB3_12:
	setp.eq.s32	%p15, %r2, 6;
	@%p15 bra 	BB3_13;
	bra.uni 	BB3_35;

BB3_13:
	setp.lt.f32	%p28, %f1, 0f00000000;
	mov.f32 	%f35, 0f3C23D70A;
	@%p28 bra 	BB3_35;

	setp.gt.f32	%p29, %f1, 0f3F800000;
	selp.f32	%f35, 0f3C23D70A, 0f3E000000, %p29;
	bra.uni 	BB3_35;

BB3_25:
	setp.ne.s32	%p6, %r2, 12;
	@%p6 bra 	BB3_35;

	setp.gt.f32	%p21, %f1, 0f00000000;
	setp.lt.f32	%p22, %f1, 0f3F800000;
	and.pred  	%p23, %p21, %p22;
	selp.f32	%f35, 0f3F800000, 0f3A83126F, %p23;

BB3_35:
	shl.b64 	%rd6, %rd1, 2;
	add.s64 	%rd7, %rd3, %rd6;
	ld.global.f32 	%f33, [%rd7];
	mul.rn.f32 	%f34, %f33, %f35;
	st.global.f32 	[%rd7], %f34;

BB3_36:
	ret;
}

	// .globl	forward_avgpool_layer_opencl
.entry forward_avgpool_layer_opencl(
	.param .u32 forward_avgpool_layer_opencl_param_0,
	.param .u32 forward_avgpool_layer_opencl_param_1,
	.param .u32 forward_avgpool_layer_opencl_param_2,
	.param .u32 forward_avgpool_layer_opencl_param_3,
	.param .u64 .ptr .global .align 4 forward_avgpool_layer_opencl_param_4,
	.param .u64 .ptr .global .align 4 forward_avgpool_layer_opencl_param_5
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<31>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<16>;


	ld.param.u32 	%r19, [forward_avgpool_layer_opencl_param_0];
	ld.param.u32 	%r17, [forward_avgpool_layer_opencl_param_1];
	ld.param.u32 	%r18, [forward_avgpool_layer_opencl_param_2];
	ld.param.u64 	%rd5, [forward_avgpool_layer_opencl_param_4];
	ld.param.u64 	%rd6, [forward_avgpool_layer_opencl_param_5];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r20, %ctaid.x;
	add.s32 	%r21, %r20, %r1;
	mov.u32 	%r2, %ctaid.y;
	mov.b32	%r3, %envreg1;
	add.s32 	%r22, %r2, %r3;
	mov.b32	%r4, %envreg6;
	mad.lo.s32 	%r23, %r22, %r4, %r21;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r23, %r5, %r6;
	setp.ge.s32	%p1, %r7, %r19;
	@%p1 bra 	BB4_12;

	mul.wide.s32 	%rd7, %r7, 4;
	add.s64 	%rd1, %rd6, %rd7;
	mov.u32 	%r41, 0;
	st.global.u32 	[%rd1], %r41;
	mul.lo.s32 	%r8, %r18, %r17;
	mov.f32 	%f30, 0f00000000;
	setp.lt.s32	%p2, %r8, 1;
	@%p2 bra 	BB4_11;

	mul.lo.s32 	%r9, %r7, %r8;
	and.b32  	%r28, %r8, 3;
	mov.f32 	%f30, 0f00000000;
	setp.eq.s32	%p3, %r28, 0;
	@%p3 bra 	BB4_8;

	setp.eq.s32	%p4, %r28, 1;
	@%p4 bra 	BB4_7;

	setp.eq.s32	%p5, %r28, 2;
	@%p5 bra 	BB4_6;

	mul.wide.s32 	%rd8, %r9, 4;
	add.s64 	%rd9, %rd5, %rd8;
	ld.global.f32 	%f14, [%rd9];
	add.f32 	%f30, %f14, 0f00000000;
	st.global.f32 	[%rd1], %f30;
	mov.u32 	%r41, 1;

BB4_6:
	add.s32 	%r30, %r41, %r9;
	mul.wide.s32 	%rd10, %r30, 4;
	add.s64 	%rd11, %rd5, %rd10;
	ld.global.f32 	%f15, [%rd11];
	add.f32 	%f30, %f15, %f30;
	st.global.f32 	[%rd1], %f30;
	add.s32 	%r41, %r41, 1;

BB4_7:
	add.s32 	%r31, %r41, %r9;
	mul.wide.s32 	%rd12, %r31, 4;
	add.s64 	%rd13, %rd5, %rd12;
	ld.global.f32 	%f16, [%rd13];
	add.f32 	%f30, %f16, %f30;
	st.global.f32 	[%rd1], %f30;
	add.s32 	%r41, %r41, 1;

BB4_8:
	setp.lt.u32	%p6, %r8, 4;
	@%p6 bra 	BB4_11;

	mad.lo.s32 	%r36, %r4, %r22, %r21;
	mad.lo.s32 	%r37, %r5, %r36, %r6;
	mad.lo.s32 	%r38, %r8, %r37, %r41;
	mul.wide.s32 	%rd14, %r38, 4;
	add.s64 	%rd15, %rd5, %rd14;

BB4_10:
	ld.global.f32 	%f17, [%rd15];
	add.f32 	%f18, %f17, %f30;
	st.global.f32 	[%rd1], %f18;
	ld.global.f32 	%f19, [%rd15+4];
	add.f32 	%f20, %f19, %f18;
	st.global.f32 	[%rd1], %f20;
	ld.global.f32 	%f21, [%rd15+8];
	add.f32 	%f22, %f21, %f20;
	st.global.f32 	[%rd1], %f22;
	ld.global.f32 	%f23, [%rd15+12];
	add.f32 	%f30, %f23, %f22;
	st.global.f32 	[%rd1], %f30;
	add.s64 	%rd15, %rd15, 16;
	add.s32 	%r41, %r41, 4;
	setp.lt.s32	%p7, %r41, %r8;
	@%p7 bra 	BB4_10;

BB4_11:
	cvt.rn.f32.s32	%f24, %r8;
	div.full.f32 	%f25, %f30, %f24;
	st.global.f32 	[%rd1], %f25;

BB4_12:
	ret;
}

	// .globl	backward_avgpool_layer_opencl
.entry backward_avgpool_layer_opencl(
	.param .u32 backward_avgpool_layer_opencl_param_0,
	.param .u32 backward_avgpool_layer_opencl_param_1,
	.param .u32 backward_avgpool_layer_opencl_param_2,
	.param .u32 backward_avgpool_layer_opencl_param_3,
	.param .u64 .ptr .global .align 4 backward_avgpool_layer_opencl_param_4,
	.param .u64 .ptr .global .align 4 backward_avgpool_layer_opencl_param_5
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<30>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<16>;


	ld.param.u32 	%r19, [backward_avgpool_layer_opencl_param_0];
	ld.param.u32 	%r17, [backward_avgpool_layer_opencl_param_1];
	ld.param.u32 	%r18, [backward_avgpool_layer_opencl_param_2];
	ld.param.u64 	%rd5, [backward_avgpool_layer_opencl_param_4];
	ld.param.u64 	%rd6, [backward_avgpool_layer_opencl_param_5];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r20, %ctaid.x;
	add.s32 	%r21, %r20, %r1;
	mov.u32 	%r2, %ctaid.y;
	mov.b32	%r3, %envreg1;
	add.s32 	%r22, %r2, %r3;
	mov.b32	%r4, %envreg6;
	mad.lo.s32 	%r23, %r22, %r4, %r21;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r23, %r5, %r6;
	setp.ge.s32	%p1, %r7, %r19;
	@%p1 bra 	BB5_11;

	mul.lo.s32 	%r8, %r18, %r17;
	setp.lt.s32	%p2, %r8, 1;
	@%p2 bra 	BB5_11;

	mul.lo.s32 	%r9, %r7, %r8;
	mul.wide.s32 	%rd7, %r7, 4;
	add.s64 	%rd1, %rd6, %rd7;
	cvt.rn.f32.s32	%f1, %r8;
	and.b32  	%r27, %r8, 3;
	mov.u32 	%r38, 0;
	setp.eq.s32	%p3, %r27, 0;
	@%p3 bra 	BB5_8;

	setp.eq.s32	%p4, %r27, 1;
	@%p4 bra 	BB5_7;

	setp.eq.s32	%p5, %r27, 2;
	@%p5 bra 	BB5_6;

	ld.global.f32 	%f2, [%rd1];
	div.full.f32 	%f3, %f2, %f1;
	mul.wide.s32 	%rd8, %r9, 4;
	add.s64 	%rd9, %rd5, %rd8;
	ld.global.f32 	%f4, [%rd9];
	add.f32 	%f5, %f3, %f4;
	st.global.f32 	[%rd9], %f5;
	mov.u32 	%r38, 1;

BB5_6:
	ld.global.f32 	%f6, [%rd1];
	div.full.f32 	%f7, %f6, %f1;
	add.s32 	%r29, %r38, %r9;
	mul.wide.s32 	%rd10, %r29, 4;
	add.s64 	%rd11, %rd5, %rd10;
	ld.global.f32 	%f8, [%rd11];
	add.f32 	%f9, %f7, %f8;
	st.global.f32 	[%rd11], %f9;
	add.s32 	%r38, %r38, 1;

BB5_7:
	ld.global.f32 	%f10, [%rd1];
	div.full.f32 	%f11, %f10, %f1;
	add.s32 	%r30, %r38, %r9;
	mul.wide.s32 	%rd12, %r30, 4;
	add.s64 	%rd13, %rd5, %rd12;
	ld.global.f32 	%f12, [%rd13];
	add.f32 	%f13, %f11, %f12;
	st.global.f32 	[%rd13], %f13;
	add.s32 	%r38, %r38, 1;

BB5_8:
	setp.lt.u32	%p6, %r8, 4;
	@%p6 bra 	BB5_11;

	mad.lo.s32 	%r35, %r4, %r22, %r21;
	mad.lo.s32 	%r36, %r5, %r35, %r6;
	mad.lo.s32 	%r37, %r8, %r36, %r38;
	mul.wide.s32 	%rd14, %r37, 4;
	add.s64 	%rd15, %rd5, %rd14;

BB5_10:
	ld.global.f32 	%f14, [%rd1];
	div.full.f32 	%f15, %f14, %f1;
	ld.global.f32 	%f16, [%rd15];
	add.f32 	%f17, %f15, %f16;
	ld.global.f32 	%f18, [%rd15+4];
	ld.global.f32 	%f19, [%rd15+8];
	ld.global.f32 	%f20, [%rd15+12];
	st.global.f32 	[%rd15], %f17;
	ld.global.f32 	%f21, [%rd1];
	div.full.f32 	%f22, %f21, %f1;
	add.f32 	%f23, %f22, %f18;
	st.global.f32 	[%rd15+4], %f23;
	ld.global.f32 	%f24, [%rd1];
	div.full.f32 	%f25, %f24, %f1;
	add.f32 	%f26, %f25, %f19;
	st.global.f32 	[%rd15+8], %f26;
	ld.global.f32 	%f27, [%rd1];
	div.full.f32 	%f28, %f27, %f1;
	add.f32 	%f29, %f28, %f20;
	st.global.f32 	[%rd15+12], %f29;
	add.s64 	%rd15, %rd15, 16;
	add.s32 	%r38, %r38, 4;
	setp.lt.s32	%p7, %r38, %r8;
	@%p7 bra 	BB5_10;

BB5_11:
	ret;
}

	// .globl	scale_bias_opencl
.entry scale_bias_opencl(
	.param .u64 .ptr .global .align 4 scale_bias_opencl_param_0,
	.param .u64 .ptr .global .align 4 scale_bias_opencl_param_1,
	.param .u32 scale_bias_opencl_param_2,
	.param .u32 scale_bias_opencl_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [scale_bias_opencl_param_0];
	ld.param.u64 	%rd2, [scale_bias_opencl_param_1];
	ld.param.u32 	%r2, [scale_bias_opencl_param_2];
	ld.param.u32 	%r3, [scale_bias_opencl_param_3];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB6_2;

	mov.u32 	%r9, %ctaid.y;
	mov.b32	%r10, %envreg1;
	add.s32 	%r11, %r9, %r10;
	mov.b32	%r12, %envreg2;
	mov.u32 	%r13, %ctaid.z;
	add.s32 	%r14, %r13, %r12;
	mul.wide.s32 	%rd3, %r11, 4;
	add.s64 	%rd4, %rd2, %rd3;
	mad.lo.s32 	%r15, %r14, %r2, %r11;
	mad.lo.s32 	%r16, %r15, %r3, %r1;
	mul.wide.s32 	%rd5, %r16, 4;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd4];
	mul.rn.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd6], %f3;

BB6_2:
	ret;
}

	// .globl	backward_scale_opencl
.entry backward_scale_opencl(
	.param .u64 .ptr .global .align 4 backward_scale_opencl_param_0,
	.param .u64 .ptr .global .align 4 backward_scale_opencl_param_1,
	.param .u32 backward_scale_opencl_param_2,
	.param .u32 backward_scale_opencl_param_3,
	.param .u32 backward_scale_opencl_param_4,
	.param .u64 .ptr .global .align 4 backward_scale_opencl_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<104>;
	.reg .b32 	%r<59>;
	.reg .b64 	%rd<34>;
	// demoted variable
	.shared .align 4 .b8 backward_scale_opencl$part[2048];

	ld.param.u64 	%rd7, [backward_scale_opencl_param_0];
	ld.param.u64 	%rd8, [backward_scale_opencl_param_1];
	ld.param.u32 	%r24, [backward_scale_opencl_param_2];
	ld.param.u32 	%r25, [backward_scale_opencl_param_3];
	ld.param.u32 	%r26, [backward_scale_opencl_param_4];
	ld.param.u64 	%rd9, [backward_scale_opencl_param_5];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r2, %ctaid.x;
	add.s32 	%r3, %r2, %r1;
	mov.f32 	%f101, 0f00000000;
	setp.lt.s32	%p1, %r24, 1;
	@%p1 bra 	BB7_28;

	mov.u32 	%r52, 0;
	mov.f32 	%f101, 0f00000000;

BB7_2:
	setp.lt.s32	%p2, %r26, 1;
	@%p2 bra 	BB7_27;

	mad.lo.s32 	%r32, %r52, %r25, %r3;
	mul.lo.s32 	%r6, %r32, %r26;
	add.s32 	%r33, %r26, -1;
	shr.u32 	%r34, %r33, 9;
	add.s32 	%r35, %r34, 1;
	and.b32  	%r31, %r35, 3;
	mov.u32 	%r53, 0;
	mov.f32 	%f35, 0f00000000;
	setp.eq.s32	%p3, %r31, 0;
	@%p3 bra 	BB7_4;

	setp.eq.s32	%p4, %r31, 1;
	@%p4 bra 	BB7_13;

	setp.eq.s32	%p5, %r31, 2;
	@%p5 bra 	BB7_10;

	mov.u32 	%r7, %tid.x;
	mov.f32 	%f89, 0f00000000;
	setp.ge.s32	%p6, %r7, %r26;
	@%p6 bra 	BB7_9;

	add.s32 	%r36, %r7, %r6;
	mul.wide.s32 	%rd10, %r36, 4;
	add.s64 	%rd11, %rd8, %rd10;
	add.s64 	%rd12, %rd7, %rd10;
	ld.global.f32 	%f37, [%rd12];
	ld.global.f32 	%f38, [%rd11];
	mul.f32 	%f89, %f38, %f37;

BB7_9:
	add.f32 	%f101, %f101, %f89;
	mov.u32 	%r53, 512;

BB7_10:
	mov.u32 	%r38, %tid.x;
	add.s32 	%r9, %r53, %r38;
	mov.f32 	%f91, 0f00000000;
	setp.ge.s32	%p7, %r9, %r26;
	@%p7 bra 	BB7_12;

	add.s32 	%r39, %r9, %r6;
	mul.wide.s32 	%rd13, %r39, 4;
	add.s64 	%rd14, %rd8, %rd13;
	add.s64 	%rd15, %rd7, %rd13;
	ld.global.f32 	%f40, [%rd15];
	ld.global.f32 	%f41, [%rd14];
	mul.f32 	%f91, %f41, %f40;

BB7_12:
	add.f32 	%f101, %f101, %f91;
	add.s32 	%r53, %r53, 512;

BB7_13:
	mov.u32 	%r40, %tid.x;
	add.s32 	%r41, %r53, %r40;
	add.s32 	%r12, %r41, %r6;
	mov.f32 	%f93, 0f00000000;
	setp.ge.s32	%p8, %r41, %r26;
	@%p8 bra 	BB7_15;

	mul.wide.s32 	%rd16, %r12, 4;
	add.s64 	%rd17, %rd8, %rd16;
	add.s64 	%rd18, %rd7, %rd16;
	ld.global.f32 	%f43, [%rd18];
	ld.global.f32 	%f44, [%rd17];
	mul.f32 	%f93, %f44, %f43;

BB7_15:
	add.f32 	%f94, %f101, %f93;
	add.s32 	%r53, %r53, 512;
	mov.f32 	%f101, %f94;
	bra.uni 	BB7_16;

BB7_4:
	mov.f32 	%f94, %f101;
	mov.f32 	%f101, %f35;

BB7_16:
	setp.lt.u32	%p9, %r35, 4;
	@%p9 bra 	BB7_27;

	mov.u32 	%r45, %tid.x;
	add.s32 	%r56, %r45, %r53;
	mad.lo.s32 	%r46, %r25, %r52, %r3;
	mad.lo.s32 	%r47, %r26, %r46, %r56;
	mul.wide.s32 	%rd32, %r47, 4;
	mov.f32 	%f101, %f94;

BB7_18:
	mov.f32 	%f100, 0f00000000;
	setp.ge.s32	%p10, %r56, %r26;
	mov.f32 	%f97, %f100;
	@%p10 bra 	BB7_20;

	add.s64 	%rd19, %rd8, %rd32;
	add.s64 	%rd20, %rd7, %rd32;
	ld.global.f32 	%f46, [%rd20];
	ld.global.f32 	%f47, [%rd19];
	mul.f32 	%f97, %f47, %f46;

BB7_20:
	add.f32 	%f18, %f101, %f97;
	add.s32 	%r48, %r56, 512;
	setp.ge.s32	%p11, %r48, %r26;
	mov.f32 	%f98, %f100;
	@%p11 bra 	BB7_22;

	add.s64 	%rd21, %rd8, %rd32;
	add.s64 	%rd22, %rd7, %rd32;
	ld.global.f32 	%f49, [%rd22+2048];
	ld.global.f32 	%f50, [%rd21+2048];
	mul.f32 	%f98, %f50, %f49;

BB7_22:
	add.f32 	%f21, %f18, %f98;
	add.s32 	%r49, %r56, 1024;
	setp.ge.s32	%p12, %r49, %r26;
	mov.f32 	%f99, %f100;
	@%p12 bra 	BB7_24;

	add.s64 	%rd23, %rd8, %rd32;
	add.s64 	%rd24, %rd7, %rd32;
	ld.global.f32 	%f52, [%rd24+4096];
	ld.global.f32 	%f53, [%rd23+4096];
	mul.f32 	%f99, %f53, %f52;

BB7_24:
	add.f32 	%f24, %f21, %f99;
	add.s32 	%r50, %r56, 1536;
	setp.ge.s32	%p13, %r50, %r26;
	@%p13 bra 	BB7_26;

	add.s64 	%rd25, %rd8, %rd32;
	add.s64 	%rd26, %rd7, %rd32;
	ld.global.f32 	%f55, [%rd26+6144];
	ld.global.f32 	%f56, [%rd25+6144];
	mul.f32 	%f100, %f56, %f55;

BB7_26:
	add.f32 	%f101, %f24, %f100;
	add.s32 	%r56, %r56, 2048;
	add.s64 	%rd32, %rd32, 8192;
	add.s32 	%r53, %r53, 2048;
	setp.lt.s32	%p14, %r53, %r26;
	@%p14 bra 	BB7_18;

BB7_27:
	add.s32 	%r52, %r52, 1;
	setp.lt.s32	%p15, %r52, %r24;
	@%p15 bra 	BB7_2;

BB7_28:
	mov.u32 	%r21, %tid.x;
	mul.wide.s32 	%rd27, %r21, 4;
	mov.u64 	%rd33, backward_scale_opencl$part;
	add.s64 	%rd29, %rd33, %rd27;
	st.shared.f32 	[%rd29], %f101;
	bar.sync 	0;
	setp.ne.s32	%p16, %r21, 0;
	@%p16 bra 	BB7_32;

	mul.wide.s32 	%rd31, %r3, 4;
	add.s64 	%rd4, %rd9, %rd31;
	ld.global.f32 	%f103, [%rd4];
	mov.u32 	%r58, -512;

BB7_30:
	ld.shared.f32 	%f57, [%rd33];
	add.f32 	%f58, %f57, %f103;
	ld.shared.f32 	%f59, [%rd33+4];
	add.f32 	%f60, %f59, %f58;
	ld.shared.f32 	%f61, [%rd33+8];
	add.f32 	%f62, %f61, %f60;
	ld.shared.f32 	%f63, [%rd33+12];
	add.f32 	%f64, %f63, %f62;
	ld.shared.f32 	%f65, [%rd33+16];
	add.f32 	%f66, %f65, %f64;
	ld.shared.f32 	%f67, [%rd33+20];
	add.f32 	%f68, %f67, %f66;
	ld.shared.f32 	%f69, [%rd33+24];
	add.f32 	%f70, %f69, %f68;
	ld.shared.f32 	%f71, [%rd33+28];
	add.f32 	%f72, %f71, %f70;
	ld.shared.f32 	%f73, [%rd33+32];
	add.f32 	%f74, %f73, %f72;
	ld.shared.f32 	%f75, [%rd33+36];
	add.f32 	%f76, %f75, %f74;
	ld.shared.f32 	%f77, [%rd33+40];
	add.f32 	%f78, %f77, %f76;
	ld.shared.f32 	%f79, [%rd33+44];
	add.f32 	%f80, %f79, %f78;
	ld.shared.f32 	%f81, [%rd33+48];
	add.f32 	%f82, %f81, %f80;
	ld.shared.f32 	%f83, [%rd33+52];
	add.f32 	%f84, %f83, %f82;
	ld.shared.f32 	%f85, [%rd33+56];
	add.f32 	%f86, %f85, %f84;
	ld.shared.f32 	%f87, [%rd33+60];
	add.f32 	%f103, %f87, %f86;
	add.s64 	%rd33, %rd33, 64;
	add.s32 	%r58, %r58, 16;
	setp.ne.s32	%p17, %r58, 0;
	@%p17 bra 	BB7_30;

	st.global.f32 	[%rd4], %f103;

BB7_32:
	ret;
}

	// .globl	add_bias_opencl
.entry add_bias_opencl(
	.param .u64 .ptr .global .align 4 add_bias_opencl_param_0,
	.param .u64 .ptr .global .align 4 add_bias_opencl_param_1,
	.param .u32 add_bias_opencl_param_2,
	.param .u32 add_bias_opencl_param_3,
	.param .u32 add_bias_opencl_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [add_bias_opencl_param_0];
	ld.param.u64 	%rd2, [add_bias_opencl_param_1];
	ld.param.u32 	%r4, [add_bias_opencl_param_2];
	ld.param.u32 	%r2, [add_bias_opencl_param_3];
	ld.param.u32 	%r3, [add_bias_opencl_param_4];
	mov.b32	%r5, %envreg0;
	mov.u32 	%r6, %ctaid.x;
	add.s32 	%r7, %r6, %r5;
	mov.u32 	%r8, %ctaid.y;
	mov.b32	%r9, %envreg1;
	add.s32 	%r10, %r8, %r9;
	mov.b32	%r11, %envreg6;
	mad.lo.s32 	%r12, %r10, %r11, %r7;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r12, %r13, %r14;
	mul.lo.s32 	%r15, %r2, %r4;
	mul.lo.s32 	%r16, %r15, %r3;
	setp.ge.s32	%p1, %r1, %r16;
	@%p1 bra 	BB8_2;

	rem.s32 	%r17, %r1, %r3;
	div.s32 	%r18, %r1, %r3;
	rem.s32 	%r19, %r18, %r2;
	mul.wide.s32 	%rd3, %r19, 4;
	add.s64 	%rd4, %rd2, %rd3;
	mad.lo.s32 	%r20, %r18, %r3, %r17;
	mul.wide.s32 	%rd5, %r20, 4;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd4];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd6], %f3;

BB8_2:
	ret;
}

	// .globl	backward_bias_conn_opencl
.entry backward_bias_conn_opencl(
	.param .u64 .ptr .global .align 4 backward_bias_conn_opencl_param_0,
	.param .u64 .ptr .global .align 4 backward_bias_conn_opencl_param_1,
	.param .u32 backward_bias_conn_opencl_param_2,
	.param .u32 backward_bias_conn_opencl_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<31>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd2, [backward_bias_conn_opencl_param_0];
	ld.param.u64 	%rd3, [backward_bias_conn_opencl_param_1];
	ld.param.u32 	%r20, [backward_bias_conn_opencl_param_2];
	ld.param.u32 	%r21, [backward_bias_conn_opencl_param_3];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r2, %ctaid.x;
	add.s32 	%r22, %r2, %r1;
	mov.u32 	%r3, %ctaid.y;
	mov.b32	%r4, %envreg1;
	add.s32 	%r23, %r3, %r4;
	mov.b32	%r5, %envreg6;
	mad.lo.s32 	%r24, %r23, %r5, %r22;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r24, %r6, %r7;
	setp.ge.s32	%p1, %r8, %r21;
	@%p1 bra 	BB9_12;

	mov.f32 	%f30, 0f00000000;
	setp.lt.s32	%p2, %r20, 1;
	@%p2 bra 	BB9_11;

	and.b32  	%r28, %r20, 3;
	mov.u32 	%r40, 0;
	mov.f32 	%f30, 0f00000000;
	setp.eq.s32	%p3, %r28, 0;
	@%p3 bra 	BB9_8;

	setp.eq.s32	%p4, %r28, 1;
	@%p4 bra 	BB9_7;

	setp.eq.s32	%p5, %r28, 2;
	@%p5 bra 	BB9_6;

	mul.wide.s32 	%rd4, %r8, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f14, [%rd5];
	add.f32 	%f30, %f14, 0f00000000;
	mov.u32 	%r40, 1;

BB9_6:
	neg.s32 	%r30, %r40;
	and.b32  	%r31, %r30, %r21;
	add.s32 	%r32, %r31, %r8;
	mul.wide.s32 	%rd6, %r32, 4;
	add.s64 	%rd7, %rd3, %rd6;
	ld.global.f32 	%f15, [%rd7];
	add.f32 	%f30, %f30, %f15;
	add.s32 	%r40, %r40, 1;

BB9_7:
	mad.lo.s32 	%r33, %r40, %r21, %r8;
	mul.wide.s32 	%rd8, %r33, 4;
	add.s64 	%rd9, %rd3, %rd8;
	ld.global.f32 	%f16, [%rd9];
	add.f32 	%f30, %f30, %f16;
	add.s32 	%r40, %r40, 1;

BB9_8:
	setp.lt.u32	%p6, %r20, 4;
	@%p6 bra 	BB9_11;

	mad.lo.s32 	%r36, %r5, %r23, %r22;
	mad.lo.s32 	%r37, %r6, %r36, %r7;
	shl.b32 	%r14, %r21, 2;
	mad.lo.s32 	%r41, %r40, %r21, %r37;
	mul.wide.s32 	%rd1, %r21, 4;

BB9_10:
	mul.wide.s32 	%rd10, %r41, 4;
	add.s64 	%rd11, %rd3, %rd10;
	ld.global.f32 	%f17, [%rd11];
	add.f32 	%f18, %f30, %f17;
	add.s64 	%rd12, %rd11, %rd1;
	ld.global.f32 	%f19, [%rd12];
	add.f32 	%f20, %f18, %f19;
	add.s64 	%rd13, %rd12, %rd1;
	ld.global.f32 	%f21, [%rd13];
	add.f32 	%f22, %f20, %f21;
	add.s64 	%rd14, %rd13, %rd1;
	ld.global.f32 	%f23, [%rd14];
	add.f32 	%f30, %f22, %f23;
	add.s32 	%r41, %r41, %r14;
	add.s32 	%r40, %r40, 4;
	setp.lt.s32	%p7, %r40, %r20;
	@%p7 bra 	BB9_10;

BB9_11:
	mul.wide.s32 	%rd15, %r8, 4;
	add.s64 	%rd16, %rd2, %rd15;
	ld.global.f32 	%f24, [%rd16];
	add.f32 	%f25, %f30, %f24;
	st.global.f32 	[%rd16], %f25;

BB9_12:
	ret;
}

	// .globl	backward_bias_opencl
.entry backward_bias_opencl(
	.param .u64 .ptr .global .align 4 backward_bias_opencl_param_0,
	.param .u64 .ptr .global .align 4 backward_bias_opencl_param_1,
	.param .u32 backward_bias_opencl_param_2,
	.param .u32 backward_bias_opencl_param_3,
	.param .u32 backward_bias_opencl_param_4
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<90>;
	.reg .b32 	%r<59>;
	.reg .b64 	%rd<23>;
	// demoted variable
	.shared .align 4 .b8 backward_bias_opencl$part[2048];

	ld.param.u64 	%rd7, [backward_bias_opencl_param_0];
	ld.param.u64 	%rd8, [backward_bias_opencl_param_1];
	ld.param.u32 	%r24, [backward_bias_opencl_param_2];
	ld.param.u32 	%r25, [backward_bias_opencl_param_3];
	ld.param.u32 	%r26, [backward_bias_opencl_param_4];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r2, %ctaid.x;
	add.s32 	%r3, %r2, %r1;
	mov.f32 	%f87, 0f00000000;
	setp.lt.s32	%p1, %r24, 1;
	@%p1 bra 	BB10_28;

	mov.u32 	%r52, 0;
	mov.f32 	%f87, 0f00000000;

BB10_2:
	setp.lt.s32	%p2, %r26, 1;
	@%p2 bra 	BB10_27;

	mad.lo.s32 	%r32, %r52, %r25, %r3;
	mul.lo.s32 	%r6, %r32, %r26;
	add.s32 	%r33, %r26, -1;
	shr.u32 	%r34, %r33, 9;
	add.s32 	%r35, %r34, 1;
	and.b32  	%r31, %r35, 3;
	mov.u32 	%r53, 0;
	mov.f32 	%f35, 0f00000000;
	setp.eq.s32	%p3, %r31, 0;
	@%p3 bra 	BB10_4;

	setp.eq.s32	%p4, %r31, 1;
	@%p4 bra 	BB10_13;

	setp.eq.s32	%p5, %r31, 2;
	@%p5 bra 	BB10_10;

	mov.u32 	%r7, %tid.x;
	mov.f32 	%f75, 0f00000000;
	setp.ge.s32	%p6, %r7, %r26;
	@%p6 bra 	BB10_9;

	add.s32 	%r36, %r7, %r6;
	mul.wide.s32 	%rd9, %r36, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f75, [%rd10];

BB10_9:
	add.f32 	%f87, %f87, %f75;
	mov.u32 	%r53, 512;

BB10_10:
	mov.u32 	%r38, %tid.x;
	add.s32 	%r9, %r53, %r38;
	mov.f32 	%f77, 0f00000000;
	setp.ge.s32	%p7, %r9, %r26;
	@%p7 bra 	BB10_12;

	add.s32 	%r39, %r9, %r6;
	mul.wide.s32 	%rd11, %r39, 4;
	add.s64 	%rd12, %rd8, %rd11;
	ld.global.f32 	%f77, [%rd12];

BB10_12:
	add.f32 	%f87, %f87, %f77;
	add.s32 	%r53, %r53, 512;

BB10_13:
	mov.u32 	%r40, %tid.x;
	add.s32 	%r41, %r53, %r40;
	add.s32 	%r12, %r41, %r6;
	mov.f32 	%f79, 0f00000000;
	setp.ge.s32	%p8, %r41, %r26;
	@%p8 bra 	BB10_15;

	mul.wide.s32 	%rd13, %r12, 4;
	add.s64 	%rd14, %rd8, %rd13;
	ld.global.f32 	%f79, [%rd14];

BB10_15:
	add.f32 	%f80, %f87, %f79;
	add.s32 	%r53, %r53, 512;
	mov.f32 	%f87, %f80;
	bra.uni 	BB10_16;

BB10_4:
	mov.f32 	%f80, %f87;
	mov.f32 	%f87, %f35;

BB10_16:
	setp.lt.u32	%p9, %r35, 4;
	@%p9 bra 	BB10_27;

	mov.u32 	%r45, %tid.x;
	add.s32 	%r56, %r45, %r53;
	mad.lo.s32 	%r46, %r25, %r52, %r3;
	mad.lo.s32 	%r47, %r26, %r46, %r56;
	mul.wide.s32 	%rd15, %r47, 4;
	add.s64 	%rd21, %rd8, %rd15;
	mov.f32 	%f87, %f80;

BB10_18:
	mov.f32 	%f86, 0f00000000;
	setp.ge.s32	%p10, %r56, %r26;
	mov.f32 	%f83, %f86;
	@%p10 bra 	BB10_20;

	ld.global.f32 	%f83, [%rd21];

BB10_20:
	add.f32 	%f18, %f87, %f83;
	add.s32 	%r48, %r56, 512;
	setp.ge.s32	%p11, %r48, %r26;
	mov.f32 	%f84, %f86;
	@%p11 bra 	BB10_22;

	ld.global.f32 	%f84, [%rd21+2048];

BB10_22:
	add.f32 	%f21, %f18, %f84;
	add.s32 	%r49, %r56, 1024;
	setp.ge.s32	%p12, %r49, %r26;
	mov.f32 	%f85, %f86;
	@%p12 bra 	BB10_24;

	ld.global.f32 	%f85, [%rd21+4096];

BB10_24:
	add.f32 	%f24, %f21, %f85;
	add.s32 	%r50, %r56, 1536;
	setp.ge.s32	%p13, %r50, %r26;
	@%p13 bra 	BB10_26;

	ld.global.f32 	%f86, [%rd21+6144];

BB10_26:
	add.f32 	%f87, %f24, %f86;
	add.s32 	%r56, %r56, 2048;
	add.s64 	%rd21, %rd21, 8192;
	add.s32 	%r53, %r53, 2048;
	setp.lt.s32	%p14, %r53, %r26;
	@%p14 bra 	BB10_18;

BB10_27:
	add.s32 	%r52, %r52, 1;
	setp.lt.s32	%p15, %r52, %r24;
	@%p15 bra 	BB10_2;

BB10_28:
	mov.u32 	%r21, %tid.x;
	mul.wide.s32 	%rd16, %r21, 4;
	mov.u64 	%rd22, backward_bias_opencl$part;
	add.s64 	%rd18, %rd22, %rd16;
	st.shared.f32 	[%rd18], %f87;
	bar.sync 	0;
	setp.ne.s32	%p16, %r21, 0;
	@%p16 bra 	BB10_32;

	mul.wide.s32 	%rd20, %r3, 4;
	add.s64 	%rd4, %rd7, %rd20;
	ld.global.f32 	%f89, [%rd4];
	mov.u32 	%r58, -512;

BB10_30:
	ld.shared.f32 	%f43, [%rd22];
	add.f32 	%f44, %f43, %f89;
	ld.shared.f32 	%f45, [%rd22+4];
	add.f32 	%f46, %f45, %f44;
	ld.shared.f32 	%f47, [%rd22+8];
	add.f32 	%f48, %f47, %f46;
	ld.shared.f32 	%f49, [%rd22+12];
	add.f32 	%f50, %f49, %f48;
	ld.shared.f32 	%f51, [%rd22+16];
	add.f32 	%f52, %f51, %f50;
	ld.shared.f32 	%f53, [%rd22+20];
	add.f32 	%f54, %f53, %f52;
	ld.shared.f32 	%f55, [%rd22+24];
	add.f32 	%f56, %f55, %f54;
	ld.shared.f32 	%f57, [%rd22+28];
	add.f32 	%f58, %f57, %f56;
	ld.shared.f32 	%f59, [%rd22+32];
	add.f32 	%f60, %f59, %f58;
	ld.shared.f32 	%f61, [%rd22+36];
	add.f32 	%f62, %f61, %f60;
	ld.shared.f32 	%f63, [%rd22+40];
	add.f32 	%f64, %f63, %f62;
	ld.shared.f32 	%f65, [%rd22+44];
	add.f32 	%f66, %f65, %f64;
	ld.shared.f32 	%f67, [%rd22+48];
	add.f32 	%f68, %f67, %f66;
	ld.shared.f32 	%f69, [%rd22+52];
	add.f32 	%f70, %f69, %f68;
	ld.shared.f32 	%f71, [%rd22+56];
	add.f32 	%f72, %f71, %f70;
	ld.shared.f32 	%f73, [%rd22+60];
	add.f32 	%f89, %f73, %f72;
	add.s64 	%rd22, %rd22, 64;
	add.s32 	%r58, %r58, 16;
	setp.ne.s32	%p17, %r58, 0;
	@%p17 bra 	BB10_30;

	st.global.f32 	[%rd4], %f89;

BB10_32:
	ret;
}

	// .globl	adam_opencl
.entry adam_opencl(
	.param .u32 adam_opencl_param_0,
	.param .u64 .ptr .global .align 4 adam_opencl_param_1,
	.param .u64 .ptr .global .align 4 adam_opencl_param_2,
	.param .u64 .ptr .global .align 4 adam_opencl_param_3,
	.param .f32 adam_opencl_param_4,
	.param .f32 adam_opencl_param_5,
	.param .f32 adam_opencl_param_6,
	.param .f32 adam_opencl_param_7,
	.param .u32 adam_opencl_param_8
)
{
	.reg .pred 	%p<60>;
	.reg .f32 	%f<211>;
	.reg .b32 	%r<50>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r3, [adam_opencl_param_0];
	ld.param.u64 	%rd2, [adam_opencl_param_1];
	ld.param.u64 	%rd3, [adam_opencl_param_2];
	ld.param.u64 	%rd4, [adam_opencl_param_3];
	ld.param.f32 	%f30, [adam_opencl_param_4];
	ld.param.f32 	%f31, [adam_opencl_param_5];
	ld.param.f32 	%f32, [adam_opencl_param_6];
	ld.param.f32 	%f33, [adam_opencl_param_7];
	ld.param.u32 	%r2, [adam_opencl_param_8];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB11_32;

	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvt.rn.f32.s32	%f2, %r2;
	mul.f32 	%f35, %f2, 0f3F000000;
	cvt.rzi.f32.f32	%f36, %f35;
	fma.rn.f32 	%f37, %f36, 0fC0000000, %f2;
	abs.f32 	%f3, %f37;
	setp.eq.f32	%p2, %f2, 0f00000000;
	setp.eq.f32	%p3, %f30, 0f3F800000;
	or.pred  	%p4, %p3, %p2;
	mov.f32 	%f34, 0f3F800000;
	mov.f32 	%f208, %f34;
	@%p4 bra 	BB11_16;

	abs.f32 	%f4, %f30;
	setp.gtu.f32	%p5, %f4, 0f7F800000;
	@%p5 bra 	BB11_15;

	abs.f32 	%f5, %f2;
	setp.gtu.f32	%p6, %f5, 0f7F800000;
	@%p6 bra 	BB11_15;
	bra.uni 	BB11_4;

BB11_15:
	add.f32 	%f208, %f2, %f30;
	bra.uni 	BB11_16;

BB11_4:
	setp.eq.f32	%p7, %f5, 0f7F800000;
	@%p7 bra 	BB11_14;
	bra.uni 	BB11_5;

BB11_14:
	setp.gt.f32	%p28, %f4, 0f3F800000;
	selp.b32	%r29, 2139095040, 0, %p28;
	xor.b32  	%r30, %r29, 2139095040;
	setp.lt.f32	%p29, %f2, 0f00000000;
	selp.b32	%r31, %r30, %r29, %p29;
	mov.b32 	 %f116, %r31;
	setp.eq.f32	%p30, %f30, 0fBF800000;
	selp.f32	%f208, 0f3F800000, %f116, %p30;
	bra.uni 	BB11_16;

BB11_5:
	setp.eq.f32	%p8, %f4, 0f7F800000;
	@%p8 bra 	BB11_13;
	bra.uni 	BB11_6;

BB11_13:
	setp.eq.f32	%p24, %f3, 0f3F800000;
	setp.ltu.f32	%p25, %f2, 0f00000000;
	selp.b32	%r26, 0, 2139095040, %p25;
	setp.lt.f32	%p26, %f30, 0f00000000;
	and.pred  	%p27, %p26, %p24;
	or.b32  	%r27, %r26, -2147483648;
	selp.b32	%r28, %r27, %r26, %p27;
	mov.b32 	 %f208, %r28;
	bra.uni 	BB11_16;

BB11_6:
	setp.eq.f32	%p9, %f30, 0f00000000;
	@%p9 bra 	BB11_12;
	bra.uni 	BB11_7;

BB11_12:
	setp.eq.f32	%p22, %f3, 0f3F800000;
	add.f32 	%f115, %f30, %f30;
	mov.b32 	 %r22, %f115;
	selp.b32	%r23, %r22, 0, %p22;
	or.b32  	%r24, %r23, 2139095040;
	setp.lt.f32	%p23, %f2, 0f00000000;
	selp.b32	%r25, %r24, %r23, %p23;
	mov.b32 	 %f208, %r25;
	bra.uni 	BB11_16;

BB11_7:
	setp.geu.f32	%p10, %f30, 0f00000000;
	@%p10 bra 	BB11_9;

	cvt.rzi.f32.f32	%f39, %f2;
	setp.neu.f32	%p11, %f39, %f2;
	mov.f32 	%f208, 0f7FFFFFFF;
	@%p11 bra 	BB11_16;

BB11_9:
	setp.lt.f32	%p12, %f4, 0f00800000;
	selp.f32	%f44, 0fC3170000, 0fC2FE0000, %p12;
	mul.f32 	%f45, %f4, 0f4B800000;
	selp.f32	%f46, %f45, %f4, %p12;
	mov.b32 	 %r14, %f46;
	and.b32  	%r15, %r14, 8388607;
	or.b32  	%r16, %r15, 1065353216;
	mov.b32 	 %f47, %r16;
	shr.u32 	%r17, %r14, 23;
	cvt.rn.f32.u32	%f48, %r17;
	add.f32 	%f49, %f44, %f48;
	setp.gt.f32	%p13, %f47, 0f3FB504F3;
	mul.f32 	%f50, %f47, 0f3F000000;
	add.f32 	%f51, %f49, 0f3F800000;
	selp.f32	%f52, %f50, %f47, %p13;
	selp.f32	%f53, %f51, %f49, %p13;
	add.f32 	%f54, %f52, 0fBF800000;
	add.f32 	%f41, %f52, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f40,%f41;
	// inline asm
	add.f32 	%f55, %f54, %f54;
	mul.f32 	%f56, %f55, %f40;
	mul.f32 	%f57, %f56, %f56;
	mov.f32 	%f58, 0f3C4CAF63;
	mov.f32 	%f59, 0f3B18F0FE;
	fma.rn.f32 	%f60, %f59, %f57, %f58;
	mov.f32 	%f61, 0f3DAAAABD;
	fma.rn.f32 	%f62, %f60, %f57, %f61;
	mul.rn.f32 	%f63, %f62, %f57;
	mul.rn.f32 	%f64, %f63, %f56;
	sub.f32 	%f65, %f54, %f56;
	neg.f32 	%f66, %f56;
	add.f32 	%f67, %f65, %f65;
	fma.rn.f32 	%f68, %f66, %f54, %f67;
	mul.rn.f32 	%f69, %f40, %f68;
	add.f32 	%f70, %f56, %f64;
	sub.f32 	%f71, %f56, %f70;
	add.f32 	%f72, %f64, %f71;
	add.f32 	%f73, %f69, %f72;
	add.f32 	%f74, %f70, %f73;
	sub.f32 	%f75, %f70, %f74;
	add.f32 	%f76, %f73, %f75;
	mov.f32 	%f77, 0f3F317200;
	mul.rn.f32 	%f78, %f53, %f77;
	mov.f32 	%f79, 0f35BFBE8E;
	mul.rn.f32 	%f80, %f53, %f79;
	add.f32 	%f81, %f78, %f74;
	sub.f32 	%f82, %f78, %f81;
	add.f32 	%f83, %f74, %f82;
	add.f32 	%f84, %f76, %f83;
	add.f32 	%f85, %f80, %f84;
	add.f32 	%f86, %f81, %f85;
	sub.f32 	%f87, %f81, %f86;
	add.f32 	%f88, %f85, %f87;
	mul.f32 	%f89, %f2, 0f39000000;
	setp.gt.f32	%p14, %f5, 0f77F684DF;
	selp.f32	%f90, %f89, %f2, %p14;
	mul.rn.f32 	%f91, %f90, %f86;
	neg.f32 	%f92, %f91;
	fma.rn.f32 	%f93, %f90, %f86, %f92;
	fma.rn.f32 	%f94, %f90, %f88, %f93;
	mov.f32 	%f95, 0f00000000;
	fma.rn.f32 	%f96, %f95, %f86, %f94;
	add.rn.f32 	%f97, %f91, %f96;
	neg.f32 	%f98, %f97;
	add.rn.f32 	%f99, %f91, %f98;
	add.rn.f32 	%f100, %f99, %f96;
	mov.b32 	 %r18, %f97;
	setp.eq.s32	%p15, %r18, 1118925336;
	add.s32 	%r19, %r18, -1;
	mov.b32 	 %f101, %r19;
	add.f32 	%f102, %f100, 0f37000000;
	selp.f32	%f103, %f101, %f97, %p15;
	selp.f32	%f6, %f102, %f100, %p15;
	mul.f32 	%f104, %f103, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f105, %f104;
	mov.f32 	%f106, 0fBF317200;
	fma.rn.f32 	%f107, %f105, %f106, %f103;
	mov.f32 	%f108, 0fB5BFBE8E;
	fma.rn.f32 	%f109, %f105, %f108, %f107;
	mul.f32 	%f43, %f109, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f42,%f43;
	// inline asm
	add.f32 	%f110, %f105, 0f00000000;
	ex2.approx.f32 	%f111, %f110;
	mul.f32 	%f112, %f42, %f111;
	setp.lt.f32	%p16, %f103, 0fC2D20000;
	selp.f32	%f113, 0f00000000, %f112, %p16;
	setp.gt.f32	%p17, %f103, 0f42D20000;
	selp.f32	%f207, 0f7F800000, %f113, %p17;
	setp.eq.f32	%p18, %f207, 0f7F800000;
	@%p18 bra 	BB11_11;

	fma.rn.f32 	%f207, %f207, %f6, %f207;

BB11_11:
	setp.eq.f32	%p19, %f3, 0f3F800000;
	setp.lt.f32	%p20, %f30, 0f00000000;
	and.pred  	%p21, %p20, %p19;
	mov.b32 	 %r20, %f207;
	xor.b32  	%r21, %r20, -2147483648;
	mov.b32 	 %f114, %r21;
	selp.f32	%f208, %f114, %f207, %p21;

BB11_16:
	sub.f32 	%f118, %f34, %f208;
	div.full.f32 	%f16, %f1, %f118;
	shl.b64 	%rd7, %rd1, 2;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.f32 	%f17, [%rd8];
	setp.eq.f32	%p31, %f31, 0f3F800000;
	or.pred  	%p33, %p31, %p2;
	mov.f32 	%f210, %f34;
	@%p33 bra 	BB11_31;

	abs.f32 	%f18, %f31;
	setp.gtu.f32	%p34, %f18, 0f7F800000;
	@%p34 bra 	BB11_30;

	abs.f32 	%f19, %f2;
	setp.gtu.f32	%p35, %f19, 0f7F800000;
	@%p35 bra 	BB11_30;
	bra.uni 	BB11_19;

BB11_30:
	add.f32 	%f210, %f2, %f31;
	bra.uni 	BB11_31;

BB11_19:
	setp.eq.f32	%p36, %f19, 0f7F800000;
	@%p36 bra 	BB11_29;
	bra.uni 	BB11_20;

BB11_29:
	setp.gt.f32	%p57, %f18, 0f3F800000;
	selp.b32	%r47, 2139095040, 0, %p57;
	xor.b32  	%r48, %r47, 2139095040;
	setp.lt.f32	%p58, %f2, 0f00000000;
	selp.b32	%r49, %r48, %r47, %p58;
	mov.b32 	 %f197, %r49;
	setp.eq.f32	%p59, %f31, 0fBF800000;
	selp.f32	%f210, 0f3F800000, %f197, %p59;
	bra.uni 	BB11_31;

BB11_20:
	setp.eq.f32	%p37, %f18, 0f7F800000;
	@%p37 bra 	BB11_28;
	bra.uni 	BB11_21;

BB11_28:
	setp.eq.f32	%p53, %f3, 0f3F800000;
	setp.ltu.f32	%p54, %f2, 0f00000000;
	selp.b32	%r44, 0, 2139095040, %p54;
	setp.lt.f32	%p55, %f31, 0f00000000;
	and.pred  	%p56, %p55, %p53;
	or.b32  	%r45, %r44, -2147483648;
	selp.b32	%r46, %r45, %r44, %p56;
	mov.b32 	 %f210, %r46;
	bra.uni 	BB11_31;

BB11_21:
	setp.eq.f32	%p38, %f31, 0f00000000;
	@%p38 bra 	BB11_27;
	bra.uni 	BB11_22;

BB11_27:
	setp.eq.f32	%p51, %f3, 0f3F800000;
	add.f32 	%f196, %f31, %f31;
	mov.b32 	 %r40, %f196;
	selp.b32	%r41, %r40, 0, %p51;
	or.b32  	%r42, %r41, 2139095040;
	setp.lt.f32	%p52, %f2, 0f00000000;
	selp.b32	%r43, %r42, %r41, %p52;
	mov.b32 	 %f210, %r43;
	bra.uni 	BB11_31;

BB11_22:
	setp.geu.f32	%p39, %f31, 0f00000000;
	@%p39 bra 	BB11_24;

	cvt.rzi.f32.f32	%f120, %f2;
	setp.neu.f32	%p40, %f120, %f2;
	mov.f32 	%f210, 0f7FFFFFFF;
	@%p40 bra 	BB11_31;

BB11_24:
	setp.lt.f32	%p41, %f18, 0f00800000;
	selp.f32	%f125, 0fC3170000, 0fC2FE0000, %p41;
	mul.f32 	%f126, %f18, 0f4B800000;
	selp.f32	%f127, %f126, %f18, %p41;
	mov.b32 	 %r32, %f127;
	and.b32  	%r33, %r32, 8388607;
	or.b32  	%r34, %r33, 1065353216;
	mov.b32 	 %f128, %r34;
	shr.u32 	%r35, %r32, 23;
	cvt.rn.f32.u32	%f129, %r35;
	add.f32 	%f130, %f125, %f129;
	setp.gt.f32	%p42, %f128, 0f3FB504F3;
	mul.f32 	%f131, %f128, 0f3F000000;
	add.f32 	%f132, %f130, 0f3F800000;
	selp.f32	%f133, %f131, %f128, %p42;
	selp.f32	%f134, %f132, %f130, %p42;
	add.f32 	%f135, %f133, 0fBF800000;
	add.f32 	%f122, %f133, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f121,%f122;
	// inline asm
	add.f32 	%f136, %f135, %f135;
	mul.f32 	%f137, %f136, %f121;
	mul.f32 	%f138, %f137, %f137;
	mov.f32 	%f139, 0f3C4CAF63;
	mov.f32 	%f140, 0f3B18F0FE;
	fma.rn.f32 	%f141, %f140, %f138, %f139;
	mov.f32 	%f142, 0f3DAAAABD;
	fma.rn.f32 	%f143, %f141, %f138, %f142;
	mul.rn.f32 	%f144, %f143, %f138;
	mul.rn.f32 	%f145, %f144, %f137;
	sub.f32 	%f146, %f135, %f137;
	neg.f32 	%f147, %f137;
	add.f32 	%f148, %f146, %f146;
	fma.rn.f32 	%f149, %f147, %f135, %f148;
	mul.rn.f32 	%f150, %f121, %f149;
	add.f32 	%f151, %f137, %f145;
	sub.f32 	%f152, %f137, %f151;
	add.f32 	%f153, %f145, %f152;
	add.f32 	%f154, %f150, %f153;
	add.f32 	%f155, %f151, %f154;
	sub.f32 	%f156, %f151, %f155;
	add.f32 	%f157, %f154, %f156;
	mov.f32 	%f158, 0f3F317200;
	mul.rn.f32 	%f159, %f134, %f158;
	mov.f32 	%f160, 0f35BFBE8E;
	mul.rn.f32 	%f161, %f134, %f160;
	add.f32 	%f162, %f159, %f155;
	sub.f32 	%f163, %f159, %f162;
	add.f32 	%f164, %f155, %f163;
	add.f32 	%f165, %f157, %f164;
	add.f32 	%f166, %f161, %f165;
	add.f32 	%f167, %f162, %f166;
	sub.f32 	%f168, %f162, %f167;
	add.f32 	%f169, %f166, %f168;
	mul.f32 	%f170, %f2, 0f39000000;
	setp.gt.f32	%p43, %f19, 0f77F684DF;
	selp.f32	%f171, %f170, %f2, %p43;
	mul.rn.f32 	%f172, %f171, %f167;
	neg.f32 	%f173, %f172;
	fma.rn.f32 	%f174, %f171, %f167, %f173;
	fma.rn.f32 	%f175, %f171, %f169, %f174;
	mov.f32 	%f176, 0f00000000;
	fma.rn.f32 	%f177, %f176, %f167, %f175;
	add.rn.f32 	%f178, %f172, %f177;
	neg.f32 	%f179, %f178;
	add.rn.f32 	%f180, %f172, %f179;
	add.rn.f32 	%f181, %f180, %f177;
	mov.b32 	 %r36, %f178;
	setp.eq.s32	%p44, %r36, 1118925336;
	add.s32 	%r37, %r36, -1;
	mov.b32 	 %f182, %r37;
	add.f32 	%f183, %f181, 0f37000000;
	selp.f32	%f184, %f182, %f178, %p44;
	selp.f32	%f20, %f183, %f181, %p44;
	mul.f32 	%f185, %f184, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f186, %f185;
	mov.f32 	%f187, 0fBF317200;
	fma.rn.f32 	%f188, %f186, %f187, %f184;
	mov.f32 	%f189, 0fB5BFBE8E;
	fma.rn.f32 	%f190, %f186, %f189, %f188;
	mul.f32 	%f124, %f190, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f123,%f124;
	// inline asm
	add.f32 	%f191, %f186, 0f00000000;
	ex2.approx.f32 	%f192, %f191;
	mul.f32 	%f193, %f123, %f192;
	setp.lt.f32	%p45, %f184, 0fC2D20000;
	selp.f32	%f194, 0f00000000, %f193, %p45;
	setp.gt.f32	%p46, %f184, 0f42D20000;
	selp.f32	%f209, 0f7F800000, %f194, %p46;
	setp.eq.f32	%p47, %f209, 0f7F800000;
	@%p47 bra 	BB11_26;

	fma.rn.f32 	%f209, %f209, %f20, %f209;

BB11_26:
	setp.eq.f32	%p48, %f3, 0f3F800000;
	setp.lt.f32	%p49, %f31, 0f00000000;
	and.pred  	%p50, %p49, %p48;
	mov.b32 	 %r38, %f209;
	xor.b32  	%r39, %r38, -2147483648;
	mov.b32 	 %f195, %r39;
	selp.f32	%f210, %f195, %f209, %p50;

BB11_31:
	sub.f32 	%f199, %f34, %f210;
	div.full.f32 	%f200, %f17, %f199;
	sqrt.approx.f32 	%f201, %f200;
	add.f32 	%f202, %f201, %f33;
	mul.f32 	%f203, %f16, %f32;
	div.full.f32 	%f204, %f203, %f202;
	add.s64 	%rd10, %rd2, %rd7;
	ld.global.f32 	%f205, [%rd10];
	add.f32 	%f206, %f205, %f204;
	st.global.f32 	[%rd10], %f206;

BB11_32:
	ret;
}

	// .globl	normalize_opencl
.entry normalize_opencl(
	.param .u32 normalize_opencl_param_0,
	.param .u64 .ptr .global .align 4 normalize_opencl_param_1,
	.param .u64 .ptr .global .align 4 normalize_opencl_param_2,
	.param .u64 .ptr .global .align 4 normalize_opencl_param_3,
	.param .u32 normalize_opencl_param_4,
	.param .u32 normalize_opencl_param_5,
	.param .u32 normalize_opencl_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r4, [normalize_opencl_param_0];
	ld.param.u64 	%rd1, [normalize_opencl_param_1];
	ld.param.u64 	%rd2, [normalize_opencl_param_2];
	ld.param.u64 	%rd3, [normalize_opencl_param_3];
	ld.param.u32 	%r2, [normalize_opencl_param_5];
	ld.param.u32 	%r3, [normalize_opencl_param_6];
	mov.b32	%r5, %envreg0;
	mov.u32 	%r6, %ctaid.x;
	add.s32 	%r7, %r6, %r5;
	mov.u32 	%r8, %ctaid.y;
	mov.b32	%r9, %envreg1;
	add.s32 	%r10, %r8, %r9;
	mov.b32	%r11, %envreg6;
	mad.lo.s32 	%r12, %r10, %r11, %r7;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r12, %r13, %r14;
	setp.ge.s32	%p1, %r1, %r4;
	@%p1 bra 	BB12_2;

	div.s32 	%r15, %r1, %r3;
	rem.s32 	%r16, %r15, %r2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd1, %rd4;
	mul.wide.s32 	%rd6, %r16, 4;
	add.s64 	%rd7, %rd2, %rd6;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd5];
	sub.f32 	%f3, %f2, %f1;
	add.s64 	%rd8, %rd3, %rd6;
	ld.global.f32 	%f4, [%rd8];
	sqrt.approx.f32 	%f5, %f4;
	add.f32 	%f6, %f5, 0f358637BD;
	div.full.f32 	%f7, %f3, %f6;
	st.global.f32 	[%rd5], %f7;

BB12_2:
	ret;
}

	// .globl	normalize_delta_opencl
.entry normalize_delta_opencl(
	.param .u32 normalize_delta_opencl_param_0,
	.param .u64 .ptr .global .align 4 normalize_delta_opencl_param_1,
	.param .u64 .ptr .global .align 4 normalize_delta_opencl_param_2,
	.param .u64 .ptr .global .align 4 normalize_delta_opencl_param_3,
	.param .u64 .ptr .global .align 4 normalize_delta_opencl_param_4,
	.param .u64 .ptr .global .align 4 normalize_delta_opencl_param_5,
	.param .u32 normalize_delta_opencl_param_6,
	.param .u32 normalize_delta_opencl_param_7,
	.param .u32 normalize_delta_opencl_param_8,
	.param .u64 .ptr .global .align 4 normalize_delta_opencl_param_9
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<15>;


	ld.param.u32 	%r5, [normalize_delta_opencl_param_0];
	ld.param.u64 	%rd1, [normalize_delta_opencl_param_1];
	ld.param.u64 	%rd2, [normalize_delta_opencl_param_2];
	ld.param.u64 	%rd3, [normalize_delta_opencl_param_3];
	ld.param.u64 	%rd4, [normalize_delta_opencl_param_4];
	ld.param.u64 	%rd5, [normalize_delta_opencl_param_5];
	ld.param.u32 	%r2, [normalize_delta_opencl_param_6];
	ld.param.u32 	%r3, [normalize_delta_opencl_param_7];
	ld.param.u32 	%r4, [normalize_delta_opencl_param_8];
	ld.param.u64 	%rd6, [normalize_delta_opencl_param_9];
	mov.b32	%r6, %envreg0;
	mov.u32 	%r7, %ctaid.x;
	add.s32 	%r8, %r7, %r6;
	mov.u32 	%r9, %ctaid.y;
	mov.b32	%r10, %envreg1;
	add.s32 	%r11, %r9, %r10;
	mov.b32	%r12, %envreg6;
	mad.lo.s32 	%r13, %r11, %r12, %r8;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r1, %r5;
	@%p1 bra 	BB13_2;

	div.s32 	%r16, %r1, %r4;
	rem.s32 	%r17, %r16, %r3;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	mul.wide.s32 	%rd9, %r17, 4;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.f32 	%f1, [%rd10];
	add.f32 	%f2, %f1, 0f3727C5AC;
	sqrt.approx.f32 	%f3, %f2;
	ld.global.f32 	%f4, [%rd8];
	div.full.f32 	%f5, %f4, %f3;
	add.s64 	%rd11, %rd5, %rd9;
	ld.global.f32 	%f6, [%rd11];
	add.f32 	%f7, %f6, %f6;
	add.s64 	%rd12, %rd1, %rd7;
	add.s64 	%rd13, %rd2, %rd9;
	ld.global.f32 	%f8, [%rd13];
	ld.global.f32 	%f9, [%rd12];
	sub.f32 	%f10, %f9, %f8;
	mul.f32 	%f11, %f7, %f10;
	mul.lo.s32 	%r18, %r4, %r2;
	cvt.rn.f32.s32	%f12, %r18;
	div.full.f32 	%f13, %f11, %f12;
	add.f32 	%f14, %f5, %f13;
	add.s64 	%rd14, %rd4, %rd9;
	ld.global.f32 	%f15, [%rd14];
	div.full.f32 	%f16, %f15, %f12;
	add.f32 	%f17, %f14, %f16;
	st.global.f32 	[%rd8], %f17;

BB13_2:
	ret;
}

	// .globl	variance_delta_opencl
.entry variance_delta_opencl(
	.param .u64 .ptr .global .align 4 variance_delta_opencl_param_0,
	.param .u64 .ptr .global .align 4 variance_delta_opencl_param_1,
	.param .u64 .ptr .global .align 4 variance_delta_opencl_param_2,
	.param .u64 .ptr .global .align 4 variance_delta_opencl_param_3,
	.param .u32 variance_delta_opencl_param_4,
	.param .u32 variance_delta_opencl_param_5,
	.param .u32 variance_delta_opencl_param_6,
	.param .u64 .ptr .global .align 4 variance_delta_opencl_param_7
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<152>;
	.reg .b32 	%r<59>;
	.reg .b64 	%rd<34>;


	ld.param.u64 	%rd7, [variance_delta_opencl_param_0];
	ld.param.u64 	%rd8, [variance_delta_opencl_param_1];
	ld.param.u64 	%rd9, [variance_delta_opencl_param_2];
	ld.param.u64 	%rd10, [variance_delta_opencl_param_3];
	ld.param.u32 	%r18, [variance_delta_opencl_param_4];
	ld.param.u32 	%r19, [variance_delta_opencl_param_5];
	ld.param.u32 	%r20, [variance_delta_opencl_param_6];
	ld.param.u64 	%rd11, [variance_delta_opencl_param_7];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r21, %ctaid.x;
	add.s32 	%r22, %r21, %r1;
	mov.u32 	%r23, %ctaid.y;
	mov.b32	%r2, %envreg1;
	add.s32 	%r24, %r23, %r2;
	mov.b32	%r3, %envreg6;
	mad.lo.s32 	%r25, %r24, %r3, %r22;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r5, %r25, %r26, %r4;
	setp.ge.s32	%p1, %r5, %r19;
	@%p1 bra 	BB14_27;

	cvt.s64.s32	%rd1, %r5;
	mul.wide.s32 	%rd12, %r5, 4;
	add.s64 	%rd2, %rd11, %rd12;
	mov.u32 	%r54, 0;
	st.global.u32 	[%rd2], %r54;
	mov.f32 	%f148, 0f00000000;
	setp.lt.s32	%p2, %r18, 1;
	@%p2 bra 	BB14_14;

	and.b32  	%r6, %r20, 3;
	mad.lo.s32 	%r33, %r3, %r24, %r22;
	mad.lo.s32 	%r7, %r26, %r33, %r4;
	mov.f32 	%f148, 0f00000000;

BB14_3:
	setp.lt.s32	%p3, %r20, 1;
	@%p3 bra 	BB14_13;

	mad.lo.s32 	%r38, %r54, %r19, %r5;
	mul.lo.s32 	%r9, %r38, %r20;
	mov.u32 	%r57, 0;
	setp.eq.s32	%p4, %r6, 0;
	@%p4 bra 	BB14_10;

	setp.eq.s32	%p5, %r6, 1;
	@%p5 bra 	BB14_9;

	setp.eq.s32	%p6, %r6, 2;
	@%p6 bra 	BB14_8;

	mul.wide.s32 	%rd13, %r9, 4;
	add.s64 	%rd14, %rd8, %rd13;
	add.s64 	%rd15, %rd7, %rd13;
	shl.b64 	%rd16, %rd1, 2;
	add.s64 	%rd17, %rd9, %rd16;
	ld.global.f32 	%f26, [%rd17];
	ld.global.f32 	%f27, [%rd15];
	sub.f32 	%f28, %f27, %f26;
	ld.global.f32 	%f29, [%rd14];
	fma.rn.f32 	%f148, %f29, %f28, %f148;
	st.global.f32 	[%rd2], %f148;
	mov.u32 	%r57, 1;

BB14_8:
	add.s32 	%r40, %r57, %r9;
	mul.wide.s32 	%rd18, %r40, 4;
	add.s64 	%rd19, %rd8, %rd18;
	add.s64 	%rd20, %rd7, %rd18;
	shl.b64 	%rd21, %rd1, 2;
	add.s64 	%rd22, %rd9, %rd21;
	ld.global.f32 	%f30, [%rd22];
	ld.global.f32 	%f31, [%rd20];
	sub.f32 	%f32, %f31, %f30;
	ld.global.f32 	%f33, [%rd19];
	fma.rn.f32 	%f148, %f33, %f32, %f148;
	st.global.f32 	[%rd2], %f148;
	add.s32 	%r57, %r57, 1;

BB14_9:
	add.s32 	%r41, %r57, %r9;
	mul.wide.s32 	%rd23, %r41, 4;
	add.s64 	%rd24, %rd8, %rd23;
	add.s64 	%rd25, %rd7, %rd23;
	shl.b64 	%rd26, %rd1, 2;
	add.s64 	%rd27, %rd9, %rd26;
	ld.global.f32 	%f34, [%rd27];
	ld.global.f32 	%f35, [%rd25];
	sub.f32 	%f36, %f35, %f34;
	ld.global.f32 	%f37, [%rd24];
	fma.rn.f32 	%f148, %f37, %f36, %f148;
	st.global.f32 	[%rd2], %f148;
	add.s32 	%r57, %r57, 1;

BB14_10:
	setp.lt.u32	%p7, %r20, 4;
	@%p7 bra 	BB14_13;

	mad.lo.s32 	%r42, %r19, %r54, %r7;
	mad.lo.s32 	%r43, %r20, %r42, %r57;
	mul.wide.s32 	%rd33, %r43, 4;
	shl.b64 	%rd28, %rd1, 2;
	add.s64 	%rd4, %rd9, %rd28;

BB14_12:
	add.s64 	%rd29, %rd8, %rd33;
	add.s64 	%rd30, %rd7, %rd33;
	ld.global.f32 	%f38, [%rd4];
	ld.global.f32 	%f39, [%rd30];
	sub.f32 	%f40, %f39, %f38;
	ld.global.f32 	%f41, [%rd29];
	fma.rn.f32 	%f42, %f41, %f40, %f148;
	st.global.f32 	[%rd2], %f42;
	ld.global.f32 	%f43, [%rd4];
	ld.global.f32 	%f44, [%rd30+4];
	sub.f32 	%f45, %f44, %f43;
	ld.global.f32 	%f46, [%rd29+4];
	fma.rn.f32 	%f47, %f46, %f45, %f42;
	st.global.f32 	[%rd2], %f47;
	ld.global.f32 	%f48, [%rd4];
	ld.global.f32 	%f49, [%rd30+8];
	sub.f32 	%f50, %f49, %f48;
	ld.global.f32 	%f51, [%rd29+8];
	fma.rn.f32 	%f52, %f51, %f50, %f47;
	st.global.f32 	[%rd2], %f52;
	ld.global.f32 	%f53, [%rd4];
	ld.global.f32 	%f54, [%rd30+12];
	sub.f32 	%f55, %f54, %f53;
	ld.global.f32 	%f56, [%rd29+12];
	fma.rn.f32 	%f148, %f56, %f55, %f52;
	st.global.f32 	[%rd2], %f148;
	add.s64 	%rd33, %rd33, 16;
	add.s32 	%r57, %r57, 4;
	setp.lt.s32	%p8, %r57, %r20;
	@%p8 bra 	BB14_12;

BB14_13:
	add.s32 	%r54, %r54, 1;
	setp.lt.s32	%p9, %r54, %r18;
	@%p9 bra 	BB14_3;

BB14_14:
	shl.b64 	%rd31, %rd1, 2;
	add.s64 	%rd32, %rd10, %rd31;
	ld.global.f32 	%f58, [%rd32];
	add.f32 	%f12, %f58, 0f3727C5AC;
	mov.f32 	%f59, 0fBF400000;
	cvt.rzi.f32.f32	%f60, %f59;
	fma.rn.f32 	%f61, %f60, 0fC0000000, 0fBFC00000;
	abs.f32 	%f13, %f61;
	setp.eq.f32	%p10, %f12, 0f3F800000;
	mov.f32 	%f151, 0f3F800000;
	@%p10 bra 	BB14_26;

	abs.f32 	%f14, %f12;
	setp.gtu.f32	%p11, %f14, 0f7F800000;
	@%p11 bra 	BB14_25;
	bra.uni 	BB14_16;

BB14_25:
	add.f32 	%f151, %f12, 0fBFC00000;
	bra.uni 	BB14_26;

BB14_16:
	setp.eq.f32	%p12, %f14, 0f7F800000;
	@%p12 bra 	BB14_24;
	bra.uni 	BB14_17;

BB14_24:
	setp.eq.f32	%p26, %f13, 0f3F800000;
	setp.lt.f32	%p27, %f12, 0f00000000;
	and.pred  	%p28, %p27, %p26;
	selp.f32	%f151, 0f80000000, 0f00000000, %p28;
	bra.uni 	BB14_26;

BB14_17:
	setp.eq.f32	%p13, %f12, 0f00000000;
	@%p13 bra 	BB14_23;
	bra.uni 	BB14_18;

BB14_23:
	setp.eq.f32	%p25, %f13, 0f3F800000;
	add.f32 	%f139, %f12, %f12;
	mov.b32 	 %r52, %f139;
	or.b32  	%r53, %r52, 2139095040;
	mov.b32 	 %f140, %r53;
	selp.f32	%f151, %f140, 0f7F800000, %p25;
	bra.uni 	BB14_26;

BB14_18:
	setp.geu.f32	%p14, %f12, 0f00000000;
	@%p14 bra 	BB14_20;

	mov.f32 	%f63, 0fBFC00000;
	cvt.rzi.f32.f32	%f64, %f63;
	setp.neu.f32	%p15, %f64, 0fBFC00000;
	mov.f32 	%f151, 0f7FFFFFFF;
	@%p15 bra 	BB14_26;

BB14_20:
	setp.lt.f32	%p16, %f14, 0f00800000;
	selp.f32	%f69, 0fC3170000, 0fC2FE0000, %p16;
	mul.f32 	%f70, %f14, 0f4B800000;
	selp.f32	%f71, %f70, %f14, %p16;
	mov.b32 	 %r44, %f71;
	and.b32  	%r45, %r44, 8388607;
	or.b32  	%r46, %r45, 1065353216;
	mov.b32 	 %f72, %r46;
	shr.u32 	%r47, %r44, 23;
	cvt.rn.f32.u32	%f73, %r47;
	add.f32 	%f74, %f69, %f73;
	setp.gt.f32	%p17, %f72, 0f3FB504F3;
	mul.f32 	%f75, %f72, 0f3F000000;
	add.f32 	%f76, %f74, 0f3F800000;
	selp.f32	%f77, %f75, %f72, %p17;
	selp.f32	%f78, %f76, %f74, %p17;
	add.f32 	%f79, %f77, 0fBF800000;
	add.f32 	%f66, %f77, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f65,%f66;
	// inline asm
	add.f32 	%f80, %f79, %f79;
	mul.f32 	%f81, %f80, %f65;
	mul.f32 	%f82, %f81, %f81;
	mov.f32 	%f83, 0f3C4CAF63;
	mov.f32 	%f84, 0f3B18F0FE;
	fma.rn.f32 	%f85, %f84, %f82, %f83;
	mov.f32 	%f86, 0f3DAAAABD;
	fma.rn.f32 	%f87, %f85, %f82, %f86;
	mul.rn.f32 	%f88, %f87, %f82;
	mul.rn.f32 	%f89, %f88, %f81;
	sub.f32 	%f90, %f79, %f81;
	neg.f32 	%f91, %f81;
	add.f32 	%f92, %f90, %f90;
	fma.rn.f32 	%f93, %f91, %f79, %f92;
	mul.rn.f32 	%f94, %f65, %f93;
	add.f32 	%f95, %f81, %f89;
	sub.f32 	%f96, %f81, %f95;
	add.f32 	%f97, %f89, %f96;
	add.f32 	%f98, %f94, %f97;
	add.f32 	%f99, %f95, %f98;
	sub.f32 	%f100, %f95, %f99;
	add.f32 	%f101, %f98, %f100;
	mov.f32 	%f102, 0f3F317200;
	mul.rn.f32 	%f103, %f78, %f102;
	mov.f32 	%f104, 0f35BFBE8E;
	mul.rn.f32 	%f105, %f78, %f104;
	add.f32 	%f106, %f103, %f99;
	sub.f32 	%f107, %f103, %f106;
	add.f32 	%f108, %f99, %f107;
	add.f32 	%f109, %f101, %f108;
	add.f32 	%f110, %f105, %f109;
	add.f32 	%f111, %f106, %f110;
	sub.f32 	%f112, %f106, %f111;
	add.f32 	%f113, %f110, %f112;
	mov.f32 	%f114, 0fBFC00000;
	mul.rn.f32 	%f115, %f114, %f111;
	neg.f32 	%f116, %f115;
	fma.rn.f32 	%f117, %f114, %f111, %f116;
	fma.rn.f32 	%f118, %f114, %f113, %f117;
	mov.f32 	%f119, 0f00000000;
	fma.rn.f32 	%f120, %f119, %f111, %f118;
	add.rn.f32 	%f121, %f115, %f120;
	neg.f32 	%f122, %f121;
	add.rn.f32 	%f123, %f115, %f122;
	add.rn.f32 	%f124, %f123, %f120;
	mov.b32 	 %r48, %f121;
	setp.eq.s32	%p18, %r48, 1118925336;
	add.s32 	%r49, %r48, -1;
	mov.b32 	 %f125, %r49;
	add.f32 	%f126, %f124, 0f37000000;
	selp.f32	%f127, %f125, %f121, %p18;
	selp.f32	%f15, %f126, %f124, %p18;
	mul.f32 	%f128, %f127, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f129, %f128;
	mov.f32 	%f130, 0fBF317200;
	fma.rn.f32 	%f131, %f129, %f130, %f127;
	mov.f32 	%f132, 0fB5BFBE8E;
	fma.rn.f32 	%f133, %f129, %f132, %f131;
	mul.f32 	%f68, %f133, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f67,%f68;
	// inline asm
	add.f32 	%f134, %f129, 0f00000000;
	ex2.approx.f32 	%f135, %f134;
	mul.f32 	%f136, %f67, %f135;
	setp.lt.f32	%p19, %f127, 0fC2D20000;
	selp.f32	%f137, 0f00000000, %f136, %p19;
	setp.gt.f32	%p20, %f127, 0f42D20000;
	selp.f32	%f150, 0f7F800000, %f137, %p20;
	setp.eq.f32	%p21, %f150, 0f7F800000;
	@%p21 bra 	BB14_22;

	fma.rn.f32 	%f150, %f150, %f15, %f150;

BB14_22:
	setp.eq.f32	%p22, %f13, 0f3F800000;
	setp.lt.f32	%p23, %f12, 0f00000000;
	and.pred  	%p24, %p23, %p22;
	mov.b32 	 %r50, %f150;
	xor.b32  	%r51, %r50, -2147483648;
	mov.b32 	 %f138, %r51;
	selp.f32	%f151, %f138, %f150, %p24;

BB14_26:
	mul.f32 	%f141, %f151, 0fBF000000;
	mul.rn.f32 	%f142, %f148, %f141;
	st.global.f32 	[%rd2], %f142;

BB14_27:
	ret;
}

	// .globl	accumulate_opencl
.entry accumulate_opencl(
	.param .u64 .ptr .global .align 4 accumulate_opencl_param_0,
	.param .u32 accumulate_opencl_param_1,
	.param .u32 accumulate_opencl_param_2,
	.param .u64 .ptr .global .align 4 accumulate_opencl_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<26>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd4, [accumulate_opencl_param_0];
	ld.param.u32 	%r20, [accumulate_opencl_param_1];
	ld.param.u32 	%r21, [accumulate_opencl_param_2];
	ld.param.u64 	%rd5, [accumulate_opencl_param_3];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r2, %ctaid.x;
	add.s32 	%r22, %r2, %r1;
	mov.u32 	%r3, %ctaid.y;
	mov.b32	%r4, %envreg1;
	add.s32 	%r23, %r3, %r4;
	mov.b32	%r5, %envreg6;
	mad.lo.s32 	%r24, %r23, %r5, %r22;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r8, %r24, %r6, %r7;
	setp.ge.s32	%p1, %r8, %r21;
	@%p1 bra 	BB15_11;

	cvt.s64.s32	%rd1, %r8;
	mul.wide.s32 	%rd6, %r8, 4;
	add.s64 	%rd2, %rd5, %rd6;
	mov.u32 	%r39, 0;
	st.global.u32 	[%rd2], %r39;
	setp.lt.s32	%p2, %r20, 1;
	@%p2 bra 	BB15_11;

	and.b32  	%r29, %r20, 3;
	mov.f32 	%f22, 0f00000000;
	setp.eq.s32	%p3, %r29, 0;
	@%p3 bra 	BB15_8;

	setp.eq.s32	%p4, %r29, 1;
	@%p4 bra 	BB15_7;

	setp.eq.s32	%p5, %r29, 2;
	@%p5 bra 	BB15_6;

	shl.b64 	%rd7, %rd1, 2;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.f32 	%f12, [%rd8];
	add.f32 	%f22, %f12, 0f00000000;
	st.global.f32 	[%rd2], %f22;
	mov.u32 	%r39, 1;

BB15_6:
	neg.s32 	%r31, %r39;
	and.b32  	%r32, %r31, %r21;
	add.s32 	%r33, %r32, %r8;
	mul.wide.s32 	%rd9, %r33, 4;
	add.s64 	%rd10, %rd4, %rd9;
	ld.global.f32 	%f13, [%rd10];
	add.f32 	%f22, %f13, %f22;
	st.global.f32 	[%rd2], %f22;
	add.s32 	%r39, %r39, 1;

BB15_7:
	mad.lo.s32 	%r34, %r39, %r21, %r8;
	mul.wide.s32 	%rd11, %r34, 4;
	add.s64 	%rd12, %rd4, %rd11;
	ld.global.f32 	%f14, [%rd12];
	add.f32 	%f22, %f14, %f22;
	st.global.f32 	[%rd2], %f22;
	add.s32 	%r39, %r39, 1;

BB15_8:
	setp.lt.u32	%p6, %r20, 4;
	@%p6 bra 	BB15_11;

	mad.lo.s32 	%r37, %r5, %r23, %r22;
	mad.lo.s32 	%r38, %r6, %r37, %r7;
	shl.b32 	%r14, %r21, 2;
	mad.lo.s32 	%r42, %r39, %r21, %r38;
	mul.wide.s32 	%rd3, %r21, 4;

BB15_10:
	mul.wide.s32 	%rd13, %r42, 4;
	add.s64 	%rd14, %rd4, %rd13;
	ld.global.f32 	%f15, [%rd14];
	add.f32 	%f16, %f15, %f22;
	st.global.f32 	[%rd2], %f16;
	add.s64 	%rd15, %rd14, %rd3;
	ld.global.f32 	%f17, [%rd15];
	add.f32 	%f18, %f17, %f16;
	st.global.f32 	[%rd2], %f18;
	add.s64 	%rd16, %rd15, %rd3;
	ld.global.f32 	%f19, [%rd16];
	add.f32 	%f20, %f19, %f18;
	st.global.f32 	[%rd2], %f20;
	add.s64 	%rd17, %rd16, %rd3;
	ld.global.f32 	%f21, [%rd17];
	add.f32 	%f22, %f21, %f20;
	st.global.f32 	[%rd2], %f22;
	add.s32 	%r42, %r42, %r14;
	add.s32 	%r39, %r39, 4;
	setp.lt.s32	%p7, %r39, %r20;
	@%p7 bra 	BB15_10;

BB15_11:
	ret;
}

	// .globl	fast_mean_delta_opencl
.entry fast_mean_delta_opencl(
	.param .u64 .ptr .global .align 4 fast_mean_delta_opencl_param_0,
	.param .u64 .ptr .global .align 4 fast_mean_delta_opencl_param_1,
	.param .u32 fast_mean_delta_opencl_param_2,
	.param .u32 fast_mean_delta_opencl_param_3,
	.param .u32 fast_mean_delta_opencl_param_4,
	.param .u64 .ptr .global .align 4 fast_mean_delta_opencl_param_5
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<95>;
	.reg .b32 	%r<63>;
	.reg .b64 	%rd<30>;
	// demoted variable
	.shared .align 4 .b8 fast_mean_delta_opencl$loca[2048];

	ld.param.u64 	%rd8, [fast_mean_delta_opencl_param_0];
	ld.param.u64 	%rd9, [fast_mean_delta_opencl_param_1];
	ld.param.u32 	%r23, [fast_mean_delta_opencl_param_2];
	ld.param.u32 	%r24, [fast_mean_delta_opencl_param_3];
	ld.param.u32 	%r25, [fast_mean_delta_opencl_param_4];
	ld.param.u64 	%rd10, [fast_mean_delta_opencl_param_5];
	mov.u32 	%r26, %tid.x;
	mul.wide.s32 	%rd11, %r26, 4;
	mov.u64 	%rd29, fast_mean_delta_opencl$loca;
	add.s64 	%rd13, %rd29, %rd11;
	mov.u32 	%r27, 0;
	st.shared.u32 	[%rd13], %r27;
	mov.u32 	%r1, %ctaid.x;
	mov.b32	%r2, %envreg0;
	add.s32 	%r3, %r1, %r2;
	setp.lt.s32	%p1, %r23, 1;
	@%p1 bra 	BB16_29;

	mov.f32 	%f1, 0f00000000;
	mov.u32 	%r56, %r27;

BB16_2:
	setp.lt.s32	%p2, %r25, 1;
	@%p2 bra 	BB16_28;

	mad.lo.s32 	%r33, %r56, %r24, %r3;
	mul.lo.s32 	%r6, %r33, %r25;
	add.s32 	%r34, %r25, -1;
	shr.u32 	%r35, %r34, 9;
	add.s32 	%r36, %r35, 1;
	and.b32  	%r32, %r36, 3;
	mov.u32 	%r57, 0;
	mov.f32 	%f33, 0f00000000;
	setp.eq.s32	%p3, %r32, 0;
	@%p3 bra 	BB16_4;

	setp.eq.s32	%p4, %r32, 1;
	@%p4 bra 	BB16_13;

	setp.eq.s32	%p5, %r32, 2;
	@%p5 bra 	BB16_10;

	mov.f32 	%f80, 0f00000000;
	setp.ge.s32	%p6, %r26, %r25;
	@%p6 bra 	BB16_9;

	add.s32 	%r37, %r26, %r6;
	mul.wide.s32 	%rd14, %r37, 4;
	add.s64 	%rd15, %rd8, %rd14;
	ld.global.f32 	%f80, [%rd15];

BB16_9:
	add.f32 	%f1, %f80, %f1;
	mov.u32 	%r57, 512;

BB16_10:
	add.s32 	%r9, %r57, %r26;
	mov.f32 	%f82, 0f00000000;
	setp.ge.s32	%p7, %r9, %r25;
	@%p7 bra 	BB16_12;

	add.s32 	%r40, %r9, %r6;
	mul.wide.s32 	%rd16, %r40, 4;
	add.s64 	%rd17, %rd8, %rd16;
	ld.global.f32 	%f82, [%rd17];

BB16_12:
	add.f32 	%f1, %f82, %f1;
	add.s32 	%r57, %r57, 512;

BB16_13:
	add.s32 	%r42, %r57, %r26;
	add.s32 	%r12, %r42, %r6;
	mov.f32 	%f84, 0f00000000;
	setp.ge.s32	%p8, %r42, %r25;
	@%p8 bra 	BB16_15;

	mul.wide.s32 	%rd18, %r12, 4;
	add.s64 	%rd19, %rd8, %rd18;
	ld.global.f32 	%f84, [%rd19];

BB16_15:
	add.f32 	%f85, %f84, %f1;
	add.s32 	%r57, %r57, 512;
	mov.f32 	%f1, %f85;
	bra.uni 	BB16_16;

BB16_4:
	mov.f32 	%f85, %f1;
	mov.f32 	%f1, %f33;

BB16_16:
	setp.lt.u32	%p9, %r36, 4;
	@%p9 bra 	BB16_27;

	add.s32 	%r60, %r26, %r57;
	mad.lo.s32 	%r47, %r24, %r56, %r3;
	mad.lo.s32 	%r48, %r25, %r47, %r60;
	mul.wide.s32 	%rd20, %r48, 4;
	add.s64 	%rd28, %rd8, %rd20;
	mov.f32 	%f1, %f85;

BB16_18:
	mov.f32 	%f91, 0f00000000;
	setp.ge.s32	%p10, %r60, %r25;
	mov.f32 	%f88, %f91;
	@%p10 bra 	BB16_20;

	ld.global.f32 	%f88, [%rd28];

BB16_20:
	add.f32 	%f18, %f88, %f1;
	add.s32 	%r49, %r60, 512;
	setp.ge.s32	%p11, %r49, %r25;
	mov.f32 	%f89, %f91;
	@%p11 bra 	BB16_22;

	ld.global.f32 	%f89, [%rd28+2048];

BB16_22:
	add.f32 	%f21, %f89, %f18;
	add.s32 	%r50, %r60, 1024;
	setp.ge.s32	%p12, %r50, %r25;
	mov.f32 	%f90, %f91;
	@%p12 bra 	BB16_24;

	ld.global.f32 	%f90, [%rd28+4096];

BB16_24:
	add.f32 	%f24, %f90, %f21;
	add.s32 	%r51, %r60, 1536;
	setp.ge.s32	%p13, %r51, %r25;
	@%p13 bra 	BB16_26;

	ld.global.f32 	%f91, [%rd28+6144];

BB16_26:
	add.f32 	%f1, %f91, %f24;
	add.s32 	%r60, %r60, 2048;
	add.s64 	%rd28, %rd28, 8192;
	add.s32 	%r57, %r57, 2048;
	setp.lt.s32	%p14, %r57, %r25;
	@%p14 bra 	BB16_18;

BB16_27:
	mov.u64 	%rd22, fast_mean_delta_opencl$loca;
	add.s64 	%rd23, %rd22, %rd11;
	st.shared.f32 	[%rd23], %f1;

BB16_28:
	add.s32 	%r56, %r56, 1;
	setp.lt.s32	%p15, %r56, %r23;
	@%p15 bra 	BB16_2;

BB16_29:
	bar.sync 	0;
	setp.ne.s32	%p16, %r26, 0;
	@%p16 bra 	BB16_33;

	cvt.s64.s32	%rd4, %r3;
	mul.wide.s32 	%rd25, %r3, 4;
	add.s64 	%rd5, %rd10, %rd25;
	st.global.u32 	[%rd5], %r27;
	mov.f32 	%f94, 0f00000000;
	mov.u32 	%r62, -512;

BB16_31:
	ld.shared.f32 	%f42, [%rd29];
	add.f32 	%f43, %f42, %f94;
	ld.shared.f32 	%f44, [%rd29+4];
	add.f32 	%f45, %f44, %f43;
	ld.shared.f32 	%f46, [%rd29+8];
	add.f32 	%f47, %f46, %f45;
	ld.shared.f32 	%f48, [%rd29+12];
	add.f32 	%f49, %f48, %f47;
	ld.shared.f32 	%f50, [%rd29+16];
	add.f32 	%f51, %f50, %f49;
	ld.shared.f32 	%f52, [%rd29+20];
	add.f32 	%f53, %f52, %f51;
	ld.shared.f32 	%f54, [%rd29+24];
	add.f32 	%f55, %f54, %f53;
	ld.shared.f32 	%f56, [%rd29+28];
	add.f32 	%f57, %f56, %f55;
	ld.shared.f32 	%f58, [%rd29+32];
	add.f32 	%f59, %f58, %f57;
	ld.shared.f32 	%f60, [%rd29+36];
	add.f32 	%f61, %f60, %f59;
	ld.shared.f32 	%f62, [%rd29+40];
	add.f32 	%f63, %f62, %f61;
	ld.shared.f32 	%f64, [%rd29+44];
	add.f32 	%f65, %f64, %f63;
	ld.shared.f32 	%f66, [%rd29+48];
	add.f32 	%f67, %f66, %f65;
	ld.shared.f32 	%f68, [%rd29+52];
	add.f32 	%f69, %f68, %f67;
	ld.shared.f32 	%f70, [%rd29+56];
	add.f32 	%f71, %f70, %f69;
	ld.shared.f32 	%f72, [%rd29+60];
	add.f32 	%f94, %f72, %f71;
	add.s64 	%rd29, %rd29, 64;
	add.s32 	%r62, %r62, 16;
	setp.ne.s32	%p17, %r62, 0;
	@%p17 bra 	BB16_31;

	st.global.f32 	[%rd5], %f94;
	shl.b64 	%rd26, %rd4, 2;
	add.s64 	%rd27, %rd9, %rd26;
	ld.global.f32 	%f73, [%rd27];
	add.f32 	%f74, %f73, 0f3727C5AC;
	sqrt.approx.f32 	%f75, %f74;
	mov.f32 	%f76, 0fBF800000;
	div.full.f32 	%f77, %f76, %f75;
	mul.rn.f32 	%f78, %f94, %f77;
	st.global.f32 	[%rd5], %f78;

BB16_33:
	ret;
}

	// .globl	fast_variance_delta_opencl
.entry fast_variance_delta_opencl(
	.param .u64 .ptr .global .align 4 fast_variance_delta_opencl_param_0,
	.param .u64 .ptr .global .align 4 fast_variance_delta_opencl_param_1,
	.param .u64 .ptr .global .align 4 fast_variance_delta_opencl_param_2,
	.param .u64 .ptr .global .align 4 fast_variance_delta_opencl_param_3,
	.param .u32 fast_variance_delta_opencl_param_4,
	.param .u32 fast_variance_delta_opencl_param_5,
	.param .u32 fast_variance_delta_opencl_param_6,
	.param .u64 .ptr .global .align 4 fast_variance_delta_opencl_param_7
)
{
	.reg .pred 	%p<37>;
	.reg .f32 	%f<217>;
	.reg .b32 	%r<74>;
	.reg .b64 	%rd<56>;
	// demoted variable
	.shared .align 4 .b8 fast_variance_delta_opencl$loca[2048];

	ld.param.u64 	%rd8, [fast_variance_delta_opencl_param_0];
	ld.param.u64 	%rd9, [fast_variance_delta_opencl_param_1];
	ld.param.u64 	%rd10, [fast_variance_delta_opencl_param_2];
	ld.param.u64 	%rd11, [fast_variance_delta_opencl_param_3];
	ld.param.u32 	%r22, [fast_variance_delta_opencl_param_4];
	ld.param.u32 	%r23, [fast_variance_delta_opencl_param_5];
	ld.param.u32 	%r24, [fast_variance_delta_opencl_param_6];
	ld.param.u64 	%rd12, [fast_variance_delta_opencl_param_7];
	mov.u32 	%r25, %tid.x;
	mul.wide.s32 	%rd13, %r25, 4;
	mov.u64 	%rd55, fast_variance_delta_opencl$loca;
	add.s64 	%rd15, %rd55, %rd13;
	mov.u32 	%r26, 0;
	st.shared.u32 	[%rd15], %r26;
	mov.u32 	%r1, %ctaid.x;
	mov.b32	%r2, %envreg0;
	add.s32 	%r27, %r1, %r2;
	cvt.s64.s32	%rd1, %r27;
	setp.lt.s32	%p1, %r22, 1;
	@%p1 bra 	BB17_29;

	mov.f32 	%f1, 0f00000000;
	mov.u32 	%r67, %r26;

BB17_2:
	setp.lt.s32	%p2, %r24, 1;
	@%p2 bra 	BB17_28;

	cvt.u32.u64	%r33, %rd1;
	mad.lo.s32 	%r34, %r67, %r23, %r33;
	mul.lo.s32 	%r5, %r34, %r24;
	add.s32 	%r35, %r24, -1;
	shr.u32 	%r36, %r35, 9;
	add.s32 	%r37, %r36, 1;
	and.b32  	%r32, %r37, 3;
	mov.u32 	%r68, 0;
	mov.f32 	%f45, 0f00000000;
	setp.eq.s32	%p3, %r32, 0;
	@%p3 bra 	BB17_4;

	setp.eq.s32	%p4, %r32, 1;
	@%p4 bra 	BB17_13;

	setp.eq.s32	%p5, %r32, 2;
	@%p5 bra 	BB17_10;

	mov.f32 	%f200, 0f00000000;
	setp.ge.s32	%p6, %r25, %r24;
	@%p6 bra 	BB17_9;

	add.s32 	%r38, %r25, %r5;
	mul.wide.s32 	%rd16, %r38, 4;
	add.s64 	%rd17, %rd9, %rd16;
	add.s64 	%rd18, %rd8, %rd16;
	shl.b64 	%rd19, %rd1, 2;
	add.s64 	%rd20, %rd10, %rd19;
	ld.global.f32 	%f47, [%rd20];
	ld.global.f32 	%f48, [%rd18];
	sub.f32 	%f49, %f48, %f47;
	ld.global.f32 	%f50, [%rd17];
	mul.f32 	%f200, %f50, %f49;

BB17_9:
	add.f32 	%f1, %f200, %f1;
	mov.u32 	%r68, 512;

BB17_10:
	add.s32 	%r8, %r68, %r25;
	mov.f32 	%f202, 0f00000000;
	setp.ge.s32	%p7, %r8, %r24;
	@%p7 bra 	BB17_12;

	add.s32 	%r41, %r8, %r5;
	mul.wide.s32 	%rd21, %r41, 4;
	add.s64 	%rd22, %rd9, %rd21;
	add.s64 	%rd23, %rd8, %rd21;
	shl.b64 	%rd24, %rd1, 2;
	add.s64 	%rd25, %rd10, %rd24;
	ld.global.f32 	%f52, [%rd25];
	ld.global.f32 	%f53, [%rd23];
	sub.f32 	%f54, %f53, %f52;
	ld.global.f32 	%f55, [%rd22];
	mul.f32 	%f202, %f55, %f54;

BB17_12:
	add.f32 	%f1, %f202, %f1;
	add.s32 	%r68, %r68, 512;

BB17_13:
	add.s32 	%r43, %r68, %r25;
	add.s32 	%r11, %r43, %r5;
	mov.f32 	%f204, 0f00000000;
	setp.ge.s32	%p8, %r43, %r24;
	@%p8 bra 	BB17_15;

	mul.wide.s32 	%rd26, %r11, 4;
	add.s64 	%rd27, %rd9, %rd26;
	add.s64 	%rd28, %rd8, %rd26;
	shl.b64 	%rd29, %rd1, 2;
	add.s64 	%rd30, %rd10, %rd29;
	ld.global.f32 	%f57, [%rd30];
	ld.global.f32 	%f58, [%rd28];
	sub.f32 	%f59, %f58, %f57;
	ld.global.f32 	%f60, [%rd27];
	mul.f32 	%f204, %f60, %f59;

BB17_15:
	add.f32 	%f205, %f204, %f1;
	add.s32 	%r68, %r68, 512;
	mov.f32 	%f1, %f205;
	bra.uni 	BB17_16;

BB17_4:
	mov.f32 	%f205, %f1;
	mov.f32 	%f1, %f45;

BB17_16:
	setp.lt.u32	%p9, %r37, 4;
	@%p9 bra 	BB17_27;

	add.s32 	%r71, %r25, %r68;
	mad.lo.s32 	%r48, %r23, %r67, %r27;
	mad.lo.s32 	%r49, %r24, %r48, %r71;
	mul.wide.s32 	%rd54, %r49, 4;
	mov.f32 	%f1, %f205;

BB17_18:
	mov.f32 	%f211, 0f00000000;
	setp.ge.s32	%p10, %r71, %r24;
	mov.f32 	%f208, %f211;
	@%p10 bra 	BB17_20;

	add.s64 	%rd31, %rd9, %rd54;
	add.s64 	%rd32, %rd8, %rd54;
	shl.b64 	%rd33, %rd1, 2;
	add.s64 	%rd34, %rd10, %rd33;
	ld.global.f32 	%f62, [%rd34];
	ld.global.f32 	%f63, [%rd32];
	sub.f32 	%f64, %f63, %f62;
	ld.global.f32 	%f65, [%rd31];
	mul.f32 	%f208, %f65, %f64;

BB17_20:
	add.f32 	%f18, %f208, %f1;
	add.s32 	%r50, %r71, 512;
	setp.ge.s32	%p11, %r50, %r24;
	mov.f32 	%f209, %f211;
	@%p11 bra 	BB17_22;

	add.s64 	%rd35, %rd9, %rd54;
	add.s64 	%rd36, %rd8, %rd54;
	shl.b64 	%rd37, %rd1, 2;
	add.s64 	%rd38, %rd10, %rd37;
	ld.global.f32 	%f67, [%rd38];
	ld.global.f32 	%f68, [%rd36+2048];
	sub.f32 	%f69, %f68, %f67;
	ld.global.f32 	%f70, [%rd35+2048];
	mul.f32 	%f209, %f70, %f69;

BB17_22:
	add.f32 	%f21, %f209, %f18;
	add.s32 	%r51, %r71, 1024;
	setp.ge.s32	%p12, %r51, %r24;
	mov.f32 	%f210, %f211;
	@%p12 bra 	BB17_24;

	add.s64 	%rd39, %rd9, %rd54;
	add.s64 	%rd40, %rd8, %rd54;
	shl.b64 	%rd41, %rd1, 2;
	add.s64 	%rd42, %rd10, %rd41;
	ld.global.f32 	%f72, [%rd42];
	ld.global.f32 	%f73, [%rd40+4096];
	sub.f32 	%f74, %f73, %f72;
	ld.global.f32 	%f75, [%rd39+4096];
	mul.f32 	%f210, %f75, %f74;

BB17_24:
	add.f32 	%f24, %f210, %f21;
	add.s32 	%r52, %r71, 1536;
	setp.ge.s32	%p13, %r52, %r24;
	@%p13 bra 	BB17_26;

	add.s64 	%rd43, %rd9, %rd54;
	add.s64 	%rd44, %rd8, %rd54;
	shl.b64 	%rd45, %rd1, 2;
	add.s64 	%rd46, %rd10, %rd45;
	ld.global.f32 	%f77, [%rd46];
	ld.global.f32 	%f78, [%rd44+6144];
	sub.f32 	%f79, %f78, %f77;
	ld.global.f32 	%f80, [%rd43+6144];
	mul.f32 	%f211, %f80, %f79;

BB17_26:
	add.f32 	%f1, %f211, %f24;
	add.s32 	%r71, %r71, 2048;
	add.s64 	%rd54, %rd54, 8192;
	add.s32 	%r68, %r68, 2048;
	setp.lt.s32	%p14, %r68, %r24;
	@%p14 bra 	BB17_18;

BB17_27:
	mov.u64 	%rd48, fast_variance_delta_opencl$loca;
	add.s64 	%rd49, %rd48, %rd13;
	st.shared.f32 	[%rd49], %f1;

BB17_28:
	add.s32 	%r67, %r67, 1;
	setp.lt.s32	%p15, %r67, %r22;
	@%p15 bra 	BB17_2;

BB17_29:
	bar.sync 	0;
	setp.ne.s32	%p16, %r25, 0;
	@%p16 bra 	BB17_45;

	shl.b64 	%rd51, %rd1, 2;
	add.s64 	%rd5, %rd12, %rd51;
	st.global.u32 	[%rd5], %r26;
	mov.f32 	%f214, 0f00000000;
	mov.u32 	%r73, -512;

BB17_31:
	ld.shared.f32 	%f82, [%rd55];
	add.f32 	%f83, %f82, %f214;
	ld.shared.f32 	%f84, [%rd55+4];
	add.f32 	%f85, %f84, %f83;
	ld.shared.f32 	%f86, [%rd55+8];
	add.f32 	%f87, %f86, %f85;
	ld.shared.f32 	%f88, [%rd55+12];
	add.f32 	%f89, %f88, %f87;
	ld.shared.f32 	%f90, [%rd55+16];
	add.f32 	%f91, %f90, %f89;
	ld.shared.f32 	%f92, [%rd55+20];
	add.f32 	%f93, %f92, %f91;
	ld.shared.f32 	%f94, [%rd55+24];
	add.f32 	%f95, %f94, %f93;
	ld.shared.f32 	%f96, [%rd55+28];
	add.f32 	%f97, %f96, %f95;
	ld.shared.f32 	%f98, [%rd55+32];
	add.f32 	%f99, %f98, %f97;
	ld.shared.f32 	%f100, [%rd55+36];
	add.f32 	%f101, %f100, %f99;
	ld.shared.f32 	%f102, [%rd55+40];
	add.f32 	%f103, %f102, %f101;
	ld.shared.f32 	%f104, [%rd55+44];
	add.f32 	%f105, %f104, %f103;
	ld.shared.f32 	%f106, [%rd55+48];
	add.f32 	%f107, %f106, %f105;
	ld.shared.f32 	%f108, [%rd55+52];
	add.f32 	%f109, %f108, %f107;
	ld.shared.f32 	%f110, [%rd55+56];
	add.f32 	%f111, %f110, %f109;
	ld.shared.f32 	%f112, [%rd55+60];
	add.f32 	%f214, %f112, %f111;
	add.s64 	%rd55, %rd55, 64;
	add.s32 	%r73, %r73, 16;
	setp.ne.s32	%p17, %r73, 0;
	@%p17 bra 	BB17_31;

	st.global.f32 	[%rd5], %f214;
	add.s64 	%rd53, %rd11, %rd51;
	ld.global.f32 	%f114, [%rd53];
	add.f32 	%f32, %f114, 0f3727C5AC;
	mov.f32 	%f115, 0fBF400000;
	cvt.rzi.f32.f32	%f116, %f115;
	fma.rn.f32 	%f117, %f116, 0fC0000000, 0fBFC00000;
	abs.f32 	%f33, %f117;
	setp.eq.f32	%p18, %f32, 0f3F800000;
	mov.f32 	%f216, 0f3F800000;
	@%p18 bra 	BB17_44;

	abs.f32 	%f34, %f32;
	setp.gtu.f32	%p19, %f34, 0f7F800000;
	@%p19 bra 	BB17_43;
	bra.uni 	BB17_34;

BB17_43:
	add.f32 	%f216, %f32, 0fBFC00000;
	bra.uni 	BB17_44;

BB17_34:
	setp.eq.f32	%p20, %f34, 0f7F800000;
	@%p20 bra 	BB17_42;
	bra.uni 	BB17_35;

BB17_42:
	setp.eq.f32	%p34, %f33, 0f3F800000;
	setp.lt.f32	%p35, %f32, 0f00000000;
	and.pred  	%p36, %p35, %p34;
	selp.f32	%f216, 0f80000000, 0f00000000, %p36;
	bra.uni 	BB17_44;

BB17_35:
	setp.eq.f32	%p21, %f32, 0f00000000;
	@%p21 bra 	BB17_41;
	bra.uni 	BB17_36;

BB17_41:
	setp.eq.f32	%p33, %f33, 0f3F800000;
	add.f32 	%f195, %f32, %f32;
	mov.b32 	 %r65, %f195;
	or.b32  	%r66, %r65, 2139095040;
	mov.b32 	 %f196, %r66;
	selp.f32	%f216, %f196, 0f7F800000, %p33;
	bra.uni 	BB17_44;

BB17_36:
	setp.geu.f32	%p22, %f32, 0f00000000;
	@%p22 bra 	BB17_38;

	mov.f32 	%f119, 0fBFC00000;
	cvt.rzi.f32.f32	%f120, %f119;
	setp.neu.f32	%p23, %f120, 0fBFC00000;
	mov.f32 	%f216, 0f7FFFFFFF;
	@%p23 bra 	BB17_44;

BB17_38:
	setp.lt.f32	%p24, %f34, 0f00800000;
	selp.f32	%f125, 0fC3170000, 0fC2FE0000, %p24;
	mul.f32 	%f126, %f34, 0f4B800000;
	selp.f32	%f127, %f126, %f34, %p24;
	mov.b32 	 %r57, %f127;
	and.b32  	%r58, %r57, 8388607;
	or.b32  	%r59, %r58, 1065353216;
	mov.b32 	 %f128, %r59;
	shr.u32 	%r60, %r57, 23;
	cvt.rn.f32.u32	%f129, %r60;
	add.f32 	%f130, %f125, %f129;
	setp.gt.f32	%p25, %f128, 0f3FB504F3;
	mul.f32 	%f131, %f128, 0f3F000000;
	add.f32 	%f132, %f130, 0f3F800000;
	selp.f32	%f133, %f131, %f128, %p25;
	selp.f32	%f134, %f132, %f130, %p25;
	add.f32 	%f135, %f133, 0fBF800000;
	add.f32 	%f122, %f133, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f121,%f122;
	// inline asm
	add.f32 	%f136, %f135, %f135;
	mul.f32 	%f137, %f136, %f121;
	mul.f32 	%f138, %f137, %f137;
	mov.f32 	%f139, 0f3C4CAF63;
	mov.f32 	%f140, 0f3B18F0FE;
	fma.rn.f32 	%f141, %f140, %f138, %f139;
	mov.f32 	%f142, 0f3DAAAABD;
	fma.rn.f32 	%f143, %f141, %f138, %f142;
	mul.rn.f32 	%f144, %f143, %f138;
	mul.rn.f32 	%f145, %f144, %f137;
	sub.f32 	%f146, %f135, %f137;
	neg.f32 	%f147, %f137;
	add.f32 	%f148, %f146, %f146;
	fma.rn.f32 	%f149, %f147, %f135, %f148;
	mul.rn.f32 	%f150, %f121, %f149;
	add.f32 	%f151, %f137, %f145;
	sub.f32 	%f152, %f137, %f151;
	add.f32 	%f153, %f145, %f152;
	add.f32 	%f154, %f150, %f153;
	add.f32 	%f155, %f151, %f154;
	sub.f32 	%f156, %f151, %f155;
	add.f32 	%f157, %f154, %f156;
	mov.f32 	%f158, 0f3F317200;
	mul.rn.f32 	%f159, %f134, %f158;
	mov.f32 	%f160, 0f35BFBE8E;
	mul.rn.f32 	%f161, %f134, %f160;
	add.f32 	%f162, %f159, %f155;
	sub.f32 	%f163, %f159, %f162;
	add.f32 	%f164, %f155, %f163;
	add.f32 	%f165, %f157, %f164;
	add.f32 	%f166, %f161, %f165;
	add.f32 	%f167, %f162, %f166;
	sub.f32 	%f168, %f162, %f167;
	add.f32 	%f169, %f166, %f168;
	mov.f32 	%f170, 0fBFC00000;
	mul.rn.f32 	%f171, %f170, %f167;
	neg.f32 	%f172, %f171;
	fma.rn.f32 	%f173, %f170, %f167, %f172;
	fma.rn.f32 	%f174, %f170, %f169, %f173;
	mov.f32 	%f175, 0f00000000;
	fma.rn.f32 	%f176, %f175, %f167, %f174;
	add.rn.f32 	%f177, %f171, %f176;
	neg.f32 	%f178, %f177;
	add.rn.f32 	%f179, %f171, %f178;
	add.rn.f32 	%f180, %f179, %f176;
	mov.b32 	 %r61, %f177;
	setp.eq.s32	%p26, %r61, 1118925336;
	add.s32 	%r62, %r61, -1;
	mov.b32 	 %f181, %r62;
	add.f32 	%f182, %f180, 0f37000000;
	selp.f32	%f183, %f181, %f177, %p26;
	selp.f32	%f35, %f182, %f180, %p26;
	mul.f32 	%f184, %f183, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f185, %f184;
	mov.f32 	%f186, 0fBF317200;
	fma.rn.f32 	%f187, %f185, %f186, %f183;
	mov.f32 	%f188, 0fB5BFBE8E;
	fma.rn.f32 	%f189, %f185, %f188, %f187;
	mul.f32 	%f124, %f189, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f123,%f124;
	// inline asm
	add.f32 	%f190, %f185, 0f00000000;
	ex2.approx.f32 	%f191, %f190;
	mul.f32 	%f192, %f123, %f191;
	setp.lt.f32	%p27, %f183, 0fC2D20000;
	selp.f32	%f193, 0f00000000, %f192, %p27;
	setp.gt.f32	%p28, %f183, 0f42D20000;
	selp.f32	%f215, 0f7F800000, %f193, %p28;
	setp.eq.f32	%p29, %f215, 0f7F800000;
	@%p29 bra 	BB17_40;

	fma.rn.f32 	%f215, %f215, %f35, %f215;

BB17_40:
	setp.eq.f32	%p30, %f33, 0f3F800000;
	setp.lt.f32	%p31, %f32, 0f00000000;
	and.pred  	%p32, %p31, %p30;
	mov.b32 	 %r63, %f215;
	xor.b32  	%r64, %r63, -2147483648;
	mov.b32 	 %f194, %r64;
	selp.f32	%f216, %f194, %f215, %p32;

BB17_44:
	mul.f32 	%f197, %f216, 0fBF000000;
	mul.rn.f32 	%f198, %f214, %f197;
	st.global.f32 	[%rd5], %f198;

BB17_45:
	ret;
}

	// .globl	mean_delta_opencl
.entry mean_delta_opencl(
	.param .u64 .ptr .global .align 4 mean_delta_opencl_param_0,
	.param .u64 .ptr .global .align 4 mean_delta_opencl_param_1,
	.param .u32 mean_delta_opencl_param_2,
	.param .u32 mean_delta_opencl_param_3,
	.param .u32 mean_delta_opencl_param_4,
	.param .u64 .ptr .global .align 4 mean_delta_opencl_param_5
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<50>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd6, [mean_delta_opencl_param_0];
	ld.param.u64 	%rd7, [mean_delta_opencl_param_1];
	ld.param.u32 	%r17, [mean_delta_opencl_param_2];
	ld.param.u32 	%r18, [mean_delta_opencl_param_3];
	ld.param.u32 	%r19, [mean_delta_opencl_param_4];
	ld.param.u64 	%rd8, [mean_delta_opencl_param_5];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r20, %ctaid.x;
	add.s32 	%r21, %r20, %r1;
	mov.u32 	%r22, %ctaid.y;
	mov.b32	%r2, %envreg1;
	add.s32 	%r23, %r22, %r2;
	mov.b32	%r3, %envreg6;
	mad.lo.s32 	%r24, %r23, %r3, %r21;
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %tid.x;
	mad.lo.s32 	%r4, %r24, %r25, %r26;
	setp.ge.s32	%p1, %r4, %r18;
	@%p1 bra 	BB18_15;

	cvt.s64.s32	%rd1, %r4;
	mul.wide.s32 	%rd9, %r4, 4;
	add.s64 	%rd2, %rd8, %rd9;
	mov.u32 	%r45, 0;
	st.global.u32 	[%rd2], %r45;
	mov.f32 	%f35, 0f00000000;
	setp.lt.s32	%p2, %r17, 1;
	@%p2 bra 	BB18_14;

	and.b32  	%r5, %r19, 3;
	mad.lo.s32 	%r33, %r3, %r23, %r21;
	mad.lo.s32 	%r6, %r25, %r33, %r26;
	mov.f32 	%f35, 0f00000000;

BB18_3:
	setp.lt.s32	%p3, %r19, 1;
	@%p3 bra 	BB18_13;

	mad.lo.s32 	%r39, %r45, %r18, %r4;
	mul.lo.s32 	%r8, %r39, %r19;
	mov.u32 	%r48, 0;
	setp.eq.s32	%p4, %r5, 0;
	@%p4 bra 	BB18_10;

	setp.eq.s32	%p5, %r5, 1;
	@%p5 bra 	BB18_9;

	setp.eq.s32	%p6, %r5, 2;
	@%p6 bra 	BB18_8;

	mul.wide.s32 	%rd10, %r8, 4;
	add.s64 	%rd11, %rd6, %rd10;
	ld.global.f32 	%f14, [%rd11];
	add.f32 	%f35, %f14, %f35;
	st.global.f32 	[%rd2], %f35;
	mov.u32 	%r48, 1;

BB18_8:
	add.s32 	%r41, %r48, %r8;
	mul.wide.s32 	%rd12, %r41, 4;
	add.s64 	%rd13, %rd6, %rd12;
	ld.global.f32 	%f15, [%rd13];
	add.f32 	%f35, %f15, %f35;
	st.global.f32 	[%rd2], %f35;
	add.s32 	%r48, %r48, 1;

BB18_9:
	add.s32 	%r42, %r48, %r8;
	mul.wide.s32 	%rd14, %r42, 4;
	add.s64 	%rd15, %rd6, %rd14;
	ld.global.f32 	%f16, [%rd15];
	add.f32 	%f35, %f16, %f35;
	st.global.f32 	[%rd2], %f35;
	add.s32 	%r48, %r48, 1;

BB18_10:
	setp.lt.u32	%p7, %r19, 4;
	@%p7 bra 	BB18_13;

	mad.lo.s32 	%r43, %r18, %r45, %r6;
	mad.lo.s32 	%r44, %r19, %r43, %r48;
	mul.wide.s32 	%rd16, %r44, 4;
	add.s64 	%rd19, %rd6, %rd16;

BB18_12:
	ld.global.f32 	%f17, [%rd19];
	add.f32 	%f18, %f17, %f35;
	st.global.f32 	[%rd2], %f18;
	ld.global.f32 	%f19, [%rd19+4];
	add.f32 	%f20, %f19, %f18;
	st.global.f32 	[%rd2], %f20;
	ld.global.f32 	%f21, [%rd19+8];
	add.f32 	%f22, %f21, %f20;
	st.global.f32 	[%rd2], %f22;
	ld.global.f32 	%f23, [%rd19+12];
	add.f32 	%f35, %f23, %f22;
	st.global.f32 	[%rd2], %f35;
	add.s64 	%rd19, %rd19, 16;
	add.s32 	%r48, %r48, 4;
	setp.lt.s32	%p8, %r48, %r19;
	@%p8 bra 	BB18_12;

BB18_13:
	add.s32 	%r45, %r45, 1;
	setp.lt.s32	%p9, %r45, %r17;
	@%p9 bra 	BB18_3;

BB18_14:
	shl.b64 	%rd17, %rd1, 2;
	add.s64 	%rd18, %rd7, %rd17;
	ld.global.f32 	%f24, [%rd18];
	add.f32 	%f25, %f24, 0f3727C5AC;
	sqrt.approx.f32 	%f26, %f25;
	mov.f32 	%f27, 0fBF800000;
	div.full.f32 	%f28, %f27, %f26;
	mul.rn.f32 	%f29, %f35, %f28;
	st.global.f32 	[%rd2], %f29;

BB18_15:
	ret;
}

	// .globl	mean_opencl
.entry mean_opencl(
	.param .u64 .ptr .global .align 4 mean_opencl_param_0,
	.param .u32 mean_opencl_param_1,
	.param .u32 mean_opencl_param_2,
	.param .u32 mean_opencl_param_3,
	.param .u64 .ptr .global .align 4 mean_opencl_param_4
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<34>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd5, [mean_opencl_param_0];
	ld.param.u32 	%r17, [mean_opencl_param_1];
	ld.param.u32 	%r18, [mean_opencl_param_2];
	ld.param.u32 	%r19, [mean_opencl_param_3];
	ld.param.u64 	%rd6, [mean_opencl_param_4];
	mov.u32 	%r20, %ctaid.x;
	mov.b32	%r1, %envreg0;
	add.s32 	%r21, %r20, %r1;
	mov.u32 	%r22, %ctaid.y;
	mov.b32	%r2, %envreg1;
	add.s32 	%r23, %r22, %r2;
	mov.b32	%r3, %envreg6;
	mad.lo.s32 	%r24, %r23, %r3, %r21;
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %tid.x;
	mad.lo.s32 	%r4, %r24, %r25, %r26;
	setp.ge.s32	%p1, %r4, %r18;
	@%p1 bra 	BB19_15;

	mul.wide.s32 	%rd7, %r4, 4;
	add.s64 	%rd1, %rd6, %rd7;
	mov.u32 	%r46, 0;
	st.global.u32 	[%rd1], %r46;
	mov.f32 	%f32, 0f00000000;
	setp.lt.s32	%p2, %r17, 1;
	@%p2 bra 	BB19_14;

	and.b32  	%r5, %r19, 3;
	mad.lo.s32 	%r33, %r3, %r23, %r21;
	mad.lo.s32 	%r6, %r25, %r33, %r26;
	mov.f32 	%f32, 0f00000000;

BB19_3:
	setp.lt.s32	%p3, %r19, 1;
	@%p3 bra 	BB19_13;

	mad.lo.s32 	%r39, %r46, %r18, %r4;
	mul.lo.s32 	%r8, %r39, %r19;
	mov.u32 	%r49, 0;
	setp.eq.s32	%p4, %r5, 0;
	@%p4 bra 	BB19_10;

	setp.eq.s32	%p5, %r5, 1;
	@%p5 bra 	BB19_9;

	setp.eq.s32	%p6, %r5, 2;
	@%p6 bra 	BB19_8;

	mul.wide.s32 	%rd8, %r8, 4;
	add.s64 	%rd9, %rd5, %rd8;
	ld.global.f32 	%f14, [%rd9];
	add.f32 	%f32, %f14, %f32;
	st.global.f32 	[%rd1], %f32;
	mov.u32 	%r49, 1;

BB19_8:
	add.s32 	%r41, %r49, %r8;
	mul.wide.s32 	%rd10, %r41, 4;
	add.s64 	%rd11, %rd5, %rd10;
	ld.global.f32 	%f15, [%rd11];
	add.f32 	%f32, %f15, %f32;
	st.global.f32 	[%rd1], %f32;
	add.s32 	%r49, %r49, 1;

BB19_9:
	add.s32 	%r42, %r49, %r8;
	mul.wide.s32 	%rd12, %r42, 4;
	add.s64 	%rd13, %rd5, %rd12;
	ld.global.f32 	%f16, [%rd13];
	add.f32 	%f32, %f16, %f32;
	st.global.f32 	[%rd1], %f32;
	add.s32 	%r49, %r49, 1;

BB19_10:
	setp.lt.u32	%p7, %r19, 4;
	@%p7 bra 	BB19_13;

	mad.lo.s32 	%r43, %r18, %r46, %r6;
	mad.lo.s32 	%r44, %r19, %r43, %r49;
	mul.wide.s32 	%rd14, %r44, 4;
	add.s64 	%rd15, %rd5, %rd14;

BB19_12:
	ld.global.f32 	%f17, [%rd15];
	add.f32 	%f18, %f17, %f32;
	st.global.f32 	[%rd1], %f18;
	ld.global.f32 	%f19, [%rd15+4];
	add.f32 	%f20, %f19, %f18;
	st.global.f32 	[%rd1], %f20;
	ld.global.f32 	%f21, [%rd15+8];
	add.f32 	%f22, %f21, %f20;
	st.global.f32 	[%rd1], %f22;
	ld.global.f32 	%f23, [%rd15+12];
	add.f32 	%f32, %f23, %f22;
	st.global.f32 	[%rd1], %f32;
	add.s64 	%rd15, %rd15, 16;
	add.s32 	%r49, %r49, 4;
	setp.lt.s32	%p8, %r49, %r19;
	@%p8 bra 	BB19_12;

BB19_13:
	add.s32 	%r46, %r46, 1;
	setp.lt.s32	%p9, %r46, %r17;
	@%p9 bra 	BB19_3;

BB19_14:
	mul.lo.s32 	%r45, %r19, %r17;
	cvt.rn.f32.s32	%f24, %r45;
	rcp.approx.f32 	%f25, %f24;
	mul.rn.f32 	%f26, %f32, %f25;
	st.global.f32 	[%rd1], %f26;

BB19_15:
	ret;
}

	// .globl	variance_opencl
.entry variance_opencl(
	.param .u64 .ptr .global .align 4 variance_opencl_param_0,
	.param .u64 .ptr .global .align 4 variance_opencl_param_1,
	.param .u32 variance_opencl_param_2,
	.param .u32 variance_opencl_param_3,
	.param .u32 variance_opencl_param_4,
	.param .u64 .ptr .global .align 4 variance_opencl_param_5
)
{
	.reg .pred 	%p<25>;
	.reg .f32 	%f<116>;
	.reg .b32 	%r<35>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r6, [variance_opencl_param_2];
	ld.param.u32 	%r7, [variance_opencl_param_3];
	ld.param.u32 	%r8, [variance_opencl_param_4];
	ld.param.u64 	%rd4, [variance_opencl_param_5];
	mov.u32 	%r9, %ctaid.x;
	mov.b32	%r10, %envreg0;
	add.s32 	%r11, %r9, %r10;
	mov.u32 	%r12, %ctaid.y;
	mov.b32	%r13, %envreg1;
	add.s32 	%r14, %r12, %r13;
	mov.b32	%r15, %envreg6;
	mad.lo.s32 	%r16, %r14, %r15, %r11;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32	%p1, %r1, %r7;
	@%p1 bra 	BB20_20;

	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.u32 	%r33, 0;
	st.global.u32 	[%rd1], %r33;
	mov.f32 	%f114, 0f00000000;
	setp.lt.s32	%p2, %r6, 1;
	@%p2 bra 	BB20_19;

	mov.f32 	%f114, 0f00000000;

BB20_3:
	setp.lt.s32	%p3, %r8, 1;
	@%p3 bra 	BB20_18;

	mov.f32 	%f20, 0f3F800000;
	cvt.rzi.f32.f32	%f21, %f20;
	add.f32 	%f22, %f21, %f21;
	mov.f32 	%f23, 0f40000000;
	sub.f32 	%f24, %f23, %f22;
	abs.f32 	%f2, %f24;
	mov.u32 	%r34, 0;

BB20_5:
	mov.f32 	%f113, 0f3F800000;
	ld.param.u64 	%rd11, [variance_opencl_param_1];
	ld.param.u64 	%rd10, [variance_opencl_param_0];
	mad.lo.s32 	%r22, %r33, %r7, %r1;
	mad.lo.s32 	%r23, %r22, %r8, %r34;
	mul.wide.s32 	%rd6, %r23, 4;
	add.s64 	%rd7, %rd10, %rd6;
	add.s64 	%rd9, %rd11, %rd5;
	ld.global.f32 	%f26, [%rd9];
	ld.global.f32 	%f27, [%rd7];
	sub.f32 	%f4, %f27, %f26;
	setp.eq.f32	%p4, %f4, 0f3F800000;
	@%p4 bra 	BB20_17;

	abs.f32 	%f5, %f4;
	setp.gtu.f32	%p5, %f5, 0f7F800000;
	@%p5 bra 	BB20_16;
	bra.uni 	BB20_7;

BB20_16:
	add.f32 	%f113, %f4, 0f40000000;
	bra.uni 	BB20_17;

BB20_7:
	setp.eq.f32	%p6, %f5, 0f7F800000;
	@%p6 bra 	BB20_15;
	bra.uni 	BB20_8;

BB20_15:
	setp.eq.f32	%p20, %f2, 0f3F800000;
	setp.lt.f32	%p21, %f4, 0f00000000;
	and.pred  	%p22, %p21, %p20;
	selp.f32	%f113, 0fFF800000, 0f7F800000, %p22;
	bra.uni 	BB20_17;

BB20_8:
	setp.eq.f32	%p7, %f4, 0f00000000;
	@%p7 bra 	BB20_14;
	bra.uni 	BB20_9;

BB20_14:
	setp.eq.f32	%p19, %f2, 0f3F800000;
	add.f32 	%f105, %f4, %f4;
	selp.f32	%f113, %f105, 0f00000000, %p19;
	bra.uni 	BB20_17;

BB20_9:
	setp.geu.f32	%p8, %f4, 0f00000000;
	@%p8 bra 	BB20_11;

	cvt.rzi.f32.f32	%f30, %f23;
	setp.neu.f32	%p9, %f30, 0f40000000;
	mov.f32 	%f113, 0f7FFFFFFF;
	@%p9 bra 	BB20_17;

BB20_11:
	setp.lt.f32	%p10, %f5, 0f00800000;
	selp.f32	%f35, 0fC3170000, 0fC2FE0000, %p10;
	mul.f32 	%f36, %f5, 0f4B800000;
	selp.f32	%f37, %f36, %f5, %p10;
	mov.b32 	 %r24, %f37;
	and.b32  	%r25, %r24, 8388607;
	or.b32  	%r26, %r25, 1065353216;
	mov.b32 	 %f38, %r26;
	shr.u32 	%r27, %r24, 23;
	cvt.rn.f32.u32	%f39, %r27;
	add.f32 	%f40, %f35, %f39;
	setp.gt.f32	%p11, %f38, 0f3FB504F3;
	mul.f32 	%f41, %f38, 0f3F000000;
	add.f32 	%f42, %f40, 0f3F800000;
	selp.f32	%f43, %f41, %f38, %p11;
	selp.f32	%f44, %f42, %f40, %p11;
	add.f32 	%f45, %f43, 0fBF800000;
	add.f32 	%f32, %f43, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f31,%f32;
	// inline asm
	add.f32 	%f46, %f45, %f45;
	mul.f32 	%f47, %f46, %f31;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4CAF63;
	mov.f32 	%f50, 0f3B18F0FE;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAABD;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.rn.f32 	%f54, %f53, %f48;
	mul.rn.f32 	%f55, %f54, %f47;
	sub.f32 	%f56, %f45, %f47;
	neg.f32 	%f57, %f47;
	add.f32 	%f58, %f56, %f56;
	fma.rn.f32 	%f59, %f57, %f45, %f58;
	mul.rn.f32 	%f60, %f31, %f59;
	add.f32 	%f61, %f47, %f55;
	sub.f32 	%f62, %f47, %f61;
	add.f32 	%f63, %f55, %f62;
	add.f32 	%f64, %f60, %f63;
	add.f32 	%f65, %f61, %f64;
	sub.f32 	%f66, %f61, %f65;
	add.f32 	%f67, %f64, %f66;
	mov.f32 	%f68, 0f3F317200;
	mul.rn.f32 	%f69, %f44, %f68;
	mov.f32 	%f70, 0f35BFBE8E;
	mul.rn.f32 	%f71, %f44, %f70;
	add.f32 	%f72, %f69, %f65;
	sub.f32 	%f73, %f69, %f72;
	add.f32 	%f74, %f65, %f73;
	add.f32 	%f75, %f67, %f74;
	add.f32 	%f76, %f71, %f75;
	add.f32 	%f77, %f72, %f76;
	sub.f32 	%f78, %f72, %f77;
	add.f32 	%f79, %f76, %f78;
	mul.rn.f32 	%f81, %f23, %f77;
	neg.f32 	%f82, %f81;
	fma.rn.f32 	%f83, %f23, %f77, %f82;
	fma.rn.f32 	%f84, %f23, %f79, %f83;
	mov.f32 	%f85, 0f00000000;
	fma.rn.f32 	%f86, %f85, %f77, %f84;
	add.rn.f32 	%f87, %f81, %f86;
	neg.f32 	%f88, %f87;
	add.rn.f32 	%f89, %f81, %f88;
	add.rn.f32 	%f90, %f89, %f86;
	mov.b32 	 %r28, %f87;
	setp.eq.s32	%p12, %r28, 1118925336;
	add.s32 	%r29, %r28, -1;
	mov.b32 	 %f91, %r29;
	add.f32 	%f92, %f90, 0f37000000;
	selp.f32	%f93, %f91, %f87, %p12;
	selp.f32	%f6, %f92, %f90, %p12;
	mul.f32 	%f94, %f93, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f95, %f94;
	mov.f32 	%f96, 0fBF317200;
	fma.rn.f32 	%f97, %f95, %f96, %f93;
	mov.f32 	%f98, 0fB5BFBE8E;
	fma.rn.f32 	%f99, %f95, %f98, %f97;
	mul.f32 	%f34, %f99, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f33,%f34;
	// inline asm
	add.f32 	%f100, %f95, 0f00000000;
	ex2.approx.f32 	%f101, %f100;
	mul.f32 	%f102, %f33, %f101;
	setp.lt.f32	%p13, %f93, 0fC2D20000;
	selp.f32	%f103, 0f00000000, %f102, %p13;
	setp.gt.f32	%p14, %f93, 0f42D20000;
	selp.f32	%f112, 0f7F800000, %f103, %p14;
	setp.eq.f32	%p15, %f112, 0f7F800000;
	@%p15 bra 	BB20_13;

	fma.rn.f32 	%f112, %f112, %f6, %f112;

BB20_13:
	setp.eq.f32	%p16, %f2, 0f3F800000;
	setp.lt.f32	%p17, %f4, 0f00000000;
	and.pred  	%p18, %p17, %p16;
	mov.b32 	 %r30, %f112;
	xor.b32  	%r31, %r30, -2147483648;
	mov.b32 	 %f104, %r31;
	selp.f32	%f113, %f104, %f112, %p18;

BB20_17:
	add.f32 	%f114, %f113, %f114;
	st.global.f32 	[%rd1], %f114;
	add.s32 	%r34, %r34, 1;
	setp.lt.s32	%p23, %r34, %r8;
	@%p23 bra 	BB20_5;

BB20_18:
	add.s32 	%r33, %r33, 1;
	setp.lt.s32	%p24, %r33, %r6;
	@%p24 bra 	BB20_3;

BB20_19:
	mad.lo.s32 	%r32, %r8, %r6, -1;
	cvt.rn.f32.s32	%f106, %r32;
	rcp.approx.f32 	%f107, %f106;
	mul.rn.f32 	%f108, %f114, %f107;
	st.global.f32 	[%rd1], %f108;

BB20_20:
	ret;
}

	// .globl	reorg_opencl
.entry reorg_opencl(
	.param .u32 reorg_opencl_param_0,
	.param .u64 .ptr .global .align 4 reorg_opencl_param_1,
	.param .u32 reorg_opencl_param_2,
	.param .u32 reorg_opencl_param_3,
	.param .u32 reorg_opencl_param_4,
	.param .u32 reorg_opencl_param_5,
	.param .u32 reorg_opencl_param_6,
	.param .u32 reorg_opencl_param_7,
	.param .u64 .ptr .global .align 4 reorg_opencl_param_8
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r8, [reorg_opencl_param_0];
	ld.param.u64 	%rd3, [reorg_opencl_param_1];
	ld.param.u32 	%r2, [reorg_opencl_param_2];
	ld.param.u32 	%r3, [reorg_opencl_param_3];
	ld.param.u32 	%r4, [reorg_opencl_param_4];
	ld.param.u32 	%r5, [reorg_opencl_param_5];
	ld.param.u32 	%r6, [reorg_opencl_param_6];
	ld.param.u32 	%r7, [reorg_opencl_param_7];
	ld.param.u64 	%rd4, [reorg_opencl_param_8];
	mov.b32	%r9, %envreg0;
	mov.u32 	%r10, %ctaid.x;
	add.s32 	%r11, %r10, %r9;
	mov.u32 	%r12, %ctaid.y;
	mov.b32	%r13, %envreg1;
	add.s32 	%r14, %r12, %r13;
	mov.b32	%r15, %envreg6;
	mad.lo.s32 	%r16, %r14, %r15, %r11;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32	%p1, %r1, %r8;
	@%p1 bra 	BB21_4;

	rem.s32 	%r19, %r1, %r2;
	div.s32 	%r20, %r1, %r2;
	rem.s32 	%r21, %r20, %r3;
	div.s32 	%r22, %r20, %r3;
	rem.s32 	%r23, %r22, %r4;
	div.s32 	%r24, %r22, %r4;
	rem.s32 	%r25, %r24, %r5;
	mul.lo.s32 	%r26, %r6, %r6;
	div.s32 	%r27, %r4, %r26;
	rem.s32 	%r28, %r23, %r27;
	div.s32 	%r29, %r23, %r27;
	rem.s32 	%r30, %r29, %r6;
	div.s32 	%r31, %r29, %r6;
	mad.lo.s32 	%r32, %r27, %r25, %r28;
	mad.lo.s32 	%r33, %r32, %r3, %r21;
	mad.lo.s32 	%r34, %r33, %r6, %r31;
	mad.lo.s32 	%r35, %r34, %r2, %r19;
	mad.lo.s32 	%r36, %r35, %r6, %r30;
	cvt.s64.s32	%rd1, %r36;
	cvt.s64.s32	%rd2, %r1;
	setp.eq.s32	%p2, %r7, 0;
	@%p2 bra 	BB21_3;

	shl.b64 	%rd5, %rd2, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.f32 	%f1, [%rd6];
	shl.b64 	%rd7, %rd1, 2;
	add.s64 	%rd8, %rd4, %rd7;
	st.global.f32 	[%rd8], %f1;
	bra.uni 	BB21_4;

BB21_3:
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.f32 	%f2, [%rd10];
	shl.b64 	%rd11, %rd2, 2;
	add.s64 	%rd12, %rd4, %rd11;
	st.global.f32 	[%rd12], %f2;

BB21_4:
	ret;
}

	// .globl	axpy_opencl
.entry axpy_opencl(
	.param .u32 axpy_opencl_param_0,
	.param .f32 axpy_opencl_param_1,
	.param .u64 .ptr .global .align 4 axpy_opencl_param_2,
	.param .u32 axpy_opencl_param_3,
	.param .u32 axpy_opencl_param_4,
	.param .u64 .ptr .global .align 4 axpy_opencl_param_5,
	.param .u32 axpy_opencl_param_6,
	.param .u32 axpy_opencl_param_7
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r6, [axpy_opencl_param_0];
	ld.param.f32 	%f1, [axpy_opencl_param_1];
	ld.param.u64 	%rd1, [axpy_opencl_param_2];
	ld.param.u32 	%r2, [axpy_opencl_param_3];
	ld.param.u32 	%r3, [axpy_opencl_param_4];
	ld.param.u64 	%rd2, [axpy_opencl_param_5];
	ld.param.u32 	%r4, [axpy_opencl_param_6];
	ld.param.u32 	%r5, [axpy_opencl_param_7];
	mov.b32	%r7, %envreg0;
	mov.u32 	%r8, %ctaid.x;
	add.s32 	%r9, %r8, %r7;
	mov.u32 	%r10, %ctaid.y;
	mov.b32	%r11, %envreg1;
	add.s32 	%r12, %r10, %r11;
	mov.b32	%r13, %envreg6;
	mad.lo.s32 	%r14, %r12, %r13, %r9;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r14, %r15, %r16;
	setp.ge.s32	%p1, %r1, %r6;
	@%p1 bra 	BB22_2;

	mad.lo.s32 	%r17, %r1, %r3, %r2;
	mul.wide.s32 	%rd3, %r17, 4;
	add.s64 	%rd4, %rd1, %rd3;
	ld.global.f32 	%f2, [%rd4];
	mad.lo.s32 	%r18, %r1, %r5, %r4;
	mul.wide.s32 	%rd5, %r18, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f3, [%rd6];
	fma.rn.f32 	%f4, %f2, %f1, %f3;
	st.global.f32 	[%rd6], %f4;

BB22_2:
	ret;
}

	// .globl	pow_opencl
.entry pow_opencl(
	.param .u32 pow_opencl_param_0,
	.param .f32 pow_opencl_param_1,
	.param .u64 .ptr .global .align 4 pow_opencl_param_2,
	.param .u32 pow_opencl_param_3,
	.param .u64 .ptr .global .align 4 pow_opencl_param_4,
	.param .u32 pow_opencl_param_5
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<101>;
	.reg .b32 	%r<35>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r4, [pow_opencl_param_0];
	ld.param.f32 	%f15, [pow_opencl_param_1];
	ld.param.u64 	%rd1, [pow_opencl_param_2];
	ld.param.u32 	%r2, [pow_opencl_param_3];
	ld.param.u64 	%rd2, [pow_opencl_param_4];
	ld.param.u32 	%r3, [pow_opencl_param_5];
	mov.b32	%r5, %envreg0;
	mov.u32 	%r6, %ctaid.x;
	add.s32 	%r7, %r6, %r5;
	mov.u32 	%r8, %ctaid.y;
	mov.b32	%r9, %envreg1;
	add.s32 	%r10, %r8, %r9;
	mov.b32	%r11, %envreg6;
	mad.lo.s32 	%r12, %r10, %r11, %r7;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r12, %r13, %r14;
	setp.ge.s32	%p1, %r1, %r4;
	@%p1 bra 	BB23_17;

	mul.lo.s32 	%r15, %r1, %r2;
	mul.wide.s32 	%rd3, %r15, 4;
	add.s64 	%rd4, %rd1, %rd3;
	mul.f32 	%f17, %f15, 0f3F000000;
	cvt.rzi.f32.f32	%f18, %f17;
	fma.rn.f32 	%f19, %f18, 0fC0000000, %f15;
	abs.f32 	%f1, %f19;
	ld.global.f32 	%f2, [%rd4];
	setp.eq.f32	%p2, %f2, 0f3F800000;
	setp.eq.f32	%p3, %f15, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	mov.f32 	%f100, 0f3F800000;
	@%p4 bra 	BB23_16;

	abs.f32 	%f3, %f2;
	setp.gtu.f32	%p5, %f3, 0f7F800000;
	@%p5 bra 	BB23_15;

	abs.f32 	%f4, %f15;
	setp.gtu.f32	%p6, %f4, 0f7F800000;
	@%p6 bra 	BB23_15;
	bra.uni 	BB23_4;

BB23_15:
	add.f32 	%f100, %f2, %f15;
	bra.uni 	BB23_16;

BB23_4:
	setp.eq.f32	%p7, %f4, 0f7F800000;
	@%p7 bra 	BB23_14;
	bra.uni 	BB23_5;

BB23_14:
	setp.gt.f32	%p28, %f3, 0f3F800000;
	selp.b32	%r31, 2139095040, 0, %p28;
	xor.b32  	%r32, %r31, 2139095040;
	setp.lt.f32	%p29, %f15, 0f00000000;
	selp.b32	%r33, %r32, %r31, %p29;
	mov.b32 	 %f98, %r33;
	setp.eq.f32	%p30, %f2, 0fBF800000;
	selp.f32	%f100, 0f3F800000, %f98, %p30;
	bra.uni 	BB23_16;

BB23_5:
	setp.eq.f32	%p8, %f3, 0f7F800000;
	@%p8 bra 	BB23_13;
	bra.uni 	BB23_6;

BB23_13:
	setp.eq.f32	%p24, %f1, 0f3F800000;
	setp.ltu.f32	%p25, %f15, 0f00000000;
	selp.b32	%r28, 0, 2139095040, %p25;
	setp.lt.f32	%p26, %f2, 0f00000000;
	and.pred  	%p27, %p26, %p24;
	or.b32  	%r29, %r28, -2147483648;
	selp.b32	%r30, %r29, %r28, %p27;
	mov.b32 	 %f100, %r30;
	bra.uni 	BB23_16;

BB23_6:
	setp.eq.f32	%p9, %f2, 0f00000000;
	@%p9 bra 	BB23_12;
	bra.uni 	BB23_7;

BB23_12:
	setp.eq.f32	%p22, %f1, 0f3F800000;
	add.f32 	%f97, %f2, %f2;
	mov.b32 	 %r24, %f97;
	selp.b32	%r25, %r24, 0, %p22;
	or.b32  	%r26, %r25, 2139095040;
	setp.lt.f32	%p23, %f15, 0f00000000;
	selp.b32	%r27, %r26, %r25, %p23;
	mov.b32 	 %f100, %r27;
	bra.uni 	BB23_16;

BB23_7:
	setp.geu.f32	%p10, %f2, 0f00000000;
	@%p10 bra 	BB23_9;

	cvt.rzi.f32.f32	%f21, %f15;
	setp.neu.f32	%p11, %f21, %f15;
	mov.f32 	%f100, 0f7FFFFFFF;
	@%p11 bra 	BB23_16;

BB23_9:
	setp.lt.f32	%p12, %f3, 0f00800000;
	selp.f32	%f26, 0fC3170000, 0fC2FE0000, %p12;
	mul.f32 	%f27, %f3, 0f4B800000;
	selp.f32	%f28, %f27, %f3, %p12;
	mov.b32 	 %r16, %f28;
	and.b32  	%r17, %r16, 8388607;
	or.b32  	%r18, %r17, 1065353216;
	mov.b32 	 %f29, %r18;
	shr.u32 	%r19, %r16, 23;
	cvt.rn.f32.u32	%f30, %r19;
	add.f32 	%f31, %f26, %f30;
	setp.gt.f32	%p13, %f29, 0f3FB504F3;
	mul.f32 	%f32, %f29, 0f3F000000;
	add.f32 	%f33, %f31, 0f3F800000;
	selp.f32	%f34, %f32, %f29, %p13;
	selp.f32	%f35, %f33, %f31, %p13;
	add.f32 	%f36, %f34, 0fBF800000;
	add.f32 	%f23, %f34, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f22,%f23;
	// inline asm
	add.f32 	%f37, %f36, %f36;
	mul.f32 	%f38, %f37, %f22;
	mul.f32 	%f39, %f38, %f38;
	mov.f32 	%f40, 0f3C4CAF63;
	mov.f32 	%f41, 0f3B18F0FE;
	fma.rn.f32 	%f42, %f41, %f39, %f40;
	mov.f32 	%f43, 0f3DAAAABD;
	fma.rn.f32 	%f44, %f42, %f39, %f43;
	mul.rn.f32 	%f45, %f44, %f39;
	mul.rn.f32 	%f46, %f45, %f38;
	sub.f32 	%f47, %f36, %f38;
	neg.f32 	%f48, %f38;
	add.f32 	%f49, %f47, %f47;
	fma.rn.f32 	%f50, %f48, %f36, %f49;
	mul.rn.f32 	%f51, %f22, %f50;
	add.f32 	%f52, %f38, %f46;
	sub.f32 	%f53, %f38, %f52;
	add.f32 	%f54, %f46, %f53;
	add.f32 	%f55, %f51, %f54;
	add.f32 	%f56, %f52, %f55;
	sub.f32 	%f57, %f52, %f56;
	add.f32 	%f58, %f55, %f57;
	mov.f32 	%f59, 0f3F317200;
	mul.rn.f32 	%f60, %f35, %f59;
	mov.f32 	%f61, 0f35BFBE8E;
	mul.rn.f32 	%f62, %f35, %f61;
	add.f32 	%f63, %f60, %f56;
	sub.f32 	%f64, %f60, %f63;
	add.f32 	%f65, %f56, %f64;
	add.f32 	%f66, %f58, %f65;
	add.f32 	%f67, %f62, %f66;
	add.f32 	%f68, %f63, %f67;
	sub.f32 	%f69, %f63, %f68;
	add.f32 	%f70, %f67, %f69;
	mul.f32 	%f71, %f15, 0f39000000;
	setp.gt.f32	%p14, %f4, 0f77F684DF;
	selp.f32	%f72, %f71, %f15, %p14;
	mul.rn.f32 	%f73, %f72, %f68;
	neg.f32 	%f74, %f73;
	fma.rn.f32 	%f75, %f72, %f68, %f74;
	fma.rn.f32 	%f76, %f72, %f70, %f75;
	mov.f32 	%f77, 0f00000000;
	fma.rn.f32 	%f78, %f77, %f68, %f76;
	add.rn.f32 	%f79, %f73, %f78;
	neg.f32 	%f80, %f79;
	add.rn.f32 	%f81, %f73, %f80;
	add.rn.f32 	%f82, %f81, %f78;
	mov.b32 	 %r20, %f79;
	setp.eq.s32	%p15, %r20, 1118925336;
	add.s32 	%r21, %r20, -1;
	mov.b32 	 %f83, %r21;
	add.f32 	%f84, %f82, 0f37000000;
	selp.f32	%f85, %f83, %f79, %p15;
	selp.f32	%f5, %f84, %f82, %p15;
	mul.f32 	%f86, %f85, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f87, %f86;
	mov.f32 	%f88, 0fBF317200;
	fma.rn.f32 	%f89, %f87, %f88, %f85;
	mov.f32 	%f90, 0fB5BFBE8E;
	fma.rn.f32 	%f91, %f87, %f90, %f89;
	mul.f32 	%f25, %f91, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f24,%f25;
	// inline asm
	add.f32 	%f92, %f87, 0f00000000;
	ex2.approx.f32 	%f93, %f92;
	mul.f32 	%f94, %f24, %f93;
	setp.lt.f32	%p16, %f85, 0fC2D20000;
	selp.f32	%f95, 0f00000000, %f94, %p16;
	setp.gt.f32	%p17, %f85, 0f42D20000;
	selp.f32	%f99, 0f7F800000, %f95, %p17;
	setp.eq.f32	%p18, %f99, 0f7F800000;
	@%p18 bra 	BB23_11;

	fma.rn.f32 	%f99, %f99, %f5, %f99;

BB23_11:
	setp.eq.f32	%p19, %f1, 0f3F800000;
	setp.lt.f32	%p20, %f2, 0f00000000;
	and.pred  	%p21, %p20, %p19;
	mov.b32 	 %r22, %f99;
	xor.b32  	%r23, %r22, -2147483648;
	mov.b32 	 %f96, %r23;
	selp.f32	%f100, %f96, %f99, %p21;

BB23_16:
	mul.lo.s32 	%r34, %r1, %r3;
	mul.wide.s32 	%rd5, %r34, 4;
	add.s64 	%rd6, %rd2, %rd5;
	st.global.f32 	[%rd6], %f100;

BB23_17:
	ret;
}

	// .globl	const_opencl
.entry const_opencl(
	.param .u32 const_opencl_param_0,
	.param .f32 const_opencl_param_1,
	.param .u64 .ptr .global .align 4 const_opencl_param_2,
	.param .u32 const_opencl_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<4>;


	ld.param.u32 	%r3, [const_opencl_param_0];
	ld.param.f32 	%f1, [const_opencl_param_1];
	ld.param.u64 	%rd1, [const_opencl_param_2];
	ld.param.u32 	%r2, [const_opencl_param_3];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB24_2;

	mul.lo.s32 	%r14, %r1, %r2;
	mul.wide.s32 	%rd2, %r14, 4;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.f32 	[%rd3], %f1;

BB24_2:
	ret;
}

	// .globl	constrain_opencl
.entry constrain_opencl(
	.param .u32 constrain_opencl_param_0,
	.param .f32 constrain_opencl_param_1,
	.param .u64 .ptr .global .align 4 constrain_opencl_param_2,
	.param .u32 constrain_opencl_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<4>;


	ld.param.u32 	%r3, [constrain_opencl_param_0];
	ld.param.f32 	%f1, [constrain_opencl_param_1];
	ld.param.u64 	%rd1, [constrain_opencl_param_2];
	ld.param.u32 	%r2, [constrain_opencl_param_3];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB25_2;

	neg.f32 	%f2, %f1;
	mul.lo.s32 	%r14, %r1, %r2;
	mul.wide.s32 	%rd2, %r14, 4;
	add.s64 	%rd3, %rd1, %rd2;
	ld.global.f32 	%f3, [%rd3];
	max.f32 	%f4, %f2, %f3;
	min.f32 	%f5, %f1, %f4;
	st.global.f32 	[%rd3], %f5;

BB25_2:
	ret;
}

	// .globl	supp_opencl
.entry supp_opencl(
	.param .u32 supp_opencl_param_0,
	.param .f32 supp_opencl_param_1,
	.param .u64 .ptr .global .align 4 supp_opencl_param_2,
	.param .u32 supp_opencl_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<4>;


	ld.param.u32 	%r3, [supp_opencl_param_0];
	ld.param.f32 	%f1, [supp_opencl_param_1];
	ld.param.u64 	%rd2, [supp_opencl_param_2];
	ld.param.u32 	%r2, [supp_opencl_param_3];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB26_3;

	mul.lo.s32 	%r14, %r1, %r2;
	mul.wide.s32 	%rd3, %r14, 4;
	add.s64 	%rd1, %rd2, %rd3;
	ld.global.f32 	%f2, [%rd1];
	mul.f32 	%f3, %f2, %f2;
	mul.f32 	%f4, %f1, %f1;
	setp.geu.f32	%p2, %f3, %f4;
	@%p2 bra 	BB26_3;

	mov.u32 	%r15, 0;
	st.global.u32 	[%rd1], %r15;

BB26_3:
	ret;
}

	// .globl	add_opencl
.entry add_opencl(
	.param .u32 add_opencl_param_0,
	.param .f32 add_opencl_param_1,
	.param .u64 .ptr .global .align 4 add_opencl_param_2,
	.param .u32 add_opencl_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<4>;


	ld.param.u32 	%r3, [add_opencl_param_0];
	ld.param.f32 	%f1, [add_opencl_param_1];
	ld.param.u64 	%rd1, [add_opencl_param_2];
	ld.param.u32 	%r2, [add_opencl_param_3];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB27_2;

	mul.lo.s32 	%r14, %r1, %r2;
	mul.wide.s32 	%rd2, %r14, 4;
	add.s64 	%rd3, %rd1, %rd2;
	ld.global.f32 	%f2, [%rd3];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd3], %f3;

BB27_2:
	ret;
}

	// .globl	scal_opencl
.entry scal_opencl(
	.param .u32 scal_opencl_param_0,
	.param .f32 scal_opencl_param_1,
	.param .u64 .ptr .global .align 4 scal_opencl_param_2,
	.param .u32 scal_opencl_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<4>;


	ld.param.u32 	%r3, [scal_opencl_param_0];
	ld.param.f32 	%f1, [scal_opencl_param_1];
	ld.param.u64 	%rd1, [scal_opencl_param_2];
	ld.param.u32 	%r2, [scal_opencl_param_3];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB28_2;

	mul.lo.s32 	%r14, %r1, %r2;
	mul.wide.s32 	%rd2, %r14, 4;
	add.s64 	%rd3, %rd1, %rd2;
	ld.global.f32 	%f2, [%rd3];
	mul.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd3], %f3;

BB28_2:
	ret;
}

	// .globl	fill_opencl
.entry fill_opencl(
	.param .u32 fill_opencl_param_0,
	.param .f32 fill_opencl_param_1,
	.param .u64 .ptr .global .align 4 fill_opencl_param_2,
	.param .u32 fill_opencl_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<4>;


	ld.param.u32 	%r3, [fill_opencl_param_0];
	ld.param.f32 	%f1, [fill_opencl_param_1];
	ld.param.u64 	%rd1, [fill_opencl_param_2];
	ld.param.u32 	%r2, [fill_opencl_param_3];
	mov.b32	%r4, %envreg0;
	mov.u32 	%r5, %ctaid.x;
	add.s32 	%r6, %r5, %r4;
	mov.u32 	%r7, %ctaid.y;
	mov.b32	%r8, %envreg1;
	add.s32 	%r9, %r7, %r8;
	mov.b32	%r10, %envreg6;
	mad.lo.s32 	%r11, %r9, %r10, %r6;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32	%p1, %r1, %r3;
	@%p1 bra 	BB29_2;

	mul.lo.s32 	%r14, %r1, %r2;
	mul.wide.s32 	%rd2, %r14, 4;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.f32 	[%rd3], %f1;

BB29_2:
	ret;
}

	// .globl	copy_opencl
.entry copy_opencl(
	.param .u32 copy_opencl_param_0,
	.param .u64 .ptr .global .align 4 copy_opencl_param_1,
	.param .u32 copy_opencl_param_2,
	.param .u32 copy_opencl_param_3,
	.param .u64 .ptr .global .align 4 copy_opencl_param_4,
	.param .u32 copy_opencl_param_5,
	.param .u32 copy_opencl_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r6, [copy_opencl_param_0];
	ld.param.u64 	%rd1, [copy_opencl_param_1];
	ld.param.u32 	%r2, [copy_opencl_param_2];
	ld.param.u32 	%r3, [copy_opencl_param_3];
	ld.param.u64 	%rd2, [copy_opencl_param_4];
	ld.param.u32 	%r4, [copy_opencl_param_5];
	ld.param.u32 	%r5, [copy_opencl_param_6];
	mov.b32	%r7, %envreg0;
	mov.u32 	%r8, %ctaid.x;
	add.s32 	%r9, %r8, %r7;
	mov.u32 	%r10, %ctaid.y;
	mov.b32	%r11, %envreg1;
	add.s32 	%r12, %r10, %r11;
	mov.b32	%r13, %envreg6;
	mad.lo.s32 	%r14, %r12, %r13, %r9;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r14, %r15, %r16;
	setp.ge.s32	%p1, %r1, %r6;
	@%p1 bra 	BB30_2;

	mad.lo.s32 	%r17, %r1, %r3, %r2;
	mul.wide.s32 	%rd3, %r17, 4;
	add.s64 	%rd4, %rd1, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mad.lo.s32 	%r18, %r1, %r5, %r4;
	mul.wide.s32 	%rd5, %r18, 4;
	add.s64 	%rd6, %rd2, %rd5;
	st.global.f32 	[%rd6], %f1;

BB30_2:
	ret;
}

	// .globl	mul_opencl
.entry mul_opencl(
	.param .u32 mul_opencl_param_0,
	.param .u64 .ptr .global .align 4 mul_opencl_param_1,
	.param .u32 mul_opencl_param_2,
	.param .u64 .ptr .global .align 4 mul_opencl_param_3,
	.param .u32 mul_opencl_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r4, [mul_opencl_param_0];
	ld.param.u64 	%rd1, [mul_opencl_param_1];
	ld.param.u32 	%r2, [mul_opencl_param_2];
	ld.param.u64 	%rd2, [mul_opencl_param_3];
	ld.param.u32 	%r3, [mul_opencl_param_4];
	mov.b32	%r5, %envreg0;
	mov.u32 	%r6, %ctaid.x;
	add.s32 	%r7, %r6, %r5;
	mov.u32 	%r8, %ctaid.y;
	mov.b32	%r9, %envreg1;
	add.s32 	%r10, %r8, %r9;
	mov.b32	%r11, %envreg6;
	mad.lo.s32 	%r12, %r10, %r11, %r7;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r12, %r13, %r14;
	setp.ge.s32	%p1, %r1, %r4;
	@%p1 bra 	BB31_2;

	mul.lo.s32 	%r15, %r1, %r2;
	mul.wide.s32 	%rd3, %r15, 4;
	add.s64 	%rd4, %rd1, %rd3;
	mul.lo.s32 	%r16, %r1, %r3;
	mul.wide.s32 	%rd5, %r16, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd4];
	mul.rn.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd6], %f3;

BB31_2:
	ret;
}

	// .globl	l2norm_opencl
.entry l2norm_opencl(
	.param .u32 l2norm_opencl_param_0,
	.param .u64 .ptr .global .align 4 l2norm_opencl_param_1,
	.param .u64 .ptr .global .align 4 l2norm_opencl_param_2,
	.param .u32 l2norm_opencl_param_3,
	.param .u32 l2norm_opencl_param_4,
	.param .u32 l2norm_opencl_param_5
)
{
	.reg .pred 	%p<30>;
	.reg .f32 	%f<140>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<24>;


	ld.param.u32 	%r23, [l2norm_opencl_param_0];
	ld.param.u64 	%rd2, [l2norm_opencl_param_1];
	ld.param.u64 	%rd3, [l2norm_opencl_param_2];
	ld.param.u32 	%r21, [l2norm_opencl_param_4];
	ld.param.u32 	%r22, [l2norm_opencl_param_5];
	mov.b32	%r24, %envreg0;
	mov.u32 	%r25, %ctaid.x;
	add.s32 	%r26, %r25, %r24;
	mov.u32 	%r27, %ctaid.y;
	mov.b32	%r28, %envreg1;
	add.s32 	%r29, %r27, %r28;
	mov.b32	%r30, %envreg6;
	mad.lo.s32 	%r31, %r29, %r30, %r26;
	mov.u32 	%r32, %ntid.x;
	mov.u32 	%r33, %tid.x;
	mad.lo.s32 	%r1, %r31, %r32, %r33;
	setp.ge.s32	%p1, %r1, %r23;
	@%p1 bra 	BB32_26;

	div.s32 	%r2, %r1, %r22;
	rem.s32 	%r3, %r1, %r22;
	mov.f32 	%f139, 0f00000000;
	setp.lt.s32	%p2, %r21, 1;
	@%p2 bra 	BB32_16;

	mov.f32 	%f19, 0f3F800000;
	cvt.rzi.f32.f32	%f20, %f19;
	add.f32 	%f21, %f20, %f20;
	mov.f32 	%f22, 0f40000000;
	sub.f32 	%f23, %f22, %f21;
	abs.f32 	%f1, %f23;
	mul.lo.s32 	%r35, %r2, %r22;
	mad.lo.s32 	%r55, %r35, %r21, %r3;
	mov.u32 	%r56, 0;
	mov.f32 	%f139, 0f00000000;

BB32_3:
	mul.wide.s32 	%rd4, %r55, 4;
	add.s64 	%rd5, %rd2, %rd4;
	ld.global.f32 	%f3, [%rd5];
	setp.eq.f32	%p3, %f3, 0f3F800000;
	mov.f32 	%f138, %f19;
	@%p3 bra 	BB32_15;

	abs.f32 	%f4, %f3;
	setp.gtu.f32	%p4, %f4, 0f7F800000;
	@%p4 bra 	BB32_14;
	bra.uni 	BB32_5;

BB32_14:
	add.f32 	%f138, %f3, 0f40000000;
	bra.uni 	BB32_15;

BB32_5:
	setp.eq.f32	%p5, %f4, 0f7F800000;
	@%p5 bra 	BB32_13;
	bra.uni 	BB32_6;

BB32_13:
	setp.eq.f32	%p19, %f1, 0f3F800000;
	setp.lt.f32	%p20, %f3, 0f00000000;
	and.pred  	%p21, %p20, %p19;
	selp.f32	%f138, 0fFF800000, 0f7F800000, %p21;
	bra.uni 	BB32_15;

BB32_6:
	setp.eq.f32	%p6, %f3, 0f00000000;
	@%p6 bra 	BB32_12;
	bra.uni 	BB32_7;

BB32_12:
	setp.eq.f32	%p18, %f1, 0f3F800000;
	add.f32 	%f102, %f3, %f3;
	selp.f32	%f138, %f102, 0f00000000, %p18;
	bra.uni 	BB32_15;

BB32_7:
	setp.geu.f32	%p7, %f3, 0f00000000;
	@%p7 bra 	BB32_9;

	cvt.rzi.f32.f32	%f27, %f22;
	setp.neu.f32	%p8, %f27, 0f40000000;
	mov.f32 	%f138, 0f7FFFFFFF;
	@%p8 bra 	BB32_15;

BB32_9:
	setp.lt.f32	%p9, %f4, 0f00800000;
	selp.f32	%f32, 0fC3170000, 0fC2FE0000, %p9;
	mul.f32 	%f33, %f4, 0f4B800000;
	selp.f32	%f34, %f33, %f4, %p9;
	mov.b32 	 %r36, %f34;
	and.b32  	%r37, %r36, 8388607;
	or.b32  	%r38, %r37, 1065353216;
	mov.b32 	 %f35, %r38;
	shr.u32 	%r39, %r36, 23;
	cvt.rn.f32.u32	%f36, %r39;
	add.f32 	%f37, %f32, %f36;
	setp.gt.f32	%p10, %f35, 0f3FB504F3;
	mul.f32 	%f38, %f35, 0f3F000000;
	add.f32 	%f39, %f37, 0f3F800000;
	selp.f32	%f40, %f38, %f35, %p10;
	selp.f32	%f41, %f39, %f37, %p10;
	add.f32 	%f42, %f40, 0fBF800000;
	add.f32 	%f29, %f40, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f28,%f29;
	// inline asm
	add.f32 	%f43, %f42, %f42;
	mul.f32 	%f44, %f43, %f28;
	mul.f32 	%f45, %f44, %f44;
	mov.f32 	%f46, 0f3C4CAF63;
	mov.f32 	%f47, 0f3B18F0FE;
	fma.rn.f32 	%f48, %f47, %f45, %f46;
	mov.f32 	%f49, 0f3DAAAABD;
	fma.rn.f32 	%f50, %f48, %f45, %f49;
	mul.rn.f32 	%f51, %f50, %f45;
	mul.rn.f32 	%f52, %f51, %f44;
	sub.f32 	%f53, %f42, %f44;
	neg.f32 	%f54, %f44;
	add.f32 	%f55, %f53, %f53;
	fma.rn.f32 	%f56, %f54, %f42, %f55;
	mul.rn.f32 	%f57, %f28, %f56;
	add.f32 	%f58, %f44, %f52;
	sub.f32 	%f59, %f44, %f58;
	add.f32 	%f60, %f52, %f59;
	add.f32 	%f61, %f57, %f60;
	add.f32 	%f62, %f58, %f61;
	sub.f32 	%f63, %f58, %f62;
	add.f32 	%f64, %f61, %f63;
	mov.f32 	%f65, 0f3F317200;
	mul.rn.f32 	%f66, %f41, %f65;
	mov.f32 	%f67, 0f35BFBE8E;
	mul.rn.f32 	%f68, %f41, %f67;
	add.f32 	%f69, %f66, %f62;
	sub.f32 	%f70, %f66, %f69;
	add.f32 	%f71, %f62, %f70;
	add.f32 	%f72, %f64, %f71;
	add.f32 	%f73, %f68, %f72;
	add.f32 	%f74, %f69, %f73;
	sub.f32 	%f75, %f69, %f74;
	add.f32 	%f76, %f73, %f75;
	mul.rn.f32 	%f78, %f22, %f74;
	neg.f32 	%f79, %f78;
	fma.rn.f32 	%f80, %f22, %f74, %f79;
	fma.rn.f32 	%f81, %f22, %f76, %f80;
	mov.f32 	%f82, 0f00000000;
	fma.rn.f32 	%f83, %f82, %f74, %f81;
	add.rn.f32 	%f84, %f78, %f83;
	neg.f32 	%f85, %f84;
	add.rn.f32 	%f86, %f78, %f85;
	add.rn.f32 	%f87, %f86, %f83;
	mov.b32 	 %r40, %f84;
	setp.eq.s32	%p11, %r40, 1118925336;
	add.s32 	%r41, %r40, -1;
	mov.b32 	 %f88, %r41;
	add.f32 	%f89, %f87, 0f37000000;
	selp.f32	%f90, %f88, %f84, %p11;
	selp.f32	%f5, %f89, %f87, %p11;
	mul.f32 	%f91, %f90, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f92, %f91;
	mov.f32 	%f93, 0fBF317200;
	fma.rn.f32 	%f94, %f92, %f93, %f90;
	mov.f32 	%f95, 0fB5BFBE8E;
	fma.rn.f32 	%f96, %f92, %f95, %f94;
	mul.f32 	%f31, %f96, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f30,%f31;
	// inline asm
	add.f32 	%f97, %f92, 0f00000000;
	ex2.approx.f32 	%f98, %f97;
	mul.f32 	%f99, %f30, %f98;
	setp.lt.f32	%p12, %f90, 0fC2D20000;
	selp.f32	%f100, 0f00000000, %f99, %p12;
	setp.gt.f32	%p13, %f90, 0f42D20000;
	selp.f32	%f137, 0f7F800000, %f100, %p13;
	setp.eq.f32	%p14, %f137, 0f7F800000;
	@%p14 bra 	BB32_11;

	fma.rn.f32 	%f137, %f137, %f5, %f137;

BB32_11:
	setp.eq.f32	%p15, %f1, 0f3F800000;
	setp.lt.f32	%p16, %f3, 0f00000000;
	and.pred  	%p17, %p16, %p15;
	mov.b32 	 %r42, %f137;
	xor.b32  	%r43, %r42, -2147483648;
	mov.b32 	 %f101, %r43;
	selp.f32	%f138, %f101, %f137, %p17;

BB32_15:
	add.f32 	%f139, %f139, %f138;
	add.s32 	%r55, %r55, %r22;
	add.s32 	%r56, %r56, 1;
	setp.lt.s32	%p22, %r56, %r21;
	@%p22 bra 	BB32_3;

BB32_16:
	sqrt.approx.f32 	%f103, %f139;
	setp.eq.f32	%p23, %f103, 0f00000000;
	selp.f32	%f16, 0f3F800000, %f103, %p23;
	@%p2 bra 	BB32_26;

	mul.lo.s32 	%r9, %r2, %r21;
	and.b32  	%r47, %r21, 3;
	mov.u32 	%r57, 0;
	setp.eq.s32	%p25, %r47, 0;
	@%p25 bra 	BB32_23;

	setp.eq.s32	%p26, %r47, 1;
	@%p26 bra 	BB32_22;

	setp.eq.s32	%p27, %r47, 2;
	@%p27 bra 	BB32_21;

	mad.lo.s32 	%r49, %r9, %r22, %r3;
	mul.wide.s32 	%rd6, %r49, 4;
	add.s64 	%rd7, %rd2, %rd6;
	ld.global.f32 	%f104, [%rd7];
	div.full.f32 	%f105, %f104, %f16;
	st.global.f32 	[%rd7], %f105;
	mov.f32 	%f106, 0f3F800000;
	sub.f32 	%f107, %f106, %f105;
	div.full.f32 	%f108, %f107, %f16;
	add.s64 	%rd8, %rd3, %rd6;
	st.global.f32 	[%rd8], %f108;
	mov.u32 	%r57, 1;

BB32_21:
	add.s32 	%r50, %r57, %r9;
	mad.lo.s32 	%r51, %r50, %r22, %r3;
	mul.wide.s32 	%rd9, %r51, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f109, [%rd10];
	div.full.f32 	%f110, %f109, %f16;
	st.global.f32 	[%rd10], %f110;
	mov.f32 	%f111, 0f3F800000;
	sub.f32 	%f112, %f111, %f110;
	div.full.f32 	%f113, %f112, %f16;
	add.s64 	%rd11, %rd3, %rd9;
	st.global.f32 	[%rd11], %f113;
	add.s32 	%r57, %r57, 1;

BB32_22:
	add.s32 	%r52, %r57, %r9;
	mad.lo.s32 	%r53, %r52, %r22, %r3;
	mul.wide.s32 	%rd12, %r53, 4;
	add.s64 	%rd13, %rd2, %rd12;
	ld.global.f32 	%f114, [%rd13];
	div.full.f32 	%f115, %f114, %f16;
	st.global.f32 	[%rd13], %f115;
	mov.f32 	%f116, 0f3F800000;
	sub.f32 	%f117, %f116, %f115;
	div.full.f32 	%f118, %f117, %f16;
	add.s64 	%rd14, %rd3, %rd12;
	st.global.f32 	[%rd14], %f118;
	add.s32 	%r57, %r57, 1;

BB32_23:
	setp.lt.u32	%p28, %r21, 4;
	@%p28 bra 	BB32_26;

	shl.b32 	%r15, %r22, 2;
	mad.lo.s32 	%r54, %r2, %r21, %r57;
	mad.lo.s32 	%r60, %r22, %r54, %r3;
	mul.wide.s32 	%rd1, %r22, 4;

BB32_25:
	mul.wide.s32 	%rd15, %r60, 4;
	add.s64 	%rd16, %rd2, %rd15;
	ld.global.f32 	%f119, [%rd16];
	div.full.f32 	%f120, %f119, %f16;
	st.global.f32 	[%rd16], %f120;
	mov.f32 	%f121, 0f3F800000;
	sub.f32 	%f122, %f121, %f120;
	div.full.f32 	%f123, %f122, %f16;
	add.s64 	%rd17, %rd3, %rd15;
	st.global.f32 	[%rd17], %f123;
	add.s64 	%rd18, %rd16, %rd1;
	ld.global.f32 	%f124, [%rd18];
	div.full.f32 	%f125, %f124, %f16;
	st.global.f32 	[%rd18], %f125;
	sub.f32 	%f126, %f121, %f125;
	div.full.f32 	%f127, %f126, %f16;
	add.s64 	%rd19, %rd17, %rd1;
	st.global.f32 	[%rd19], %f127;
	add.s64 	%rd20, %rd18, %rd1;
	ld.global.f32 	%f128, [%rd20];
	div.full.f32 	%f129, %f128, %f16;
	st.global.f32 	[%rd20], %f129;
	sub.f32 	%f130, %f121, %f129;
	div.full.f32 	%f131, %f130, %f16;
	add.s64 	%rd21, %rd19, %rd1;
	st.global.f32 	[%rd21], %f131;
	add.s64 	%rd22, %rd20, %rd1;
	ld.global.f32 	%f132, [%rd22];
	div.full.f32 	%f133, %f132, %f16;
	st.global.f32 	[%rd22], %f133;
	sub.f32 	%f134, %f121, %f133;
	div.full.f32 	%f135, %f134, %f16;
	add.s64 	%rd23, %rd21, %rd1;
	st.global.f32 	[%rd23], %f135;
	add.s32 	%r60, %r60, %r15;
	add.s32 	%r57, %r57, 4;
	setp.lt.s32	%p29, %r57, %r21;
	@%p29 bra 	BB32_25;

BB32_26:
	ret;
}

	// .globl	fast_mean_opencl
.entry fast_mean_opencl(
	.param .u64 .ptr .global .align 4 fast_mean_opencl_param_0,
	.param .u32 fast_mean_opencl_param_1,
	.param .u32 fast_mean_opencl_param_2,
	.param .u32 fast_mean_opencl_param_3,
	.param .u64 .ptr .global .align 4 fast_mean_opencl_param_4
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<91>;
	.reg .b32 	%r<64>;
	.reg .b64 	%rd<26>;
	// demoted variable
	.shared .align 4 .b8 fast_mean_opencl$loca[2048];

	ld.param.u64 	%rd7, [fast_mean_opencl_param_0];
	ld.param.u32 	%r23, [fast_mean_opencl_param_1];
	ld.param.u32 	%r24, [fast_mean_opencl_param_2];
	ld.param.u32 	%r25, [fast_mean_opencl_param_3];
	ld.param.u64 	%rd8, [fast_mean_opencl_param_4];
	mov.u32 	%r26, %tid.x;
	mul.wide.s32 	%rd9, %r26, 4;
	mov.u64 	%rd25, fast_mean_opencl$loca;
	add.s64 	%rd11, %rd25, %rd9;
	mov.u32 	%r27, 0;
	st.shared.u32 	[%rd11], %r27;
	mov.u32 	%r1, %ctaid.x;
	mov.b32	%r2, %envreg0;
	add.s32 	%r3, %r1, %r2;
	setp.lt.s32	%p1, %r23, 1;
	@%p1 bra 	BB33_29;

	mov.f32 	%f1, 0f00000000;
	mov.u32 	%r57, %r27;

BB33_2:
	setp.lt.s32	%p2, %r25, 1;
	@%p2 bra 	BB33_28;

	mad.lo.s32 	%r33, %r57, %r24, %r3;
	mul.lo.s32 	%r6, %r33, %r25;
	add.s32 	%r34, %r25, -1;
	shr.u32 	%r35, %r34, 9;
	add.s32 	%r36, %r35, 1;
	and.b32  	%r32, %r36, 3;
	mov.u32 	%r58, 0;
	mov.f32 	%f33, 0f00000000;
	setp.eq.s32	%p3, %r32, 0;
	@%p3 bra 	BB33_4;

	setp.eq.s32	%p4, %r32, 1;
	@%p4 bra 	BB33_13;

	setp.eq.s32	%p5, %r32, 2;
	@%p5 bra 	BB33_10;

	mov.f32 	%f76, 0f00000000;
	setp.ge.s32	%p6, %r26, %r25;
	@%p6 bra 	BB33_9;

	add.s32 	%r37, %r26, %r6;
	mul.wide.s32 	%rd12, %r37, 4;
	add.s64 	%rd13, %rd7, %rd12;
	ld.global.f32 	%f76, [%rd13];

BB33_9:
	add.f32 	%f1, %f76, %f1;
	mov.u32 	%r58, 512;

BB33_10:
	add.s32 	%r9, %r58, %r26;
	mov.f32 	%f78, 0f00000000;
	setp.ge.s32	%p7, %r9, %r25;
	@%p7 bra 	BB33_12;

	add.s32 	%r40, %r9, %r6;
	mul.wide.s32 	%rd14, %r40, 4;
	add.s64 	%rd15, %rd7, %rd14;
	ld.global.f32 	%f78, [%rd15];

BB33_12:
	add.f32 	%f1, %f78, %f1;
	add.s32 	%r58, %r58, 512;

BB33_13:
	add.s32 	%r42, %r58, %r26;
	add.s32 	%r12, %r42, %r6;
	mov.f32 	%f80, 0f00000000;
	setp.ge.s32	%p8, %r42, %r25;
	@%p8 bra 	BB33_15;

	mul.wide.s32 	%rd16, %r12, 4;
	add.s64 	%rd17, %rd7, %rd16;
	ld.global.f32 	%f80, [%rd17];

BB33_15:
	add.f32 	%f81, %f80, %f1;
	add.s32 	%r58, %r58, 512;
	mov.f32 	%f1, %f81;
	bra.uni 	BB33_16;

BB33_4:
	mov.f32 	%f81, %f1;
	mov.f32 	%f1, %f33;

BB33_16:
	setp.lt.u32	%p9, %r36, 4;
	@%p9 bra 	BB33_27;

	add.s32 	%r61, %r26, %r58;
	mad.lo.s32 	%r47, %r24, %r57, %r3;
	mad.lo.s32 	%r48, %r25, %r47, %r61;
	mul.wide.s32 	%rd18, %r48, 4;
	add.s64 	%rd24, %rd7, %rd18;
	mov.f32 	%f1, %f81;

BB33_18:
	mov.f32 	%f87, 0f00000000;
	setp.ge.s32	%p10, %r61, %r25;
	mov.f32 	%f84, %f87;
	@%p10 bra 	BB33_20;

	ld.global.f32 	%f84, [%rd24];

BB33_20:
	add.f32 	%f18, %f84, %f1;
	add.s32 	%r49, %r61, 512;
	setp.ge.s32	%p11, %r49, %r25;
	mov.f32 	%f85, %f87;
	@%p11 bra 	BB33_22;

	ld.global.f32 	%f85, [%rd24+2048];

BB33_22:
	add.f32 	%f21, %f85, %f18;
	add.s32 	%r50, %r61, 1024;
	setp.ge.s32	%p12, %r50, %r25;
	mov.f32 	%f86, %f87;
	@%p12 bra 	BB33_24;

	ld.global.f32 	%f86, [%rd24+4096];

BB33_24:
	add.f32 	%f24, %f86, %f21;
	add.s32 	%r51, %r61, 1536;
	setp.ge.s32	%p13, %r51, %r25;
	@%p13 bra 	BB33_26;

	ld.global.f32 	%f87, [%rd24+6144];

BB33_26:
	add.f32 	%f1, %f87, %f24;
	add.s32 	%r61, %r61, 2048;
	add.s64 	%rd24, %rd24, 8192;
	add.s32 	%r58, %r58, 2048;
	setp.lt.s32	%p14, %r58, %r25;
	@%p14 bra 	BB33_18;

BB33_27:
	mov.u64 	%rd20, fast_mean_opencl$loca;
	add.s64 	%rd21, %rd20, %rd9;
	st.shared.f32 	[%rd21], %f1;

BB33_28:
	add.s32 	%r57, %r57, 1;
	setp.lt.s32	%p15, %r57, %r23;
	@%p15 bra 	BB33_2;

BB33_29:
	bar.sync 	0;
	setp.ne.s32	%p16, %r26, 0;
	@%p16 bra 	BB33_33;

	mul.wide.s32 	%rd23, %r3, 4;
	add.s64 	%rd4, %rd8, %rd23;
	st.global.u32 	[%rd4], %r27;
	mov.f32 	%f90, 0f00000000;
	mov.u32 	%r63, -512;

BB33_31:
	ld.shared.f32 	%f42, [%rd25];
	add.f32 	%f43, %f42, %f90;
	ld.shared.f32 	%f44, [%rd25+4];
	add.f32 	%f45, %f44, %f43;
	ld.shared.f32 	%f46, [%rd25+8];
	add.f32 	%f47, %f46, %f45;
	ld.shared.f32 	%f48, [%rd25+12];
	add.f32 	%f49, %f48, %f47;
	ld.shared.f32 	%f50, [%rd25+16];
	add.f32 	%f51, %f50, %f49;
	ld.shared.f32 	%f52, [%rd25+20];
	add.f32 	%f53, %f52, %f51;
	ld.shared.f32 	%f54, [%rd25+24];
	add.f32 	%f55, %f54, %f53;
	ld.shared.f32 	%f56, [%rd25+28];
	add.f32 	%f57, %f56, %f55;
	ld.shared.f32 	%f58, [%rd25+32];
	add.f32 	%f59, %f58, %f57;
	ld.shared.f32 	%f60, [%rd25+36];
	add.f32 	%f61, %f60, %f59;
	ld.shared.f32 	%f62, [%rd25+40];
	add.f32 	%f63, %f62, %f61;
	ld.shared.f32 	%f64, [%rd25+44];
	add.f32 	%f65, %f64, %f63;
	ld.shared.f32 	%f66, [%rd25+48];
	add.f32 	%f67, %f66, %f65;
	ld.shared.f32 	%f68, [%rd25+52];
	add.f32 	%f69, %f68, %f67;
	ld.shared.f32 	%f70, [%rd25+56];
	add.f32 	%f71, %f70, %f69;
	ld.shared.f32 	%f72, [%rd25+60];
	add.f32 	%f90, %f72, %f71;
	add.s64 	%rd25, %rd25, 64;
	add.s32 	%r63, %r63, 16;
	setp.ne.s32	%p17, %r63, 0;
	@%p17 bra 	BB33_31;

	mul.lo.s32 	%r56, %r25, %r23;
	cvt.rn.f32.s32	%f73, %r56;
	div.full.f32 	%f74, %f90, %f73;
	st.global.f32 	[%rd4], %f74;

BB33_33:
	ret;
}

	// .globl	fast_variance_opencl
.entry fast_variance_opencl(
	.param .u64 .ptr .global .align 4 fast_variance_opencl_param_0,
	.param .u64 .ptr .global .align 4 fast_variance_opencl_param_1,
	.param .u32 fast_variance_opencl_param_2,
	.param .u32 fast_variance_opencl_param_3,
	.param .u32 fast_variance_opencl_param_4,
	.param .u64 .ptr .global .align 4 fast_variance_opencl_param_5
)
{
	.reg .pred 	%p<27>;
	.reg .f32 	%f<146>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<23>;
	// demoted variable
	.shared .align 4 .b8 fast_variance_opencl$loca[2048];

	ld.param.u32 	%r9, [fast_variance_opencl_param_2];
	ld.param.u32 	%r10, [fast_variance_opencl_param_3];
	ld.param.u32 	%r11, [fast_variance_opencl_param_4];
	ld.param.u64 	%rd6, [fast_variance_opencl_param_5];
	mov.u32 	%r12, %tid.x;
	mul.wide.s32 	%rd7, %r12, 4;
	mov.u64 	%rd8, fast_variance_opencl$loca;
	add.s64 	%rd9, %rd8, %rd7;
	mov.u32 	%r35, 0;
	st.shared.u32 	[%rd9], %r35;
	mov.u32 	%r14, %ctaid.x;
	mov.b32	%r15, %envreg0;
	add.s32 	%r1, %r14, %r15;
	setp.lt.s32	%p1, %r9, 1;
	@%p1 bra 	BB34_20;

	mov.f32 	%f140, 0f00000000;

BB34_2:
	setp.lt.s32	%p2, %r11, 1;
	@%p2 bra 	BB34_19;

	mov.u32 	%r36, 0;

BB34_4:
	add.s32 	%r4, %r36, %r12;
	mov.f32 	%f143, 0f00000000;
	setp.ge.s32	%p3, %r4, %r11;
	@%p3 bra 	BB34_17;

	ld.param.u64 	%rd21, [fast_variance_opencl_param_1];
	ld.param.u64 	%rd20, [fast_variance_opencl_param_0];
	mad.lo.s32 	%r19, %r35, %r10, %r1;
	mad.lo.s32 	%r20, %r19, %r11, %r4;
	mul.wide.s32 	%rd10, %r20, 4;
	add.s64 	%rd11, %rd20, %rd10;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd21, %rd12;
	ld.global.f32 	%f22, [%rd13];
	ld.global.f32 	%f23, [%rd11];
	sub.f32 	%f3, %f23, %f22;
	mov.f32 	%f143, 0f3F800000;
	cvt.rzi.f32.f32	%f24, %f143;
	add.f32 	%f25, %f24, %f24;
	mov.f32 	%f26, 0f40000000;
	sub.f32 	%f27, %f26, %f25;
	abs.f32 	%f4, %f27;
	setp.eq.f32	%p4, %f3, 0f3F800000;
	@%p4 bra 	BB34_17;

	abs.f32 	%f5, %f3;
	setp.gtu.f32	%p5, %f5, 0f7F800000;
	@%p5 bra 	BB34_16;
	bra.uni 	BB34_7;

BB34_16:
	add.f32 	%f143, %f3, 0f40000000;
	bra.uni 	BB34_17;

BB34_7:
	setp.eq.f32	%p6, %f5, 0f7F800000;
	@%p6 bra 	BB34_15;
	bra.uni 	BB34_8;

BB34_15:
	setp.eq.f32	%p20, %f4, 0f3F800000;
	setp.lt.f32	%p21, %f3, 0f00000000;
	and.pred  	%p22, %p21, %p20;
	selp.f32	%f143, 0fFF800000, 0f7F800000, %p22;
	bra.uni 	BB34_17;

BB34_8:
	setp.eq.f32	%p7, %f3, 0f00000000;
	@%p7 bra 	BB34_14;
	bra.uni 	BB34_9;

BB34_14:
	setp.eq.f32	%p19, %f4, 0f3F800000;
	add.f32 	%f105, %f3, %f3;
	selp.f32	%f143, %f105, 0f00000000, %p19;
	bra.uni 	BB34_17;

BB34_9:
	setp.geu.f32	%p8, %f3, 0f00000000;
	@%p8 bra 	BB34_11;

	cvt.rzi.f32.f32	%f30, %f26;
	setp.neu.f32	%p9, %f30, 0f40000000;
	mov.f32 	%f143, 0f7FFFFFFF;
	@%p9 bra 	BB34_17;

BB34_11:
	setp.lt.f32	%p10, %f5, 0f00800000;
	selp.f32	%f35, 0fC3170000, 0fC2FE0000, %p10;
	mul.f32 	%f36, %f5, 0f4B800000;
	selp.f32	%f37, %f36, %f5, %p10;
	mov.b32 	 %r21, %f37;
	and.b32  	%r22, %r21, 8388607;
	or.b32  	%r23, %r22, 1065353216;
	mov.b32 	 %f38, %r23;
	shr.u32 	%r24, %r21, 23;
	cvt.rn.f32.u32	%f39, %r24;
	add.f32 	%f40, %f35, %f39;
	setp.gt.f32	%p11, %f38, 0f3FB504F3;
	mul.f32 	%f41, %f38, 0f3F000000;
	add.f32 	%f42, %f40, 0f3F800000;
	selp.f32	%f43, %f41, %f38, %p11;
	selp.f32	%f44, %f42, %f40, %p11;
	add.f32 	%f45, %f43, 0fBF800000;
	add.f32 	%f32, %f43, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f31,%f32;
	// inline asm
	add.f32 	%f46, %f45, %f45;
	mul.f32 	%f47, %f46, %f31;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4CAF63;
	mov.f32 	%f50, 0f3B18F0FE;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAABD;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.rn.f32 	%f54, %f53, %f48;
	mul.rn.f32 	%f55, %f54, %f47;
	sub.f32 	%f56, %f45, %f47;
	neg.f32 	%f57, %f47;
	add.f32 	%f58, %f56, %f56;
	fma.rn.f32 	%f59, %f57, %f45, %f58;
	mul.rn.f32 	%f60, %f31, %f59;
	add.f32 	%f61, %f47, %f55;
	sub.f32 	%f62, %f47, %f61;
	add.f32 	%f63, %f55, %f62;
	add.f32 	%f64, %f60, %f63;
	add.f32 	%f65, %f61, %f64;
	sub.f32 	%f66, %f61, %f65;
	add.f32 	%f67, %f64, %f66;
	mov.f32 	%f68, 0f3F317200;
	mul.rn.f32 	%f69, %f44, %f68;
	mov.f32 	%f70, 0f35BFBE8E;
	mul.rn.f32 	%f71, %f44, %f70;
	add.f32 	%f72, %f69, %f65;
	sub.f32 	%f73, %f69, %f72;
	add.f32 	%f74, %f65, %f73;
	add.f32 	%f75, %f67, %f74;
	add.f32 	%f76, %f71, %f75;
	add.f32 	%f77, %f72, %f76;
	sub.f32 	%f78, %f72, %f77;
	add.f32 	%f79, %f76, %f78;
	mul.rn.f32 	%f81, %f26, %f77;
	neg.f32 	%f82, %f81;
	fma.rn.f32 	%f83, %f26, %f77, %f82;
	fma.rn.f32 	%f84, %f26, %f79, %f83;
	mov.f32 	%f85, 0f00000000;
	fma.rn.f32 	%f86, %f85, %f77, %f84;
	add.rn.f32 	%f87, %f81, %f86;
	neg.f32 	%f88, %f87;
	add.rn.f32 	%f89, %f81, %f88;
	add.rn.f32 	%f90, %f89, %f86;
	mov.b32 	 %r25, %f87;
	setp.eq.s32	%p12, %r25, 1118925336;
	add.s32 	%r26, %r25, -1;
	mov.b32 	 %f91, %r26;
	add.f32 	%f92, %f90, 0f37000000;
	selp.f32	%f93, %f91, %f87, %p12;
	selp.f32	%f6, %f92, %f90, %p12;
	mul.f32 	%f94, %f93, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f95, %f94;
	mov.f32 	%f96, 0fBF317200;
	fma.rn.f32 	%f97, %f95, %f96, %f93;
	mov.f32 	%f98, 0fB5BFBE8E;
	fma.rn.f32 	%f99, %f95, %f98, %f97;
	mul.f32 	%f34, %f99, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f33,%f34;
	// inline asm
	add.f32 	%f100, %f95, 0f00000000;
	ex2.approx.f32 	%f101, %f100;
	mul.f32 	%f102, %f33, %f101;
	setp.lt.f32	%p13, %f93, 0fC2D20000;
	selp.f32	%f103, 0f00000000, %f102, %p13;
	setp.gt.f32	%p14, %f93, 0f42D20000;
	selp.f32	%f142, 0f7F800000, %f103, %p14;
	setp.eq.f32	%p15, %f142, 0f7F800000;
	@%p15 bra 	BB34_13;

	fma.rn.f32 	%f142, %f142, %f6, %f142;

BB34_13:
	setp.eq.f32	%p16, %f4, 0f3F800000;
	setp.lt.f32	%p17, %f3, 0f00000000;
	and.pred  	%p18, %p17, %p16;
	mov.b32 	 %r27, %f142;
	xor.b32  	%r28, %r27, -2147483648;
	mov.b32 	 %f104, %r28;
	selp.f32	%f143, %f104, %f142, %p18;

BB34_17:
	add.f32 	%f140, %f143, %f140;
	add.s32 	%r36, %r36, 512;
	setp.lt.s32	%p23, %r36, %r11;
	@%p23 bra 	BB34_4;

	mov.u64 	%rd15, fast_variance_opencl$loca;
	add.s64 	%rd16, %rd15, %rd7;
	st.shared.f32 	[%rd16], %f140;

BB34_19:
	add.s32 	%r35, %r35, 1;
	setp.lt.s32	%p24, %r35, %r9;
	@%p24 bra 	BB34_2;

BB34_20:
	bar.sync 	0;
	setp.ne.s32	%p25, %r12, 0;
	@%p25 bra 	BB34_24;

	mov.u64 	%rd22, fast_variance_opencl$loca;
	mov.u32 	%r34, 0;
	mul.wide.s32 	%rd18, %r1, 4;
	add.s64 	%rd1, %rd6, %rd18;
	st.global.u32 	[%rd1], %r34;
	mov.f32 	%f145, 0f00000000;
	mov.u32 	%r37, -512;

BB34_22:
	ld.shared.f32 	%f107, [%rd22];
	add.f32 	%f108, %f107, %f145;
	ld.shared.f32 	%f109, [%rd22+4];
	add.f32 	%f110, %f109, %f108;
	ld.shared.f32 	%f111, [%rd22+8];
	add.f32 	%f112, %f111, %f110;
	ld.shared.f32 	%f113, [%rd22+12];
	add.f32 	%f114, %f113, %f112;
	ld.shared.f32 	%f115, [%rd22+16];
	add.f32 	%f116, %f115, %f114;
	ld.shared.f32 	%f117, [%rd22+20];
	add.f32 	%f118, %f117, %f116;
	ld.shared.f32 	%f119, [%rd22+24];
	add.f32 	%f120, %f119, %f118;
	ld.shared.f32 	%f121, [%rd22+28];
	add.f32 	%f122, %f121, %f120;
	ld.shared.f32 	%f123, [%rd22+32];
	add.f32 	%f124, %f123, %f122;
	ld.shared.f32 	%f125, [%rd22+36];
	add.f32 	%f126, %f125, %f124;
	ld.shared.f32 	%f127, [%rd22+40];
	add.f32 	%f128, %f127, %f126;
	ld.shared.f32 	%f129, [%rd22+44];
	add.f32 	%f130, %f129, %f128;
	ld.shared.f32 	%f131, [%rd22+48];
	add.f32 	%f132, %f131, %f130;
	ld.shared.f32 	%f133, [%rd22+52];
	add.f32 	%f134, %f133, %f132;
	ld.shared.f32 	%f135, [%rd22+56];
	add.f32 	%f136, %f135, %f134;
	ld.shared.f32 	%f137, [%rd22+60];
	add.f32 	%f145, %f137, %f136;
	add.s64 	%rd22, %rd22, 64;
	add.s32 	%r37, %r37, 16;
	setp.ne.s32	%p26, %r37, 0;
	@%p26 bra 	BB34_22;

	mad.lo.s32 	%r33, %r11, %r9, -1;
	cvt.rn.f32.s32	%f138, %r33;
	div.full.f32 	%f139, %f145, %f138;
	st.global.f32 	[%rd1], %f139;

BB34_24:
	ret;
}

	// .globl	flatten_opencl
.entry flatten_opencl(
	.param .u32 flatten_opencl_param_0,
	.param .u64 .ptr .global .align 4 flatten_opencl_param_1,
	.param .u32 flatten_opencl_param_2,
	.param .u32 flatten_opencl_param_3,
	.param .u32 flatten_opencl_param_4,
	.param .u32 flatten_opencl_param_5,
	.param .u64 .ptr .global .align 4 flatten_opencl_param_6
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r5, [flatten_opencl_param_0];
	ld.param.u64 	%rd3, [flatten_opencl_param_1];
	ld.param.u32 	%r2, [flatten_opencl_param_2];
	ld.param.u32 	%r3, [flatten_opencl_param_3];
	ld.param.u32 	%r4, [flatten_opencl_param_5];
	ld.param.u64 	%rd4, [flatten_opencl_param_6];
	mov.b32	%r6, %envreg0;
	mov.u32 	%r7, %ctaid.x;
	add.s32 	%r8, %r7, %r6;
	mov.u32 	%r9, %ctaid.y;
	mov.b32	%r10, %envreg1;
	add.s32 	%r11, %r9, %r10;
	mov.b32	%r12, %envreg6;
	mad.lo.s32 	%r13, %r11, %r12, %r8;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r13, %r14, %r15;
	setp.ge.s32	%p1, %r1, %r5;
	@%p1 bra 	BB35_4;

	rem.s32 	%r16, %r1, %r2;
	div.s32 	%r17, %r1, %r2;
	rem.s32 	%r18, %r17, %r3;
	sub.s32 	%r19, %r17, %r18;
	mad.lo.s32 	%r20, %r17, %r2, %r16;
	mad.lo.s32 	%r21, %r16, %r3, %r18;
	mad.lo.s32 	%r22, %r19, %r2, %r21;
	cvt.s64.s32	%rd1, %r22;
	cvt.s64.s32	%rd2, %r20;
	setp.eq.s32	%p2, %r4, 0;
	@%p2 bra 	BB35_3;

	shl.b64 	%rd5, %rd2, 2;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.f32 	%f1, [%rd6];
	shl.b64 	%rd7, %rd1, 2;
	add.s64 	%rd8, %rd4, %rd7;
	st.global.f32 	[%rd8], %f1;
	bra.uni 	BB35_4;

BB35_3:
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.f32 	%f2, [%rd10];
	shl.b64 	%rd11, %rd2, 2;
	add.s64 	%rd12, %rd4, %rd11;
	st.global.f32 	[%rd12], %f2;

BB35_4:
	ret;
}

	// .globl	mask_opencl
.entry mask_opencl(
	.param .u32 mask_opencl_param_0,
	.param .u64 .ptr .global .align 4 mask_opencl_param_1,
	.param .f32 mask_opencl_param_2,
	.param .u64 .ptr .global .align 4 mask_opencl_param_3,
	.param .f32 mask_opencl_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [mask_opencl_param_0];
	ld.param.u64 	%rd2, [mask_opencl_param_1];
	ld.param.f32 	%f1, [mask_opencl_param_2];
	ld.param.u64 	%rd3, [mask_opencl_param_3];
	ld.param.f32 	%f2, [mask_opencl_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB36_3;

	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f3, [%rd5];
	setp.neu.f32	%p2, %f3, %f1;
	@%p2 bra 	BB36_3;

	shl.b64 	%rd6, %rd1, 2;
	add.s64 	%rd7, %rd2, %rd6;
	st.global.f32 	[%rd7], %f2;

BB36_3:
	ret;
}

	// .globl	scale_mask_opencl
.entry scale_mask_opencl(
	.param .u32 scale_mask_opencl_param_0,
	.param .u64 .ptr .global .align 4 scale_mask_opencl_param_1,
	.param .f32 scale_mask_opencl_param_2,
	.param .u64 .ptr .global .align 4 scale_mask_opencl_param_3,
	.param .f32 scale_mask_opencl_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [scale_mask_opencl_param_0];
	ld.param.u64 	%rd2, [scale_mask_opencl_param_1];
	ld.param.f32 	%f1, [scale_mask_opencl_param_2];
	ld.param.u64 	%rd3, [scale_mask_opencl_param_3];
	ld.param.f32 	%f2, [scale_mask_opencl_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB37_3;

	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f3, [%rd5];
	setp.neu.f32	%p2, %f3, %f1;
	@%p2 bra 	BB37_3;

	shl.b64 	%rd6, %rd1, 2;
	add.s64 	%rd7, %rd2, %rd6;
	ld.global.f32 	%f4, [%rd7];
	mul.rn.f32 	%f5, %f4, %f2;
	st.global.f32 	[%rd7], %f5;

BB37_3:
	ret;
}

	// .globl	shortcut_opencl
.entry shortcut_opencl(
	.param .u32 shortcut_opencl_param_0,
	.param .u32 shortcut_opencl_param_1,
	.param .u32 shortcut_opencl_param_2,
	.param .u32 shortcut_opencl_param_3,
	.param .u32 shortcut_opencl_param_4,
	.param .u32 shortcut_opencl_param_5,
	.param .u32 shortcut_opencl_param_6,
	.param .u32 shortcut_opencl_param_7,
	.param .u32 shortcut_opencl_param_8,
	.param .u32 shortcut_opencl_param_9,
	.param .u64 .ptr .global .align 4 shortcut_opencl_param_10,
	.param .u32 shortcut_opencl_param_11,
	.param .u32 shortcut_opencl_param_12,
	.param .u32 shortcut_opencl_param_13,
	.param .f32 shortcut_opencl_param_14,
	.param .f32 shortcut_opencl_param_15,
	.param .u64 .ptr .global .align 4 shortcut_opencl_param_16
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r14, [shortcut_opencl_param_0];
	ld.param.u32 	%r2, [shortcut_opencl_param_1];
	ld.param.u32 	%r3, [shortcut_opencl_param_2];
	ld.param.u32 	%r4, [shortcut_opencl_param_3];
	ld.param.u32 	%r5, [shortcut_opencl_param_4];
	ld.param.u32 	%r6, [shortcut_opencl_param_5];
	ld.param.u32 	%r7, [shortcut_opencl_param_6];
	ld.param.u32 	%r8, [shortcut_opencl_param_7];
	ld.param.u32 	%r9, [shortcut_opencl_param_8];
	ld.param.u32 	%r10, [shortcut_opencl_param_9];
	ld.param.u64 	%rd1, [shortcut_opencl_param_10];
	ld.param.u32 	%r11, [shortcut_opencl_param_11];
	ld.param.u32 	%r12, [shortcut_opencl_param_12];
	ld.param.u32 	%r13, [shortcut_opencl_param_13];
	ld.param.f32 	%f1, [shortcut_opencl_param_14];
	ld.param.f32 	%f2, [shortcut_opencl_param_15];
	ld.param.u64 	%rd2, [shortcut_opencl_param_16];
	mov.b32	%r15, %envreg0;
	mov.u32 	%r16, %ctaid.x;
	add.s32 	%r17, %r16, %r15;
	mov.u32 	%r18, %ctaid.y;
	mov.b32	%r19, %envreg1;
	add.s32 	%r20, %r18, %r19;
	mov.b32	%r21, %envreg6;
	mad.lo.s32 	%r22, %r20, %r21, %r17;
	mov.u32 	%r23, %ntid.x;
	mov.u32 	%r24, %tid.x;
	mad.lo.s32 	%r1, %r22, %r23, %r24;
	setp.ge.s32	%p1, %r1, %r14;
	@%p1 bra 	BB38_2;

	rem.s32 	%r25, %r1, %r2;
	div.s32 	%r26, %r1, %r2;
	rem.s32 	%r27, %r26, %r3;
	div.s32 	%r28, %r26, %r3;
	rem.s32 	%r29, %r28, %r4;
	div.s32 	%r30, %r28, %r4;
	rem.s32 	%r31, %r30, %r7;
	mul.lo.s32 	%r32, %r25, %r6;
	mul.lo.s32 	%r33, %r27, %r6;
	mad.lo.s32 	%r34, %r31, %r13, %r29;
	mad.lo.s32 	%r35, %r34, %r12, %r33;
	mad.lo.s32 	%r36, %r35, %r11, %r32;
	mul.lo.s32 	%r37, %r25, %r5;
	mul.lo.s32 	%r38, %r27, %r5;
	mad.lo.s32 	%r39, %r31, %r10, %r29;
	mad.lo.s32 	%r40, %r39, %r9, %r38;
	mad.lo.s32 	%r41, %r40, %r8, %r37;
	mul.wide.s32 	%rd3, %r36, 4;
	add.s64 	%rd4, %rd2, %rd3;
	mul.wide.s32 	%rd5, %r41, 4;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f32 	%f3, [%rd6];
	mul.f32 	%f4, %f3, %f2;
	ld.global.f32 	%f5, [%rd4];
	fma.rn.f32 	%f6, %f1, %f5, %f4;
	st.global.f32 	[%rd4], %f6;

BB38_2:
	ret;
}

	// .globl	smooth_l1_opencl
.entry smooth_l1_opencl(
	.param .u32 smooth_l1_opencl_param_0,
	.param .u64 .ptr .global .align 4 smooth_l1_opencl_param_1,
	.param .u64 .ptr .global .align 4 smooth_l1_opencl_param_2,
	.param .u64 .ptr .global .align 4 smooth_l1_opencl_param_3,
	.param .u64 .ptr .global .align 4 smooth_l1_opencl_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r2, [smooth_l1_opencl_param_0];
	ld.param.u64 	%rd3, [smooth_l1_opencl_param_1];
	ld.param.u64 	%rd4, [smooth_l1_opencl_param_2];
	ld.param.u64 	%rd5, [smooth_l1_opencl_param_3];
	ld.param.u64 	%rd6, [smooth_l1_opencl_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB39_4;

	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd4, %rd7;
	add.s64 	%rd9, %rd3, %rd7;
	ld.global.f32 	%f3, [%rd9];
	ld.global.f32 	%f4, [%rd8];
	sub.f32 	%f1, %f4, %f3;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p2, %f2, 0f3F800000;
	add.s64 	%rd1, %rd6, %rd7;
	add.s64 	%rd2, %rd5, %rd7;
	@%p2 bra 	BB39_3;
	bra.uni 	BB39_2;

BB39_3:
	mul.f32 	%f7, %f1, %f1;
	st.global.f32 	[%rd1], %f7;
	st.global.f32 	[%rd2], %f1;
	bra.uni 	BB39_4;

BB39_2:
	fma.rn.f32 	%f5, %f2, 0f40000000, 0fBF800000;
	st.global.f32 	[%rd1], %f5;
	setp.gt.f32	%p3, %f1, 0f00000000;
	selp.f32	%f6, 0f3F800000, 0fBF800000, %p3;
	st.global.f32 	[%rd2], %f6;

BB39_4:
	ret;
}

	// .globl	softmax_x_ent_opencl
.entry softmax_x_ent_opencl(
	.param .u32 softmax_x_ent_opencl_param_0,
	.param .u64 .ptr .global .align 4 softmax_x_ent_opencl_param_1,
	.param .u64 .ptr .global .align 4 softmax_x_ent_opencl_param_2,
	.param .u64 .ptr .global .align 4 softmax_x_ent_opencl_param_3,
	.param .u64 .ptr .global .align 4 softmax_x_ent_opencl_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<39>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r2, [softmax_x_ent_opencl_param_0];
	ld.param.u64 	%rd2, [softmax_x_ent_opencl_param_1];
	ld.param.u64 	%rd3, [softmax_x_ent_opencl_param_2];
	ld.param.u64 	%rd4, [softmax_x_ent_opencl_param_3];
	ld.param.u64 	%rd5, [softmax_x_ent_opencl_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB40_7;

	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd3, %rd6;
	add.s64 	%rd8, %rd2, %rd6;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd7];
	mov.f32 	%f38, 0f00000000;
	setp.eq.f32	%p2, %f2, 0f00000000;
	@%p2 bra 	BB40_6;

	setp.gt.f32	%p3, %f1, 0f00000000;
	setp.lt.f32	%p4, %f1, 0f7F800000;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB40_4;
	bra.uni 	BB40_3;

BB40_4:
	setp.lt.f32	%p6, %f1, 0f00800000;
	mul.f32 	%f11, %f1, 0f4B800000;
	selp.f32	%f12, %f11, %f1, %p6;
	selp.f32	%f13, 0fC3170000, 0fC2FE0000, %p6;
	mov.b32 	 %r13, %f12;
	and.b32  	%r14, %r13, 8388607;
	or.b32  	%r15, %r14, 1065353216;
	mov.b32 	 %f14, %r15;
	shr.u32 	%r16, %r13, 23;
	cvt.rn.f32.u32	%f15, %r16;
	add.f32 	%f16, %f13, %f15;
	setp.gt.f32	%p7, %f14, 0f3FAE147B;
	mul.f32 	%f17, %f14, 0f3F000000;
	add.f32 	%f18, %f16, 0f3F800000;
	selp.f32	%f19, %f17, %f14, %p7;
	selp.f32	%f20, %f18, %f16, %p7;
	add.f32 	%f10, %f19, 0f3F800000;
	add.f32 	%f21, %f19, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f9,%f10;
	// inline asm
	mul.f32 	%f22, %f21, %f21;
	neg.f32 	%f23, %f22;
	mul.rn.f32 	%f24, %f9, %f23;
	add.rn.f32 	%f25, %f21, %f24;
	mul.f32 	%f26, %f25, %f25;
	mov.f32 	%f27, 0f3C4C6A36;
	mov.f32 	%f28, 0f3B1E94E6;
	fma.rn.f32 	%f29, %f28, %f26, %f27;
	mov.f32 	%f30, 0f3DAAAB1A;
	fma.rn.f32 	%f31, %f29, %f26, %f30;
	mul.f32 	%f32, %f26, %f31;
	fma.rn.f32 	%f33, %f32, %f25, %f24;
	add.f32 	%f34, %f21, %f33;
	mov.f32 	%f35, 0f3F317218;
	fma.rn.f32 	%f37, %f20, %f35, %f34;
	bra.uni 	BB40_5;

BB40_3:
	lg2.approx.f32 	%f37, %f1;

BB40_5:
	neg.f32 	%f38, %f37;

BB40_6:
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd5, %rd9;
	st.global.f32 	[%rd10], %f38;
	add.s64 	%rd11, %rd4, %rd9;
	sub.f32 	%f36, %f2, %f1;
	st.global.f32 	[%rd11], %f36;

BB40_7:
	ret;
}

	// .globl	logistic_x_ent_opencl
.entry logistic_x_ent_opencl(
	.param .u32 logistic_x_ent_opencl_param_0,
	.param .u64 .ptr .global .align 4 logistic_x_ent_opencl_param_1,
	.param .u64 .ptr .global .align 4 logistic_x_ent_opencl_param_2,
	.param .u64 .ptr .global .align 4 logistic_x_ent_opencl_param_3,
	.param .u64 .ptr .global .align 4 logistic_x_ent_opencl_param_4
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<63>;
	.reg .f64 	%fd<122>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r22, [logistic_x_ent_opencl_param_0];
	ld.param.u64 	%rd2, [logistic_x_ent_opencl_param_1];
	ld.param.u64 	%rd3, [logistic_x_ent_opencl_param_2];
	ld.param.u64 	%rd4, [logistic_x_ent_opencl_param_3];
	ld.param.u64 	%rd5, [logistic_x_ent_opencl_param_4];
	mov.b32	%r23, %envreg0;
	mov.u32 	%r24, %ctaid.x;
	add.s32 	%r25, %r24, %r23;
	mov.u32 	%r26, %ctaid.y;
	mov.b32	%r27, %envreg1;
	add.s32 	%r28, %r26, %r27;
	mov.b32	%r29, %envreg6;
	mad.lo.s32 	%r30, %r28, %r29, %r25;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r1, %r30, %r31, %r32;
	setp.ge.s32	%p1, %r1, %r22;
	@%p1 bra 	BB41_22;

	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd3, %rd6;
	add.s64 	%rd8, %rd2, %rd6;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd8];
	cvt.f64.f32	%fd17, %f2;
	add.f64 	%fd1, %fd17, 0d3E7AD7F29ABCAF48;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r55}, %fd1;
	}
	setp.gt.f64	%p2, %fd1, 0d0000000000000000;
	setp.lt.s32	%p3, %r55, 2146435072;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB41_6;
	bra.uni 	BB41_2;

BB41_6:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r56, %temp}, %fd1;
	}
	mov.u32 	%r57, -1023;
	setp.gt.s32	%p8, %r55, 1048575;
	@%p8 bra 	BB41_8;

	mul.f64 	%fd20, %fd1, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r55}, %fd20;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r56, %temp}, %fd20;
	}
	mov.u32 	%r57, -1077;

BB41_8:
	shr.u32 	%r35, %r55, 20;
	add.s32 	%r58, %r57, %r35;
	and.b32  	%r36, %r55, -2146435073;
	or.b32  	%r37, %r36, 1072693248;
	mov.b64 	%fd118, {%r56, %r37};
	setp.lt.s32	%p9, %r37, 1073127583;
	@%p9 bra 	BB41_10;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r38, %temp}, %fd118;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r39}, %fd118;
	}
	add.s32 	%r40, %r39, -1048576;
	mov.b64 	%fd118, {%r38, %r40};
	add.s32 	%r58, %r58, 1;

BB41_10:
	add.f64 	%fd22, %fd118, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd21,%fd22;
	// inline asm
	neg.f64 	%fd23, %fd22;
	mov.f64 	%fd24, 0d3FF0000000000000;
	fma.rn.f64 	%fd25, %fd23, %fd21, %fd24;
	fma.rn.f64 	%fd26, %fd25, %fd25, %fd25;
	fma.rn.f64 	%fd27, %fd26, %fd21, %fd21;
	add.f64 	%fd28, %fd118, 0dBFF0000000000000;
	mul.f64 	%fd29, %fd28, %fd27;
	fma.rn.f64 	%fd30, %fd28, %fd27, %fd29;
	mul.f64 	%fd31, %fd30, %fd30;
	mov.f64 	%fd32, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd33, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd34, %fd33, %fd31, %fd32;
	mov.f64 	%fd35, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd36, %fd34, %fd31, %fd35;
	mov.f64 	%fd37, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd38, %fd36, %fd31, %fd37;
	mov.f64 	%fd39, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd40, %fd38, %fd31, %fd39;
	mov.f64 	%fd41, 0d3F624924923BE72D;
	fma.rn.f64 	%fd42, %fd40, %fd31, %fd41;
	mov.f64 	%fd43, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd44, %fd42, %fd31, %fd43;
	mov.f64 	%fd45, 0d3FB5555555555554;
	fma.rn.f64 	%fd46, %fd44, %fd31, %fd45;
	sub.f64 	%fd47, %fd28, %fd30;
	add.f64 	%fd48, %fd47, %fd47;
	neg.f64 	%fd49, %fd30;
	fma.rn.f64 	%fd50, %fd49, %fd28, %fd48;
	mul.f64 	%fd51, %fd27, %fd50;
	mul.f64 	%fd52, %fd31, %fd46;
	fma.rn.f64 	%fd53, %fd52, %fd30, %fd51;
	xor.b32  	%r41, %r58, -2147483648;
	mov.u32 	%r42, 1127219200;
	mov.b64 	%fd54, {%r41, %r42};
	mov.u32 	%r43, -2147483648;
	mov.b64 	%fd55, {%r43, %r42};
	sub.f64 	%fd56, %fd54, %fd55;
	mov.f64 	%fd57, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd58, %fd56, %fd57, %fd30;
	neg.f64 	%fd59, %fd56;
	fma.rn.f64 	%fd60, %fd59, %fd57, %fd58;
	sub.f64 	%fd61, %fd60, %fd30;
	sub.f64 	%fd62, %fd53, %fd61;
	mov.f64 	%fd63, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd64, %fd56, %fd63, %fd62;
	add.f64 	%fd119, %fd58, %fd64;
	bra.uni 	BB41_11;

BB41_2:
	abs.f64 	%fd18, %fd1;
	setp.gtu.f64	%p5, %fd18, 0d7FF0000000000000;
	@%p5 bra 	BB41_5;
	bra.uni 	BB41_3;

BB41_5:
	add.f64 	%fd119, %fd1, %fd1;
	bra.uni 	BB41_11;

BB41_3:
	setp.eq.f64	%p6, %fd1, 0d0000000000000000;
	mov.f64 	%fd119, 0dFFF0000000000000;
	@%p6 bra 	BB41_11;

	setp.eq.f64	%p7, %fd1, 0d7FF0000000000000;
	selp.f64	%fd119, %fd1, 0dFFF8000000000000, %p7;

BB41_11:
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f2;
	cvt.f64.f32	%fd65, %f4;
	add.f64 	%fd9, %fd65, 0d3E7AD7F29ABCAF48;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r59}, %fd9;
	}
	setp.gt.f64	%p10, %fd9, 0d0000000000000000;
	setp.lt.s32	%p11, %r59, 2146435072;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB41_16;
	bra.uni 	BB41_12;

BB41_16:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r60, %temp}, %fd9;
	}
	mov.u32 	%r61, -1023;
	setp.gt.s32	%p16, %r59, 1048575;
	@%p16 bra 	BB41_18;

	mul.f64 	%fd68, %fd9, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r59}, %fd68;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r60, %temp}, %fd68;
	}
	mov.u32 	%r61, -1077;

BB41_18:
	shr.u32 	%r46, %r59, 20;
	add.s32 	%r62, %r61, %r46;
	and.b32  	%r47, %r59, -2146435073;
	or.b32  	%r48, %r47, 1072693248;
	mov.b64 	%fd120, {%r60, %r48};
	setp.lt.s32	%p17, %r48, 1073127583;
	@%p17 bra 	BB41_20;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd120;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd120;
	}
	add.s32 	%r51, %r50, -1048576;
	mov.b64 	%fd120, {%r49, %r51};
	add.s32 	%r62, %r62, 1;

BB41_20:
	add.f64 	%fd70, %fd120, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd69,%fd70;
	// inline asm
	neg.f64 	%fd71, %fd70;
	mov.f64 	%fd72, 0d3FF0000000000000;
	fma.rn.f64 	%fd73, %fd71, %fd69, %fd72;
	fma.rn.f64 	%fd74, %fd73, %fd73, %fd73;
	fma.rn.f64 	%fd75, %fd74, %fd69, %fd69;
	add.f64 	%fd76, %fd120, 0dBFF0000000000000;
	mul.f64 	%fd77, %fd76, %fd75;
	fma.rn.f64 	%fd78, %fd76, %fd75, %fd77;
	mul.f64 	%fd79, %fd78, %fd78;
	mov.f64 	%fd80, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd81, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd82, %fd81, %fd79, %fd80;
	mov.f64 	%fd83, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd84, %fd82, %fd79, %fd83;
	mov.f64 	%fd85, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd86, %fd84, %fd79, %fd85;
	mov.f64 	%fd87, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd88, %fd86, %fd79, %fd87;
	mov.f64 	%fd89, 0d3F624924923BE72D;
	fma.rn.f64 	%fd90, %fd88, %fd79, %fd89;
	mov.f64 	%fd91, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd92, %fd90, %fd79, %fd91;
	mov.f64 	%fd93, 0d3FB5555555555554;
	fma.rn.f64 	%fd94, %fd92, %fd79, %fd93;
	sub.f64 	%fd95, %fd76, %fd78;
	add.f64 	%fd96, %fd95, %fd95;
	neg.f64 	%fd97, %fd78;
	fma.rn.f64 	%fd98, %fd97, %fd76, %fd96;
	mul.f64 	%fd99, %fd75, %fd98;
	mul.f64 	%fd100, %fd79, %fd94;
	fma.rn.f64 	%fd101, %fd100, %fd78, %fd99;
	xor.b32  	%r52, %r62, -2147483648;
	mov.u32 	%r53, 1127219200;
	mov.b64 	%fd102, {%r52, %r53};
	mov.u32 	%r54, -2147483648;
	mov.b64 	%fd103, {%r54, %r53};
	sub.f64 	%fd104, %fd102, %fd103;
	mov.f64 	%fd105, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd106, %fd104, %fd105, %fd78;
	neg.f64 	%fd107, %fd104;
	fma.rn.f64 	%fd108, %fd107, %fd105, %fd106;
	sub.f64 	%fd109, %fd108, %fd78;
	sub.f64 	%fd110, %fd101, %fd109;
	mov.f64 	%fd111, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd112, %fd104, %fd111, %fd110;
	add.f64 	%fd121, %fd106, %fd112;
	bra.uni 	BB41_21;

BB41_12:
	abs.f64 	%fd66, %fd9;
	setp.gtu.f64	%p13, %fd66, 0d7FF0000000000000;
	@%p13 bra 	BB41_15;
	bra.uni 	BB41_13;

BB41_15:
	add.f64 	%fd121, %fd9, %fd9;
	bra.uni 	BB41_21;

BB41_13:
	setp.eq.f64	%p14, %fd9, 0d0000000000000000;
	mov.f64 	%fd121, 0dFFF0000000000000;
	@%p14 bra 	BB41_21;

	setp.eq.f64	%p15, %fd9, 0d7FF0000000000000;
	selp.f64	%fd121, %fd9, 0dFFF8000000000000, %p15;

BB41_21:
	neg.f32 	%f5, %f1;
	cvt.f64.f32	%fd113, %f5;
	sub.f32 	%f7, %f3, %f1;
	cvt.f64.f32	%fd114, %f7;
	mul.f64 	%fd115, %fd114, %fd121;
	neg.f64 	%fd116, %fd115;
	fma.rn.f64 	%fd117, %fd113, %fd119, %fd116;
	cvt.rn.f32.f64	%f8, %fd117;
	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd5, %rd9;
	st.global.f32 	[%rd10], %f8;
	add.s64 	%rd11, %rd4, %rd9;
	sub.f32 	%f9, %f1, %f2;
	st.global.f32 	[%rd11], %f9;

BB41_22:
	ret;
}

	// .globl	l2_opencl
.entry l2_opencl(
	.param .u32 l2_opencl_param_0,
	.param .u64 .ptr .global .align 4 l2_opencl_param_1,
	.param .u64 .ptr .global .align 4 l2_opencl_param_2,
	.param .u64 .ptr .global .align 4 l2_opencl_param_3,
	.param .u64 .ptr .global .align 4 l2_opencl_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r2, [l2_opencl_param_0];
	ld.param.u64 	%rd1, [l2_opencl_param_1];
	ld.param.u64 	%rd2, [l2_opencl_param_2];
	ld.param.u64 	%rd3, [l2_opencl_param_3];
	ld.param.u64 	%rd4, [l2_opencl_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB42_2;

	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd2, %rd5;
	add.s64 	%rd7, %rd1, %rd5;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, %f3;
	add.s64 	%rd8, %rd4, %rd5;
	st.global.f32 	[%rd8], %f4;
	add.s64 	%rd9, %rd3, %rd5;
	st.global.f32 	[%rd9], %f3;

BB42_2:
	ret;
}

	// .globl	l1_opencl
.entry l1_opencl(
	.param .u32 l1_opencl_param_0,
	.param .u64 .ptr .global .align 4 l1_opencl_param_1,
	.param .u64 .ptr .global .align 4 l1_opencl_param_2,
	.param .u64 .ptr .global .align 4 l1_opencl_param_3,
	.param .u64 .ptr .global .align 4 l1_opencl_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r2, [l1_opencl_param_0];
	ld.param.u64 	%rd1, [l1_opencl_param_1];
	ld.param.u64 	%rd2, [l1_opencl_param_2];
	ld.param.u64 	%rd3, [l1_opencl_param_3];
	ld.param.u64 	%rd4, [l1_opencl_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB43_2;

	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd2, %rd5;
	add.s64 	%rd7, %rd1, %rd5;
	ld.global.f32 	%f1, [%rd7];
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f2, %f1;
	abs.f32 	%f4, %f3;
	add.s64 	%rd8, %rd4, %rd5;
	st.global.f32 	[%rd8], %f4;
	setp.gt.f32	%p2, %f3, 0f00000000;
	selp.f32	%f5, 0f3F800000, 0fBF800000, %p2;
	add.s64 	%rd9, %rd3, %rd5;
	st.global.f32 	[%rd9], %f5;

BB43_2:
	ret;
}

	// .globl	wgan_opencl
.entry wgan_opencl(
	.param .u32 wgan_opencl_param_0,
	.param .u64 .ptr .global .align 4 wgan_opencl_param_1,
	.param .u64 .ptr .global .align 4 wgan_opencl_param_2,
	.param .u64 .ptr .global .align 4 wgan_opencl_param_3,
	.param .u64 .ptr .global .align 4 wgan_opencl_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r2, [wgan_opencl_param_0];
	ld.param.u64 	%rd1, [wgan_opencl_param_1];
	ld.param.u64 	%rd2, [wgan_opencl_param_2];
	ld.param.u64 	%rd3, [wgan_opencl_param_3];
	ld.param.u64 	%rd4, [wgan_opencl_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB44_2;

	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f1, [%rd6];
	setp.neu.f32	%p2, %f1, 0f00000000;
	add.s64 	%rd7, %rd1, %rd5;
	ld.global.f32 	%f2, [%rd7];
	neg.f32 	%f3, %f2;
	selp.f32	%f4, %f3, %f2, %p2;
	add.s64 	%rd8, %rd4, %rd5;
	st.global.f32 	[%rd8], %f4;
	ld.global.f32 	%f5, [%rd6];
	setp.gt.f32	%p3, %f5, 0f00000000;
	selp.f32	%f6, 0f3F800000, 0fBF800000, %p3;
	add.s64 	%rd9, %rd3, %rd5;
	st.global.f32 	[%rd9], %f6;

BB44_2:
	ret;
}

	// .globl	weighted_sum_opencl
.entry weighted_sum_opencl(
	.param .u32 weighted_sum_opencl_param_0,
	.param .u64 .ptr .global .align 4 weighted_sum_opencl_param_1,
	.param .u64 .ptr .global .align 4 weighted_sum_opencl_param_2,
	.param .u64 .ptr .global .align 4 weighted_sum_opencl_param_3,
	.param .u64 .ptr .global .align 4 weighted_sum_opencl_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r2, [weighted_sum_opencl_param_0];
	ld.param.u64 	%rd2, [weighted_sum_opencl_param_1];
	ld.param.u64 	%rd3, [weighted_sum_opencl_param_2];
	ld.param.u64 	%rd4, [weighted_sum_opencl_param_3];
	ld.param.u64 	%rd5, [weighted_sum_opencl_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB45_4;

	cvt.s64.s32	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd4, %rd6;
	add.s64 	%rd8, %rd2, %rd6;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd7];
	setp.eq.s64	%p2, %rd3, 0;
	mov.f32 	%f10, 0f00000000;
	@%p2 bra 	BB45_3;

	shl.b64 	%rd9, %rd1, 2;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.f32 	%f10, [%rd10];

BB45_3:
	mov.f32 	%f6, 0f3F800000;
	sub.f32 	%f7, %f6, %f2;
	mul.f32 	%f8, %f7, %f10;
	fma.rn.f32 	%f9, %f2, %f1, %f8;
	shl.b64 	%rd11, %rd1, 2;
	add.s64 	%rd12, %rd5, %rd11;
	st.global.f32 	[%rd12], %f9;

BB45_4:
	ret;
}

	// .globl	deinter_opencl
.entry deinter_opencl(
	.param .u32 deinter_opencl_param_0,
	.param .u64 .ptr .global .align 4 deinter_opencl_param_1,
	.param .u32 deinter_opencl_param_2,
	.param .u64 .ptr .global .align 4 deinter_opencl_param_3,
	.param .u32 deinter_opencl_param_4,
	.param .u64 .ptr .global .align 4 deinter_opencl_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r5, [deinter_opencl_param_0];
	ld.param.u64 	%rd2, [deinter_opencl_param_1];
	ld.param.u32 	%r6, [deinter_opencl_param_2];
	ld.param.u64 	%rd3, [deinter_opencl_param_3];
	ld.param.u32 	%r7, [deinter_opencl_param_4];
	ld.param.u64 	%rd4, [deinter_opencl_param_5];
	mov.b32	%r8, %envreg0;
	mov.u32 	%r9, %ctaid.x;
	add.s32 	%r10, %r9, %r8;
	mov.u32 	%r11, %ctaid.y;
	mov.b32	%r12, %envreg1;
	add.s32 	%r13, %r11, %r12;
	mov.b32	%r14, %envreg6;
	mad.lo.s32 	%r15, %r13, %r14, %r10;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	add.s32 	%r2, %r6, %r5;
	mul.lo.s32 	%r18, %r2, %r7;
	setp.ge.s32	%p1, %r1, %r18;
	@%p1 bra 	BB46_6;

	div.s32 	%r3, %r1, %r2;
	rem.s32 	%r4, %r1, %r2;
	setp.lt.s32	%p2, %r4, %r5;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p2 bra 	BB46_4;
	bra.uni 	BB46_2;

BB46_4:
	setp.eq.s64	%p4, %rd2, 0;
	@%p4 bra 	BB46_6;

	ld.global.f32 	%f4, [%rd1];
	mad.lo.s32 	%r21, %r3, %r5, %r4;
	mul.wide.s32 	%rd8, %r21, 4;
	add.s64 	%rd9, %rd2, %rd8;
	ld.global.f32 	%f5, [%rd9];
	add.f32 	%f6, %f4, %f5;
	st.global.f32 	[%rd9], %f6;
	bra.uni 	BB46_6;

BB46_2:
	setp.eq.s64	%p3, %rd3, 0;
	@%p3 bra 	BB46_6;

	ld.global.f32 	%f1, [%rd1];
	sub.s32 	%r19, %r4, %r5;
	mad.lo.s32 	%r20, %r3, %r6, %r19;
	mul.wide.s32 	%rd6, %r20, 4;
	add.s64 	%rd7, %rd3, %rd6;
	ld.global.f32 	%f2, [%rd7];
	add.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd7], %f3;

BB46_6:
	ret;
}

	// .globl	inter_opencl
.entry inter_opencl(
	.param .u32 inter_opencl_param_0,
	.param .u64 .ptr .global .align 4 inter_opencl_param_1,
	.param .u32 inter_opencl_param_2,
	.param .u64 .ptr .global .align 4 inter_opencl_param_3,
	.param .u32 inter_opencl_param_4,
	.param .u64 .ptr .global .align 4 inter_opencl_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r5, [inter_opencl_param_0];
	ld.param.u64 	%rd2, [inter_opencl_param_1];
	ld.param.u32 	%r6, [inter_opencl_param_2];
	ld.param.u64 	%rd3, [inter_opencl_param_3];
	ld.param.u32 	%r7, [inter_opencl_param_4];
	ld.param.u64 	%rd4, [inter_opencl_param_5];
	mov.b32	%r8, %envreg0;
	mov.u32 	%r9, %ctaid.x;
	add.s32 	%r10, %r9, %r8;
	mov.u32 	%r11, %ctaid.y;
	mov.b32	%r12, %envreg1;
	add.s32 	%r13, %r11, %r12;
	mov.b32	%r14, %envreg6;
	mad.lo.s32 	%r15, %r13, %r14, %r10;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	add.s32 	%r2, %r6, %r5;
	mul.lo.s32 	%r18, %r2, %r7;
	setp.ge.s32	%p1, %r1, %r18;
	@%p1 bra 	BB47_4;

	div.s32 	%r3, %r1, %r2;
	rem.s32 	%r4, %r1, %r2;
	setp.lt.s32	%p2, %r4, %r5;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd1, %rd4, %rd5;
	@%p2 bra 	BB47_3;
	bra.uni 	BB47_2;

BB47_3:
	mad.lo.s32 	%r21, %r3, %r5, %r4;
	mul.wide.s32 	%rd8, %r21, 4;
	add.s64 	%rd9, %rd2, %rd8;
	ld.global.f32 	%f2, [%rd9];
	st.global.f32 	[%rd1], %f2;
	bra.uni 	BB47_4;

BB47_2:
	sub.s32 	%r19, %r4, %r5;
	mad.lo.s32 	%r20, %r3, %r6, %r19;
	mul.wide.s32 	%rd6, %r20, 4;
	add.s64 	%rd7, %rd3, %rd6;
	ld.global.f32 	%f1, [%rd7];
	st.global.f32 	[%rd1], %f1;

BB47_4:
	ret;
}

	// .globl	weighted_delta_opencl
.entry weighted_delta_opencl(
	.param .u32 weighted_delta_opencl_param_0,
	.param .u64 .ptr .global .align 4 weighted_delta_opencl_param_1,
	.param .u64 .ptr .global .align 4 weighted_delta_opencl_param_2,
	.param .u64 .ptr .global .align 4 weighted_delta_opencl_param_3,
	.param .u64 .ptr .global .align 4 weighted_delta_opencl_param_4,
	.param .u64 .ptr .global .align 4 weighted_delta_opencl_param_5,
	.param .u64 .ptr .global .align 4 weighted_delta_opencl_param_6,
	.param .u64 .ptr .global .align 4 weighted_delta_opencl_param_7
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<21>;


	ld.param.u32 	%r2, [weighted_delta_opencl_param_0];
	ld.param.u64 	%rd5, [weighted_delta_opencl_param_1];
	ld.param.u64 	%rd6, [weighted_delta_opencl_param_2];
	ld.param.u64 	%rd7, [weighted_delta_opencl_param_3];
	ld.param.u64 	%rd8, [weighted_delta_opencl_param_4];
	ld.param.u64 	%rd9, [weighted_delta_opencl_param_5];
	ld.param.u64 	%rd10, [weighted_delta_opencl_param_6];
	ld.param.u64 	%rd11, [weighted_delta_opencl_param_7];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB48_6;

	setp.eq.s64	%p2, %rd8, 0;
	cvt.s64.s32	%rd3, %r1;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	add.s64 	%rd4, %rd7, %rd12;
	@%p2 bra 	BB48_3;

	ld.global.f32 	%f1, [%rd2];
	ld.global.f32 	%f2, [%rd4];
	shl.b64 	%rd13, %rd3, 2;
	add.s64 	%rd14, %rd8, %rd13;
	ld.global.f32 	%f3, [%rd14];
	fma.rn.f32 	%f4, %f1, %f2, %f3;
	st.global.f32 	[%rd14], %f4;

BB48_3:
	setp.eq.s64	%p3, %rd9, 0;
	@%p3 bra 	BB48_5;

	ld.global.f32 	%f5, [%rd2];
	ld.global.f32 	%f6, [%rd4];
	mov.f32 	%f7, 0f3F800000;
	sub.f32 	%f8, %f7, %f6;
	shl.b64 	%rd15, %rd3, 2;
	add.s64 	%rd16, %rd9, %rd15;
	ld.global.f32 	%f9, [%rd16];
	fma.rn.f32 	%f10, %f5, %f8, %f9;
	st.global.f32 	[%rd16], %f10;

BB48_5:
	ld.global.f32 	%f11, [%rd2];
	shl.b64 	%rd17, %rd3, 2;
	add.s64 	%rd18, %rd6, %rd17;
	ld.global.f32 	%f12, [%rd18];
	add.s64 	%rd19, %rd5, %rd17;
	ld.global.f32 	%f13, [%rd19];
	sub.f32 	%f14, %f13, %f12;
	add.s64 	%rd20, %rd10, %rd17;
	ld.global.f32 	%f15, [%rd20];
	fma.rn.f32 	%f16, %f11, %f14, %f15;
	st.global.f32 	[%rd20], %f16;

BB48_6:
	ret;
}

	// .globl	mult_add_into_opencl
.entry mult_add_into_opencl(
	.param .u32 mult_add_into_opencl_param_0,
	.param .u64 .ptr .global .align 4 mult_add_into_opencl_param_1,
	.param .u64 .ptr .global .align 4 mult_add_into_opencl_param_2,
	.param .u64 .ptr .global .align 4 mult_add_into_opencl_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [mult_add_into_opencl_param_0];
	ld.param.u64 	%rd1, [mult_add_into_opencl_param_1];
	ld.param.u64 	%rd2, [mult_add_into_opencl_param_2];
	ld.param.u64 	%rd3, [mult_add_into_opencl_param_3];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB49_2;

	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd1, %rd4;
	add.s64 	%rd6, %rd2, %rd4;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd5];
	add.s64 	%rd7, %rd3, %rd4;
	ld.global.f32 	%f3, [%rd7];
	fma.rn.f32 	%f4, %f2, %f1, %f3;
	st.global.f32 	[%rd7], %f4;

BB49_2:
	ret;
}

	// .globl	softmax_tree_opencl
.entry softmax_tree_opencl(
	.param .u64 .ptr .global .align 4 softmax_tree_opencl_param_0,
	.param .u32 softmax_tree_opencl_param_1,
	.param .u32 softmax_tree_opencl_param_2,
	.param .u32 softmax_tree_opencl_param_3,
	.param .f32 softmax_tree_opencl_param_4,
	.param .u64 .ptr .global .align 4 softmax_tree_opencl_param_5,
	.param .u32 softmax_tree_opencl_param_6,
	.param .u64 .ptr .global .align 4 softmax_tree_opencl_param_7,
	.param .u64 .ptr .global .align 4 softmax_tree_opencl_param_8
)
{
	.reg .pred 	%p<41>;
	.reg .f32 	%f<182>;
	.reg .b32 	%r<105>;
	.reg .b64 	%rd<71>;


	ld.param.u64 	%rd7, [softmax_tree_opencl_param_0];
	ld.param.u32 	%r39, [softmax_tree_opencl_param_1];
	ld.param.u32 	%r42, [softmax_tree_opencl_param_2];
	ld.param.u32 	%r40, [softmax_tree_opencl_param_3];
	ld.param.f32 	%f21, [softmax_tree_opencl_param_4];
	ld.param.u64 	%rd8, [softmax_tree_opencl_param_5];
	ld.param.u32 	%r41, [softmax_tree_opencl_param_6];
	ld.param.u64 	%rd9, [softmax_tree_opencl_param_7];
	ld.param.u64 	%rd10, [softmax_tree_opencl_param_8];
	mov.b32	%r43, %envreg0;
	mov.u32 	%r44, %ctaid.x;
	add.s32 	%r45, %r44, %r43;
	mov.u32 	%r46, %ctaid.y;
	mov.b32	%r47, %envreg1;
	add.s32 	%r48, %r46, %r47;
	mov.b32	%r49, %envreg6;
	mad.lo.s32 	%r50, %r48, %r49, %r45;
	mov.u32 	%r51, %ntid.x;
	mov.u32 	%r52, %tid.x;
	mad.lo.s32 	%r1, %r50, %r51, %r52;
	mul.lo.s32 	%r53, %r42, %r39;
	mul.lo.s32 	%r54, %r53, %r41;
	setp.ge.s32	%p1, %r1, %r54;
	@%p1 bra 	BB50_31;

	rem.s32 	%r55, %r1, %r39;
	div.s32 	%r56, %r1, %r39;
	rem.s32 	%r57, %r56, %r41;
	div.s32 	%r58, %r56, %r41;
	mul.wide.s32 	%rd11, %r57, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.u32 	%r59, [%rd12];
	mul.lo.s32 	%r60, %r59, %r39;
	mul.lo.s32 	%r61, %r58, %r40;
	cvt.s64.s32	%rd13, %r60;
	cvt.s64.s32	%rd14, %r61;
	cvt.s64.s32	%rd15, %r55;
	add.s64 	%rd16, %rd14, %rd15;
	add.s64 	%rd1, %rd16, %rd13;
	add.s64 	%rd17, %rd9, %rd11;
	ld.global.u32 	%r2, [%rd17];
	shl.b64 	%rd18, %rd1, 2;
	add.s64 	%rd2, %rd7, %rd18;
	mov.f32 	%f176, 0fFF800000;
	setp.lt.s32	%p2, %r2, 1;
	@%p2 bra 	BB50_11;

	and.b32  	%r3, %r2, 3;
	setp.eq.s32	%p3, %r3, 0;
	mov.f32 	%f176, 0f00000000;
	mov.u32 	%r94, 0;
	mov.f32 	%f173, 0fFF800000;
	@%p3 bra 	BB50_8;

	setp.eq.s32	%p4, %r3, 1;
	mov.u32 	%r91, 0;
	mov.f32 	%f172, 0fFF800000;
	@%p4 bra 	BB50_7;

	setp.eq.s32	%p5, %r3, 2;
	mov.u32 	%r90, 0;
	mov.f32 	%f171, 0fFF800000;
	@%p5 bra 	BB50_6;

	ld.global.f32 	%f27, [%rd2];
	cvt.rzi.s32.f32	%r66, %f27;
	cvt.rn.f32.s32	%f28, %r66;
	setp.gt.f32	%p6, %f28, 0fFF800000;
	selp.f32	%f171, %f28, 0fFF800000, %p6;
	mov.u32 	%r90, 1;

BB50_6:
	neg.s32 	%r67, %r90;
	and.b32  	%r68, %r67, %r39;
	cvt.s64.s32	%rd19, %r68;
	add.s64 	%rd20, %rd19, %rd1;
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd22, %rd7, %rd21;
	ld.global.f32 	%f29, [%rd22];
	cvt.rzi.s32.f32	%r69, %f29;
	cvt.rn.f32.s32	%f30, %r69;
	setp.gt.f32	%p7, %f30, %f171;
	selp.f32	%f172, %f30, %f171, %p7;
	add.s32 	%r91, %r90, 1;

BB50_7:
	mul.lo.s32 	%r70, %r91, %r39;
	cvt.s64.s32	%rd23, %r70;
	add.s64 	%rd24, %rd23, %rd1;
	shl.b64 	%rd25, %rd24, 2;
	add.s64 	%rd26, %rd7, %rd25;
	ld.global.f32 	%f31, [%rd26];
	cvt.rzi.s32.f32	%r71, %f31;
	cvt.rn.f32.s32	%f32, %r71;
	setp.gt.f32	%p8, %f32, %f172;
	selp.f32	%f173, %f32, %f172, %p8;
	add.s32 	%r94, %r91, 1;
	mov.f32 	%f176, %f173;

BB50_8:
	setp.lt.u32	%p9, %r2, 4;
	@%p9 bra 	BB50_11;

	shl.b32 	%r9, %r39, 2;
	mul.lo.s32 	%r93, %r94, %r39;
	mul.wide.s32 	%rd3, %r39, 4;
	mov.f32 	%f176, %f173;

BB50_10:
	cvt.s64.s32	%rd27, %r93;
	add.s64 	%rd28, %rd27, %rd1;
	shl.b64 	%rd29, %rd28, 2;
	add.s64 	%rd30, %rd7, %rd29;
	ld.global.f32 	%f33, [%rd30];
	cvt.rzi.s32.f32	%r72, %f33;
	cvt.rn.f32.s32	%f34, %r72;
	setp.gt.f32	%p10, %f34, %f176;
	selp.f32	%f35, %f34, %f176, %p10;
	add.s64 	%rd31, %rd30, %rd3;
	ld.global.f32 	%f36, [%rd31];
	cvt.rzi.s32.f32	%r73, %f36;
	cvt.rn.f32.s32	%f37, %r73;
	setp.gt.f32	%p11, %f37, %f35;
	selp.f32	%f38, %f37, %f35, %p11;
	add.s64 	%rd32, %rd31, %rd3;
	ld.global.f32 	%f39, [%rd32];
	cvt.rzi.s32.f32	%r74, %f39;
	cvt.rn.f32.s32	%f40, %r74;
	setp.gt.f32	%p12, %f40, %f38;
	selp.f32	%f41, %f40, %f38, %p12;
	add.s64 	%rd33, %rd32, %rd3;
	ld.global.f32 	%f42, [%rd33];
	cvt.rzi.s32.f32	%r75, %f42;
	cvt.rn.f32.s32	%f43, %r75;
	setp.gt.f32	%p13, %f43, %f41;
	selp.f32	%f176, %f43, %f41, %p13;
	add.s32 	%r93, %r93, %r9;
	add.s32 	%r94, %r94, 4;
	setp.lt.s32	%p14, %r94, %r2;
	@%p14 bra 	BB50_10;

BB50_11:
	add.s64 	%rd4, %rd8, %rd18;
	mov.f32 	%f181, 0f00000000;
	@%p2 bra 	BB50_21;

	div.full.f32 	%f11, %f176, %f21;
	and.b32  	%r15, %r2, 3;
	setp.eq.s32	%p16, %r15, 0;
	mov.u32 	%r97, 0;
	mov.f32 	%f181, 0f00000000;
	@%p16 bra 	BB50_18;

	setp.eq.s32	%p17, %r15, 1;
	mov.u32 	%r96, 0;
	mov.f32 	%f178, 0f00000000;
	@%p17 bra 	BB50_17;

	setp.eq.s32	%p18, %r15, 2;
	mov.u32 	%r95, 0;
	mov.f32 	%f177, 0f00000000;
	@%p18 bra 	BB50_16;

	ld.global.f32 	%f50, [%rd2];
	div.full.f32 	%f51, %f50, %f21;
	sub.f32 	%f52, %f51, %f11;
	mul.f32 	%f53, %f52, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f54, %f53;
	mov.f32 	%f55, 0fBF317200;
	fma.rn.f32 	%f56, %f54, %f55, %f52;
	mov.f32 	%f57, 0fB5BFBE8E;
	fma.rn.f32 	%f58, %f54, %f57, %f56;
	mul.f32 	%f49, %f58, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f48,%f49;
	// inline asm
	add.f32 	%f59, %f54, 0f00000000;
	ex2.approx.f32 	%f60, %f59;
	mul.f32 	%f61, %f48, %f60;
	setp.lt.f32	%p19, %f52, 0fC2D20000;
	selp.f32	%f62, 0f00000000, %f61, %p19;
	setp.gt.f32	%p20, %f52, 0f42D20000;
	selp.f32	%f63, 0f7F800000, %f62, %p20;
	add.f32 	%f177, %f63, 0f00000000;
	st.global.f32 	[%rd4], %f63;
	mov.u32 	%r95, 1;

BB50_16:
	neg.s32 	%r80, %r95;
	and.b32  	%r81, %r80, %r39;
	cvt.s64.s32	%rd35, %r81;
	add.s64 	%rd36, %rd35, %rd1;
	shl.b64 	%rd37, %rd36, 2;
	add.s64 	%rd38, %rd7, %rd37;
	ld.global.f32 	%f66, [%rd38];
	div.full.f32 	%f67, %f66, %f21;
	sub.f32 	%f68, %f67, %f11;
	mul.f32 	%f69, %f68, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f70, %f69;
	mov.f32 	%f71, 0fBF317200;
	fma.rn.f32 	%f72, %f70, %f71, %f68;
	mov.f32 	%f73, 0fB5BFBE8E;
	fma.rn.f32 	%f74, %f70, %f73, %f72;
	mul.f32 	%f65, %f74, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f64,%f65;
	// inline asm
	add.f32 	%f75, %f70, 0f00000000;
	ex2.approx.f32 	%f76, %f75;
	mul.f32 	%f77, %f64, %f76;
	setp.lt.f32	%p21, %f68, 0fC2D20000;
	selp.f32	%f78, 0f00000000, %f77, %p21;
	setp.gt.f32	%p22, %f68, 0f42D20000;
	selp.f32	%f79, 0f7F800000, %f78, %p22;
	add.f32 	%f178, %f177, %f79;
	add.s64 	%rd39, %rd8, %rd37;
	st.global.f32 	[%rd39], %f79;
	add.s32 	%r96, %r95, 1;

BB50_17:
	mul.lo.s32 	%r82, %r96, %r39;
	cvt.s64.s32	%rd40, %r82;
	add.s64 	%rd41, %rd40, %rd1;
	shl.b64 	%rd42, %rd41, 2;
	add.s64 	%rd43, %rd7, %rd42;
	ld.global.f32 	%f82, [%rd43];
	div.full.f32 	%f83, %f82, %f21;
	sub.f32 	%f84, %f83, %f11;
	mul.f32 	%f85, %f84, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f86, %f85;
	mov.f32 	%f87, 0fBF317200;
	fma.rn.f32 	%f88, %f86, %f87, %f84;
	mov.f32 	%f89, 0fB5BFBE8E;
	fma.rn.f32 	%f90, %f86, %f89, %f88;
	mul.f32 	%f81, %f90, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f80,%f81;
	// inline asm
	add.f32 	%f91, %f86, 0f00000000;
	ex2.approx.f32 	%f92, %f91;
	mul.f32 	%f93, %f80, %f92;
	setp.lt.f32	%p23, %f84, 0fC2D20000;
	selp.f32	%f94, 0f00000000, %f93, %p23;
	setp.gt.f32	%p24, %f84, 0f42D20000;
	selp.f32	%f95, 0f7F800000, %f94, %p24;
	add.f32 	%f181, %f178, %f95;
	add.s64 	%rd44, %rd8, %rd42;
	st.global.f32 	[%rd44], %f95;
	add.s32 	%r97, %r96, 1;

BB50_18:
	setp.lt.u32	%p25, %r2, 4;
	@%p25 bra 	BB50_21;

	shl.b32 	%r21, %r39, 2;
	mul.lo.s32 	%r98, %r97, %r39;
	mul.wide.s32 	%rd5, %r39, 4;

BB50_20:
	cvt.s64.s32	%rd45, %r98;
	add.s64 	%rd46, %rd45, %rd1;
	shl.b64 	%rd47, %rd46, 2;
	add.s64 	%rd48, %rd7, %rd47;
	ld.global.f32 	%f104, [%rd48];
	div.full.f32 	%f105, %f104, %f21;
	sub.f32 	%f106, %f105, %f11;
	mul.f32 	%f107, %f106, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f108, %f107;
	mov.f32 	%f109, 0fBF317200;
	fma.rn.f32 	%f110, %f108, %f109, %f106;
	mov.f32 	%f111, 0fB5BFBE8E;
	fma.rn.f32 	%f112, %f108, %f111, %f110;
	mul.f32 	%f97, %f112, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f96,%f97;
	// inline asm
	add.f32 	%f113, %f108, 0f00000000;
	ex2.approx.f32 	%f114, %f113;
	mul.f32 	%f115, %f96, %f114;
	setp.lt.f32	%p26, %f106, 0fC2D20000;
	selp.f32	%f116, 0f00000000, %f115, %p26;
	setp.gt.f32	%p27, %f106, 0f42D20000;
	selp.f32	%f117, 0f7F800000, %f116, %p27;
	add.f32 	%f118, %f181, %f117;
	add.s64 	%rd49, %rd8, %rd47;
	st.global.f32 	[%rd49], %f117;
	add.s64 	%rd50, %rd48, %rd5;
	ld.global.f32 	%f119, [%rd50];
	div.full.f32 	%f120, %f119, %f21;
	sub.f32 	%f121, %f120, %f11;
	mul.f32 	%f122, %f121, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f123, %f122;
	fma.rn.f32 	%f124, %f123, %f109, %f121;
	fma.rn.f32 	%f125, %f123, %f111, %f124;
	mul.f32 	%f99, %f125, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f98,%f99;
	// inline asm
	add.f32 	%f126, %f123, 0f00000000;
	ex2.approx.f32 	%f127, %f126;
	mul.f32 	%f128, %f98, %f127;
	setp.lt.f32	%p28, %f121, 0fC2D20000;
	selp.f32	%f129, 0f00000000, %f128, %p28;
	setp.gt.f32	%p29, %f121, 0f42D20000;
	selp.f32	%f130, 0f7F800000, %f129, %p29;
	add.f32 	%f131, %f118, %f130;
	add.s64 	%rd51, %rd49, %rd5;
	st.global.f32 	[%rd51], %f130;
	add.s64 	%rd52, %rd50, %rd5;
	ld.global.f32 	%f132, [%rd52];
	div.full.f32 	%f133, %f132, %f21;
	sub.f32 	%f134, %f133, %f11;
	mul.f32 	%f135, %f134, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f136, %f135;
	fma.rn.f32 	%f137, %f136, %f109, %f134;
	fma.rn.f32 	%f138, %f136, %f111, %f137;
	mul.f32 	%f101, %f138, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f100,%f101;
	// inline asm
	add.f32 	%f139, %f136, 0f00000000;
	ex2.approx.f32 	%f140, %f139;
	mul.f32 	%f141, %f100, %f140;
	setp.lt.f32	%p30, %f134, 0fC2D20000;
	selp.f32	%f142, 0f00000000, %f141, %p30;
	setp.gt.f32	%p31, %f134, 0f42D20000;
	selp.f32	%f143, 0f7F800000, %f142, %p31;
	add.f32 	%f144, %f131, %f143;
	add.s64 	%rd53, %rd51, %rd5;
	st.global.f32 	[%rd53], %f143;
	add.s64 	%rd54, %rd52, %rd5;
	ld.global.f32 	%f145, [%rd54];
	div.full.f32 	%f146, %f145, %f21;
	sub.f32 	%f147, %f146, %f11;
	mul.f32 	%f148, %f147, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f149, %f148;
	fma.rn.f32 	%f150, %f149, %f109, %f147;
	fma.rn.f32 	%f151, %f149, %f111, %f150;
	mul.f32 	%f103, %f151, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f102,%f103;
	// inline asm
	add.f32 	%f152, %f149, 0f00000000;
	ex2.approx.f32 	%f153, %f152;
	mul.f32 	%f154, %f102, %f153;
	setp.lt.f32	%p32, %f147, 0fC2D20000;
	selp.f32	%f155, 0f00000000, %f154, %p32;
	setp.gt.f32	%p33, %f147, 0f42D20000;
	selp.f32	%f156, 0f7F800000, %f155, %p33;
	add.f32 	%f181, %f144, %f156;
	add.s64 	%rd55, %rd53, %rd5;
	st.global.f32 	[%rd55], %f156;
	add.s32 	%r98, %r98, %r21;
	add.s32 	%r97, %r97, 4;
	setp.lt.s32	%p34, %r97, %r2;
	@%p34 bra 	BB50_20;

BB50_21:
	@%p2 bra 	BB50_31;

	and.b32  	%r27, %r2, 3;
	setp.eq.s32	%p36, %r27, 0;
	mov.u32 	%r104, 0;
	@%p36 bra 	BB50_28;

	setp.eq.s32	%p37, %r27, 1;
	mov.u32 	%r101, 0;
	@%p37 bra 	BB50_27;

	setp.eq.s32	%p38, %r27, 2;
	mov.u32 	%r100, 0;
	@%p38 bra 	BB50_26;

	ld.global.f32 	%f157, [%rd4];
	div.full.f32 	%f158, %f157, %f181;
	st.global.f32 	[%rd4], %f158;
	mov.u32 	%r100, 1;

BB50_26:
	neg.s32 	%r87, %r100;
	and.b32  	%r88, %r87, %r39;
	cvt.s64.s32	%rd56, %r88;
	add.s64 	%rd57, %rd56, %rd1;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd59, %rd8, %rd58;
	ld.global.f32 	%f159, [%rd59];
	div.full.f32 	%f160, %f159, %f181;
	st.global.f32 	[%rd59], %f160;
	add.s32 	%r101, %r100, 1;

BB50_27:
	mul.lo.s32 	%r89, %r101, %r39;
	cvt.s64.s32	%rd60, %r89;
	add.s64 	%rd61, %rd60, %rd1;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd63, %rd8, %rd62;
	ld.global.f32 	%f161, [%rd63];
	div.full.f32 	%f162, %f161, %f181;
	st.global.f32 	[%rd63], %f162;
	add.s32 	%r104, %r101, 1;

BB50_28:
	setp.lt.u32	%p39, %r2, 4;
	@%p39 bra 	BB50_31;

	shl.b32 	%r33, %r39, 2;
	mul.lo.s32 	%r103, %r104, %r39;
	mul.wide.s32 	%rd6, %r39, 4;

BB50_30:
	cvt.s64.s32	%rd64, %r103;
	add.s64 	%rd65, %rd64, %rd1;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd67, %rd8, %rd66;
	ld.global.f32 	%f163, [%rd67];
	div.full.f32 	%f164, %f163, %f181;
	st.global.f32 	[%rd67], %f164;
	add.s64 	%rd68, %rd67, %rd6;
	ld.global.f32 	%f165, [%rd68];
	div.full.f32 	%f166, %f165, %f181;
	st.global.f32 	[%rd68], %f166;
	add.s64 	%rd69, %rd68, %rd6;
	ld.global.f32 	%f167, [%rd69];
	div.full.f32 	%f168, %f167, %f181;
	st.global.f32 	[%rd69], %f168;
	add.s64 	%rd70, %rd69, %rd6;
	ld.global.f32 	%f169, [%rd70];
	div.full.f32 	%f170, %f169, %f181;
	st.global.f32 	[%rd70], %f170;
	add.s32 	%r103, %r103, %r33;
	add.s32 	%r104, %r104, 4;
	setp.lt.s32	%p40, %r104, %r2;
	@%p40 bra 	BB50_30;

BB50_31:
	ret;
}

	// .globl	softmax_opencl
.entry softmax_opencl(
	.param .u64 .ptr .global .align 4 softmax_opencl_param_0,
	.param .u32 softmax_opencl_param_1,
	.param .u32 softmax_opencl_param_2,
	.param .u32 softmax_opencl_param_3,
	.param .u32 softmax_opencl_param_4,
	.param .u32 softmax_opencl_param_5,
	.param .u32 softmax_opencl_param_6,
	.param .f32 softmax_opencl_param_7,
	.param .u64 .ptr .global .align 4 softmax_opencl_param_8
)
{
	.reg .pred 	%p<41>;
	.reg .f32 	%f<182>;
	.reg .b32 	%r<102>;
	.reg .b64 	%rd<64>;


	ld.param.u64 	%rd7, [softmax_opencl_param_0];
	ld.param.u32 	%r35, [softmax_opencl_param_1];
	ld.param.u32 	%r40, [softmax_opencl_param_2];
	ld.param.u32 	%r36, [softmax_opencl_param_3];
	ld.param.u32 	%r37, [softmax_opencl_param_4];
	ld.param.u32 	%r38, [softmax_opencl_param_5];
	ld.param.u32 	%r39, [softmax_opencl_param_6];
	ld.param.f32 	%f21, [softmax_opencl_param_7];
	ld.param.u64 	%rd8, [softmax_opencl_param_8];
	mov.b32	%r41, %envreg0;
	mov.u32 	%r42, %ctaid.x;
	add.s32 	%r43, %r42, %r41;
	mov.u32 	%r44, %ctaid.y;
	mov.b32	%r45, %envreg1;
	add.s32 	%r46, %r44, %r45;
	mov.b32	%r47, %envreg6;
	mad.lo.s32 	%r48, %r46, %r47, %r43;
	mov.u32 	%r49, %ntid.x;
	mov.u32 	%r50, %tid.x;
	mad.lo.s32 	%r1, %r48, %r49, %r50;
	mul.lo.s32 	%r51, %r37, %r40;
	setp.ge.s32	%p1, %r1, %r51;
	@%p1 bra 	BB51_31;

	div.s32 	%r52, %r1, %r37;
	mul.lo.s32 	%r53, %r52, %r36;
	cvt.s64.s32	%rd9, %r53;
	rem.s32 	%r54, %r1, %r37;
	mul.lo.s32 	%r55, %r54, %r38;
	cvt.s64.s32	%rd10, %r55;
	add.s64 	%rd1, %rd10, %rd9;
	shl.b64 	%rd11, %rd1, 2;
	add.s64 	%rd2, %rd7, %rd11;
	mov.f32 	%f176, 0fFF800000;
	setp.lt.s32	%p2, %r35, 1;
	@%p2 bra 	BB51_11;

	and.b32  	%r59, %r35, 3;
	mov.u32 	%r87, 0;
	mov.f32 	%f171, 0fFF800000;
	mov.f32 	%f176, 0f00000000;
	setp.eq.s32	%p3, %r59, 0;
	@%p3 bra 	BB51_8;

	setp.eq.s32	%p4, %r59, 1;
	@%p4 bra 	BB51_7;

	setp.eq.s32	%p5, %r59, 2;
	@%p5 bra 	BB51_6;

	ld.global.f32 	%f27, [%rd2];
	cvt.rzi.s32.f32	%r61, %f27;
	cvt.rn.f32.s32	%f28, %r61;
	setp.gt.f32	%p6, %f28, 0fFF800000;
	selp.f32	%f171, %f28, 0fFF800000, %p6;
	mov.u32 	%r87, 1;

BB51_6:
	neg.s32 	%r62, %r87;
	and.b32  	%r63, %r62, %r39;
	cvt.s64.s32	%rd12, %r63;
	add.s64 	%rd13, %rd12, %rd1;
	shl.b64 	%rd14, %rd13, 2;
	add.s64 	%rd15, %rd7, %rd14;
	ld.global.f32 	%f29, [%rd15];
	cvt.rzi.s32.f32	%r64, %f29;
	cvt.rn.f32.s32	%f30, %r64;
	setp.gt.f32	%p7, %f30, %f171;
	selp.f32	%f171, %f30, %f171, %p7;
	add.s32 	%r87, %r87, 1;

BB51_7:
	mul.lo.s32 	%r65, %r87, %r39;
	cvt.s64.s32	%rd16, %r65;
	add.s64 	%rd17, %rd16, %rd1;
	shl.b64 	%rd18, %rd17, 2;
	add.s64 	%rd19, %rd7, %rd18;
	ld.global.f32 	%f31, [%rd19];
	cvt.rzi.s32.f32	%r66, %f31;
	cvt.rn.f32.s32	%f32, %r66;
	setp.gt.f32	%p8, %f32, %f171;
	selp.f32	%f171, %f32, %f171, %p8;
	add.s32 	%r87, %r87, 1;
	mov.f32 	%f176, %f171;

BB51_8:
	setp.lt.u32	%p9, %r35, 4;
	@%p9 bra 	BB51_11;

	shl.b32 	%r7, %r39, 2;
	mul.lo.s32 	%r90, %r87, %r39;
	mul.wide.s32 	%rd3, %r39, 4;
	mov.f32 	%f176, %f171;

BB51_10:
	cvt.s64.s32	%rd20, %r90;
	add.s64 	%rd21, %rd20, %rd1;
	shl.b64 	%rd22, %rd21, 2;
	add.s64 	%rd23, %rd7, %rd22;
	ld.global.f32 	%f33, [%rd23];
	cvt.rzi.s32.f32	%r67, %f33;
	cvt.rn.f32.s32	%f34, %r67;
	setp.gt.f32	%p10, %f34, %f176;
	selp.f32	%f35, %f34, %f176, %p10;
	add.s64 	%rd24, %rd23, %rd3;
	ld.global.f32 	%f36, [%rd24];
	cvt.rzi.s32.f32	%r68, %f36;
	cvt.rn.f32.s32	%f37, %r68;
	setp.gt.f32	%p11, %f37, %f35;
	selp.f32	%f38, %f37, %f35, %p11;
	add.s64 	%rd25, %rd24, %rd3;
	ld.global.f32 	%f39, [%rd25];
	cvt.rzi.s32.f32	%r69, %f39;
	cvt.rn.f32.s32	%f40, %r69;
	setp.gt.f32	%p12, %f40, %f38;
	selp.f32	%f41, %f40, %f38, %p12;
	add.s64 	%rd26, %rd25, %rd3;
	ld.global.f32 	%f42, [%rd26];
	cvt.rzi.s32.f32	%r70, %f42;
	cvt.rn.f32.s32	%f43, %r70;
	setp.gt.f32	%p13, %f43, %f41;
	selp.f32	%f176, %f43, %f41, %p13;
	add.s32 	%r90, %r90, %r7;
	add.s32 	%r87, %r87, 4;
	setp.lt.s32	%p14, %r87, %r35;
	@%p14 bra 	BB51_10;

BB51_11:
	add.s64 	%rd4, %rd8, %rd11;
	mov.f32 	%f181, 0f00000000;
	@%p2 bra 	BB51_21;

	div.full.f32 	%f11, %f176, %f21;
	and.b32  	%r74, %r35, 3;
	mov.u32 	%r94, 0;
	mov.f32 	%f181, 0f00000000;
	setp.eq.s32	%p16, %r74, 0;
	@%p16 bra 	BB51_18;

	setp.eq.s32	%p17, %r74, 1;
	@%p17 bra 	BB51_17;

	setp.eq.s32	%p18, %r74, 2;
	@%p18 bra 	BB51_16;

	ld.global.f32 	%f50, [%rd2];
	div.full.f32 	%f51, %f50, %f21;
	sub.f32 	%f52, %f51, %f11;
	mul.f32 	%f53, %f52, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f54, %f53;
	mov.f32 	%f55, 0fBF317200;
	fma.rn.f32 	%f56, %f54, %f55, %f52;
	mov.f32 	%f57, 0fB5BFBE8E;
	fma.rn.f32 	%f58, %f54, %f57, %f56;
	mul.f32 	%f49, %f58, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f48,%f49;
	// inline asm
	add.f32 	%f59, %f54, 0f00000000;
	ex2.approx.f32 	%f60, %f59;
	mul.f32 	%f61, %f48, %f60;
	setp.lt.f32	%p19, %f52, 0fC2D20000;
	selp.f32	%f62, 0f00000000, %f61, %p19;
	setp.gt.f32	%p20, %f52, 0f42D20000;
	selp.f32	%f63, 0f7F800000, %f62, %p20;
	add.f32 	%f181, %f63, 0f00000000;
	st.global.f32 	[%rd4], %f63;
	mov.u32 	%r94, 1;

BB51_16:
	neg.s32 	%r76, %r94;
	and.b32  	%r77, %r76, %r39;
	cvt.s64.s32	%rd28, %r77;
	add.s64 	%rd29, %rd28, %rd1;
	shl.b64 	%rd30, %rd29, 2;
	add.s64 	%rd31, %rd7, %rd30;
	ld.global.f32 	%f66, [%rd31];
	div.full.f32 	%f67, %f66, %f21;
	sub.f32 	%f68, %f67, %f11;
	mul.f32 	%f69, %f68, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f70, %f69;
	mov.f32 	%f71, 0fBF317200;
	fma.rn.f32 	%f72, %f70, %f71, %f68;
	mov.f32 	%f73, 0fB5BFBE8E;
	fma.rn.f32 	%f74, %f70, %f73, %f72;
	mul.f32 	%f65, %f74, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f64,%f65;
	// inline asm
	add.f32 	%f75, %f70, 0f00000000;
	ex2.approx.f32 	%f76, %f75;
	mul.f32 	%f77, %f64, %f76;
	setp.lt.f32	%p21, %f68, 0fC2D20000;
	selp.f32	%f78, 0f00000000, %f77, %p21;
	setp.gt.f32	%p22, %f68, 0f42D20000;
	selp.f32	%f79, 0f7F800000, %f78, %p22;
	add.f32 	%f181, %f181, %f79;
	add.s64 	%rd32, %rd8, %rd30;
	st.global.f32 	[%rd32], %f79;
	add.s32 	%r94, %r94, 1;

BB51_17:
	mul.lo.s32 	%r78, %r94, %r39;
	cvt.s64.s32	%rd33, %r78;
	add.s64 	%rd34, %rd33, %rd1;
	shl.b64 	%rd35, %rd34, 2;
	add.s64 	%rd36, %rd7, %rd35;
	ld.global.f32 	%f82, [%rd36];
	div.full.f32 	%f83, %f82, %f21;
	sub.f32 	%f84, %f83, %f11;
	mul.f32 	%f85, %f84, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f86, %f85;
	mov.f32 	%f87, 0fBF317200;
	fma.rn.f32 	%f88, %f86, %f87, %f84;
	mov.f32 	%f89, 0fB5BFBE8E;
	fma.rn.f32 	%f90, %f86, %f89, %f88;
	mul.f32 	%f81, %f90, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f80,%f81;
	// inline asm
	add.f32 	%f91, %f86, 0f00000000;
	ex2.approx.f32 	%f92, %f91;
	mul.f32 	%f93, %f80, %f92;
	setp.lt.f32	%p23, %f84, 0fC2D20000;
	selp.f32	%f94, 0f00000000, %f93, %p23;
	setp.gt.f32	%p24, %f84, 0f42D20000;
	selp.f32	%f95, 0f7F800000, %f94, %p24;
	add.f32 	%f181, %f181, %f95;
	add.s64 	%rd37, %rd8, %rd35;
	st.global.f32 	[%rd37], %f95;
	add.s32 	%r94, %r94, 1;

BB51_18:
	setp.lt.u32	%p25, %r35, 4;
	@%p25 bra 	BB51_21;

	shl.b32 	%r18, %r39, 2;
	mul.lo.s32 	%r95, %r94, %r39;
	mul.wide.s32 	%rd5, %r39, 4;

BB51_20:
	cvt.s64.s32	%rd38, %r95;
	add.s64 	%rd39, %rd38, %rd1;
	shl.b64 	%rd40, %rd39, 2;
	add.s64 	%rd41, %rd7, %rd40;
	ld.global.f32 	%f104, [%rd41];
	div.full.f32 	%f105, %f104, %f21;
	sub.f32 	%f106, %f105, %f11;
	mul.f32 	%f107, %f106, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f108, %f107;
	mov.f32 	%f109, 0fBF317200;
	fma.rn.f32 	%f110, %f108, %f109, %f106;
	mov.f32 	%f111, 0fB5BFBE8E;
	fma.rn.f32 	%f112, %f108, %f111, %f110;
	mul.f32 	%f97, %f112, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f96,%f97;
	// inline asm
	add.f32 	%f113, %f108, 0f00000000;
	ex2.approx.f32 	%f114, %f113;
	mul.f32 	%f115, %f96, %f114;
	setp.lt.f32	%p26, %f106, 0fC2D20000;
	selp.f32	%f116, 0f00000000, %f115, %p26;
	setp.gt.f32	%p27, %f106, 0f42D20000;
	selp.f32	%f117, 0f7F800000, %f116, %p27;
	add.f32 	%f118, %f181, %f117;
	add.s64 	%rd42, %rd8, %rd40;
	st.global.f32 	[%rd42], %f117;
	add.s64 	%rd43, %rd41, %rd5;
	ld.global.f32 	%f119, [%rd43];
	div.full.f32 	%f120, %f119, %f21;
	sub.f32 	%f121, %f120, %f11;
	mul.f32 	%f122, %f121, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f123, %f122;
	fma.rn.f32 	%f124, %f123, %f109, %f121;
	fma.rn.f32 	%f125, %f123, %f111, %f124;
	mul.f32 	%f99, %f125, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f98,%f99;
	// inline asm
	add.f32 	%f126, %f123, 0f00000000;
	ex2.approx.f32 	%f127, %f126;
	mul.f32 	%f128, %f98, %f127;
	setp.lt.f32	%p28, %f121, 0fC2D20000;
	selp.f32	%f129, 0f00000000, %f128, %p28;
	setp.gt.f32	%p29, %f121, 0f42D20000;
	selp.f32	%f130, 0f7F800000, %f129, %p29;
	add.f32 	%f131, %f118, %f130;
	add.s64 	%rd44, %rd42, %rd5;
	st.global.f32 	[%rd44], %f130;
	add.s64 	%rd45, %rd43, %rd5;
	ld.global.f32 	%f132, [%rd45];
	div.full.f32 	%f133, %f132, %f21;
	sub.f32 	%f134, %f133, %f11;
	mul.f32 	%f135, %f134, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f136, %f135;
	fma.rn.f32 	%f137, %f136, %f109, %f134;
	fma.rn.f32 	%f138, %f136, %f111, %f137;
	mul.f32 	%f101, %f138, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f100,%f101;
	// inline asm
	add.f32 	%f139, %f136, 0f00000000;
	ex2.approx.f32 	%f140, %f139;
	mul.f32 	%f141, %f100, %f140;
	setp.lt.f32	%p30, %f134, 0fC2D20000;
	selp.f32	%f142, 0f00000000, %f141, %p30;
	setp.gt.f32	%p31, %f134, 0f42D20000;
	selp.f32	%f143, 0f7F800000, %f142, %p31;
	add.f32 	%f144, %f131, %f143;
	add.s64 	%rd46, %rd44, %rd5;
	st.global.f32 	[%rd46], %f143;
	add.s64 	%rd47, %rd45, %rd5;
	ld.global.f32 	%f145, [%rd47];
	div.full.f32 	%f146, %f145, %f21;
	sub.f32 	%f147, %f146, %f11;
	mul.f32 	%f148, %f147, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f149, %f148;
	fma.rn.f32 	%f150, %f149, %f109, %f147;
	fma.rn.f32 	%f151, %f149, %f111, %f150;
	mul.f32 	%f103, %f151, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f102,%f103;
	// inline asm
	add.f32 	%f152, %f149, 0f00000000;
	ex2.approx.f32 	%f153, %f152;
	mul.f32 	%f154, %f102, %f153;
	setp.lt.f32	%p32, %f147, 0fC2D20000;
	selp.f32	%f155, 0f00000000, %f154, %p32;
	setp.gt.f32	%p33, %f147, 0f42D20000;
	selp.f32	%f156, 0f7F800000, %f155, %p33;
	add.f32 	%f181, %f144, %f156;
	add.s64 	%rd48, %rd46, %rd5;
	st.global.f32 	[%rd48], %f156;
	add.s32 	%r95, %r95, %r18;
	add.s32 	%r94, %r94, 4;
	setp.lt.s32	%p34, %r94, %r35;
	@%p34 bra 	BB51_20;

BB51_21:
	@%p2 bra 	BB51_31;

	and.b32  	%r82, %r35, 3;
	mov.u32 	%r97, 0;
	setp.eq.s32	%p36, %r82, 0;
	@%p36 bra 	BB51_28;

	setp.eq.s32	%p37, %r82, 1;
	@%p37 bra 	BB51_27;

	setp.eq.s32	%p38, %r82, 2;
	@%p38 bra 	BB51_26;

	ld.global.f32 	%f157, [%rd4];
	div.full.f32 	%f158, %f157, %f181;
	st.global.f32 	[%rd4], %f158;
	mov.u32 	%r97, 1;

BB51_26:
	neg.s32 	%r84, %r97;
	and.b32  	%r85, %r84, %r39;
	cvt.s64.s32	%rd49, %r85;
	add.s64 	%rd50, %rd49, %rd1;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd52, %rd8, %rd51;
	ld.global.f32 	%f159, [%rd52];
	div.full.f32 	%f160, %f159, %f181;
	st.global.f32 	[%rd52], %f160;
	add.s32 	%r97, %r97, 1;

BB51_27:
	mul.lo.s32 	%r86, %r97, %r39;
	cvt.s64.s32	%rd53, %r86;
	add.s64 	%rd54, %rd53, %rd1;
	shl.b64 	%rd55, %rd54, 2;
	add.s64 	%rd56, %rd8, %rd55;
	ld.global.f32 	%f161, [%rd56];
	div.full.f32 	%f162, %f161, %f181;
	st.global.f32 	[%rd56], %f162;
	add.s32 	%r97, %r97, 1;

BB51_28:
	setp.lt.u32	%p39, %r35, 4;
	@%p39 bra 	BB51_31;

	shl.b32 	%r29, %r39, 2;
	mul.lo.s32 	%r100, %r97, %r39;
	mul.wide.s32 	%rd6, %r39, 4;

BB51_30:
	cvt.s64.s32	%rd57, %r100;
	add.s64 	%rd58, %rd57, %rd1;
	shl.b64 	%rd59, %rd58, 2;
	add.s64 	%rd60, %rd8, %rd59;
	ld.global.f32 	%f163, [%rd60];
	div.full.f32 	%f164, %f163, %f181;
	st.global.f32 	[%rd60], %f164;
	add.s64 	%rd61, %rd60, %rd6;
	ld.global.f32 	%f165, [%rd61];
	div.full.f32 	%f166, %f165, %f181;
	st.global.f32 	[%rd61], %f166;
	add.s64 	%rd62, %rd61, %rd6;
	ld.global.f32 	%f167, [%rd62];
	div.full.f32 	%f168, %f167, %f181;
	st.global.f32 	[%rd62], %f168;
	add.s64 	%rd63, %rd62, %rd6;
	ld.global.f32 	%f169, [%rd63];
	div.full.f32 	%f170, %f169, %f181;
	st.global.f32 	[%rd63], %f170;
	add.s32 	%r100, %r100, %r29;
	add.s32 	%r97, %r97, 4;
	setp.lt.s32	%p40, %r97, %r35;
	@%p40 bra 	BB51_30;

BB51_31:
	ret;
}

	// .globl	upsample_opencl
.entry upsample_opencl(
	.param .u32 upsample_opencl_param_0,
	.param .u64 .ptr .global .align 4 upsample_opencl_param_1,
	.param .u32 upsample_opencl_param_2,
	.param .u32 upsample_opencl_param_3,
	.param .u32 upsample_opencl_param_4,
	.param .u32 upsample_opencl_param_5,
	.param .u32 upsample_opencl_param_6,
	.param .u32 upsample_opencl_param_7,
	.param .f32 upsample_opencl_param_8,
	.param .u64 .ptr .global .align 4 upsample_opencl_param_9
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<36>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r8, [upsample_opencl_param_0];
	ld.param.u64 	%rd3, [upsample_opencl_param_1];
	ld.param.u32 	%r2, [upsample_opencl_param_2];
	ld.param.u32 	%r3, [upsample_opencl_param_3];
	ld.param.u32 	%r4, [upsample_opencl_param_4];
	ld.param.u32 	%r5, [upsample_opencl_param_5];
	ld.param.u32 	%r6, [upsample_opencl_param_6];
	ld.param.u32 	%r7, [upsample_opencl_param_7];
	ld.param.f32 	%f2, [upsample_opencl_param_8];
	ld.param.u64 	%rd4, [upsample_opencl_param_9];
	mov.b32	%r9, %envreg0;
	mov.u32 	%r10, %ctaid.x;
	add.s32 	%r11, %r10, %r9;
	mov.u32 	%r12, %ctaid.y;
	mov.b32	%r13, %envreg1;
	add.s32 	%r14, %r12, %r13;
	mov.b32	%r15, %envreg6;
	mad.lo.s32 	%r16, %r14, %r15, %r11;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32	%p1, %r1, %r8;
	@%p1 bra 	BB52_5;

	mul.lo.s32 	%r19, %r6, %r2;
	rem.s32 	%r20, %r1, %r19;
	div.s32 	%r21, %r1, %r19;
	mul.lo.s32 	%r22, %r6, %r3;
	rem.s32 	%r23, %r21, %r22;
	div.s32 	%r24, %r21, %r22;
	rem.s32 	%r25, %r24, %r4;
	div.s32 	%r26, %r24, %r4;
	rem.s32 	%r27, %r26, %r5;
	div.s32 	%r28, %r20, %r6;
	div.s32 	%r29, %r23, %r6;
	mad.lo.s32 	%r30, %r27, %r4, %r25;
	mad.lo.s32 	%r31, %r30, %r3, %r29;
	mad.lo.s32 	%r32, %r31, %r2, %r28;
	mul.wide.s32 	%rd5, %r32, 4;
	add.s64 	%rd1, %rd3, %rd5;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd2, %rd4, %rd6;
	setp.eq.s32	%p2, %r7, 0;
	@%p2 bra 	BB52_3;

	ld.global.f32 	%f3, [%rd1];
	ld.global.f32 	%f4, [%rd2];
	fma.rn.f32 	%f5, %f3, %f2, %f4;
	st.global.f32 	[%rd2], %f5;
	bra.uni 	BB52_5;

BB52_3:
	ld.global.f32 	%f6, [%rd2];
	mul.f32 	%f1, %f6, %f2;

BB52_4:
	ld.volatile.global.f32 	%f7, [%rd1];
	mov.b32 	 %r33, %f7;
	add.f32 	%f8, %f1, %f7;
	mov.b32 	 %r34, %f8;
	atom.global.cas.b32 	%r35, [%rd1], %r33, %r34;
	setp.ne.s32	%p3, %r35, %r33;
	@%p3 bra 	BB52_4;

BB52_5:
	ret;
}

	// .globl	col2im_opencl
.entry col2im_opencl(
	.param .u32 col2im_opencl_param_0,
	.param .u64 .ptr .global .align 4 col2im_opencl_param_1,
	.param .u32 col2im_opencl_param_2,
	.param .u32 col2im_opencl_param_3,
	.param .u32 col2im_opencl_param_4,
	.param .u32 col2im_opencl_param_5,
	.param .u32 col2im_opencl_param_6,
	.param .u32 col2im_opencl_param_7,
	.param .u32 col2im_opencl_param_8,
	.param .u64 .ptr .global .align 4 col2im_opencl_param_9
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<114>;
	.reg .b64 	%rd<17>;


	ld.param.u32 	%r35, [col2im_opencl_param_0];
	ld.param.u64 	%rd2, [col2im_opencl_param_1];
	ld.param.u32 	%r36, [col2im_opencl_param_2];
	ld.param.u32 	%r37, [col2im_opencl_param_3];
	ld.param.u32 	%r38, [col2im_opencl_param_4];
	ld.param.u32 	%r39, [col2im_opencl_param_5];
	ld.param.u32 	%r40, [col2im_opencl_param_6];
	ld.param.u32 	%r41, [col2im_opencl_param_7];
	ld.param.u32 	%r42, [col2im_opencl_param_8];
	ld.param.u64 	%rd3, [col2im_opencl_param_9];
	mov.b32	%r43, %envreg0;
	mov.u32 	%r44, %ctaid.x;
	add.s32 	%r45, %r44, %r43;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r46, %tid.x;
	mad.lo.s32 	%r105, %r1, %r45, %r46;
	setp.ge.s32	%p1, %r105, %r35;
	@%p1 bra 	BB53_23;

	mov.b32	%r47, %envreg6;
	mul.lo.s32 	%r3, %r1, %r47;

BB53_2:
	rem.s32 	%r5, %r105, %r37;
	add.s32 	%r6, %r5, %r39;
	div.s32 	%r49, %r105, %r37;
	rem.s32 	%r7, %r49, %r36;
	add.s32 	%r8, %r7, %r39;
	mul.lo.s32 	%r50, %r37, %r36;
	div.s32 	%r9, %r105, %r50;
	setp.lt.s32	%p2, %r6, %r38;
	mov.u32 	%r108, 0;
	mov.u32 	%r106, %r108;
	@%p2 bra 	BB53_4;

	sub.s32 	%r51, %r6, %r38;
	div.s32 	%r52, %r51, %r40;
	add.s32 	%r106, %r52, 1;

BB53_4:
	div.s32 	%r54, %r6, %r40;
	add.s32 	%r55, %r54, 1;
	min.s32 	%r12, %r55, %r42;
	setp.lt.s32	%p3, %r8, %r38;
	@%p3 bra 	BB53_6;

	sub.s32 	%r56, %r8, %r38;
	div.s32 	%r57, %r56, %r40;
	add.s32 	%r108, %r57, 1;

BB53_6:
	div.s32 	%r58, %r8, %r40;
	add.s32 	%r59, %r58, 1;
	min.s32 	%r15, %r59, %r41;
	mad.lo.s32 	%r60, %r9, %r38, %r8;
	mad.lo.s32 	%r16, %r60, %r38, %r6;
	mov.f32 	%f34, 0f00000000;
	setp.ge.s32	%p4, %r108, %r15;
	@%p4 bra 	BB53_22;

	mul.lo.s32 	%r17, %r16, %r41;
	add.s32 	%r18, %r106, 1;
	add.s32 	%r61, %r39, %r7;
	mad.lo.s32 	%r62, %r38, %r9, %r61;
	add.s32 	%r63, %r39, %r5;
	mad.lo.s32 	%r64, %r38, %r62, %r63;
	mul.lo.s32 	%r19, %r41, %r64;
	mov.f32 	%f34, 0f00000000;

BB53_8:
	setp.le.s32	%p5, %r12, %r106;
	@%p5 bra 	BB53_21;

	sub.s32 	%r65, %r12, %r106;
	and.b32  	%r66, %r65, 3;
	setp.eq.s32	%p6, %r66, 0;
	mul.lo.s32 	%r67, %r40, %r38;
	mul.lo.s32 	%r68, %r67, %r41;
	mov.u32 	%r69, 1;
	sub.s32 	%r70, %r69, %r68;
	mad.lo.s32 	%r71, %r108, %r70, %r17;
	mul.lo.s32 	%r21, %r71, %r42;
	mov.f32 	%f15, 0f00000000;
	@%p6 bra 	BB53_10;
	bra.uni 	BB53_11;

BB53_10:
	mov.u32 	%r113, %r106;
	mov.f32 	%f31, %f34;
	mov.f32 	%f34, %f15;
	bra.uni 	BB53_18;

BB53_11:
	setp.eq.s32	%p7, %r66, 1;
	@%p7 bra 	BB53_12;
	bra.uni 	BB53_13;

BB53_12:
	mov.u32 	%r110, %r106;
	bra.uni 	BB53_17;

BB53_13:
	setp.eq.s32	%p8, %r66, 2;
	@%p8 bra 	BB53_14;
	bra.uni 	BB53_15;

BB53_14:
	mov.u32 	%r109, %r106;
	bra.uni 	BB53_16;

BB53_15:
	mul.lo.s32 	%r76, %r41, %r40;
	mul.lo.s32 	%r77, %r76, %r42;
	sub.s32 	%r79, %r69, %r77;
	mad.lo.s32 	%r80, %r106, %r79, %r21;
	mul.wide.s32 	%rd4, %r80, 4;
	add.s64 	%rd5, %rd2, %rd4;
	ld.global.f32 	%f16, [%rd5];
	add.f32 	%f34, %f34, %f16;
	mov.u32 	%r109, %r18;

BB53_16:
	mul.lo.s32 	%r81, %r41, %r40;
	mul.lo.s32 	%r82, %r81, %r42;
	sub.s32 	%r84, %r69, %r82;
	mad.lo.s32 	%r85, %r109, %r84, %r21;
	mul.wide.s32 	%rd6, %r85, 4;
	add.s64 	%rd7, %rd2, %rd6;
	ld.global.f32 	%f17, [%rd7];
	add.f32 	%f34, %f34, %f17;
	add.s32 	%r110, %r109, 1;

BB53_17:
	mul.lo.s32 	%r86, %r41, %r40;
	mul.lo.s32 	%r87, %r86, %r42;
	sub.s32 	%r89, %r69, %r87;
	mad.lo.s32 	%r90, %r110, %r89, %r21;
	mul.wide.s32 	%rd8, %r90, 4;
	add.s64 	%rd9, %rd2, %rd8;
	ld.global.f32 	%f18, [%rd9];
	add.f32 	%f31, %f34, %f18;
	add.s32 	%r113, %r110, 1;
	mov.f32 	%f34, %f31;

BB53_18:
	setp.lt.u32	%p9, %r65, 4;
	@%p9 bra 	BB53_21;

	mul.lo.s32 	%r92, %r41, %r40;
	mul.lo.s32 	%r93, %r92, %r38;
	sub.s32 	%r95, %r69, %r93;
	mad.lo.s32 	%r96, %r95, %r108, %r19;
	mul.lo.s32 	%r97, %r92, %r42;
	sub.s32 	%r98, %r69, %r97;
	mul.lo.s32 	%r99, %r98, %r113;
	mad.lo.s32 	%r112, %r42, %r96, %r99;
	shl.b32 	%r100, %r97, 2;
	mov.u32 	%r101, 4;
	sub.s32 	%r28, %r101, %r100;
	mul.lo.s32 	%r102, %r42, %r41;
	mul.lo.s32 	%r103, %r102, %r40;
	sub.s32 	%r104, %r69, %r103;
	mul.wide.s32 	%rd1, %r104, 4;
	mov.f32 	%f34, %f31;

BB53_20:
	mul.wide.s32 	%rd10, %r112, 4;
	add.s64 	%rd11, %rd2, %rd10;
	ld.global.f32 	%f19, [%rd11];
	add.f32 	%f20, %f34, %f19;
	add.s64 	%rd12, %rd11, %rd1;
	ld.global.f32 	%f21, [%rd12];
	add.f32 	%f22, %f20, %f21;
	add.s64 	%rd13, %rd12, %rd1;
	ld.global.f32 	%f23, [%rd13];
	add.f32 	%f24, %f22, %f23;
	add.s64 	%rd14, %rd13, %rd1;
	ld.global.f32 	%f25, [%rd14];
	add.f32 	%f34, %f24, %f25;
	add.s32 	%r112, %r112, %r28;
	add.s32 	%r113, %r113, 4;
	setp.lt.s32	%p10, %r113, %r12;
	@%p10 bra 	BB53_20;

BB53_21:
	add.s32 	%r108, %r108, 1;
	setp.lt.s32	%p11, %r108, %r15;
	@%p11 bra 	BB53_8;

BB53_22:
	mul.wide.s32 	%rd15, %r105, 4;
	add.s64 	%rd16, %rd3, %rd15;
	ld.global.f32 	%f26, [%rd16];
	add.f32 	%f27, %f34, %f26;
	st.global.f32 	[%rd16], %f27;
	add.s32 	%r105, %r105, %r3;
	setp.lt.s32	%p12, %r105, %r35;
	@%p12 bra 	BB53_2;

BB53_23:
	ret;
}

	// .globl	binarize_opencl
.entry binarize_opencl(
	.param .u64 .ptr .global .align 4 binarize_opencl_param_0,
	.param .u32 binarize_opencl_param_1,
	.param .u64 .ptr .global .align 4 binarize_opencl_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [binarize_opencl_param_0];
	ld.param.u32 	%r2, [binarize_opencl_param_1];
	ld.param.u64 	%rd2, [binarize_opencl_param_2];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB54_2;

	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd1, %rd3;
	ld.global.f32 	%f1, [%rd4];
	setp.ge.f32	%p2, %f1, 0f00000000;
	selp.f32	%f2, 0f3F800000, 0fBF800000, %p2;
	add.s64 	%rd5, %rd2, %rd3;
	st.global.f32 	[%rd5], %f2;

BB54_2:
	ret;
}

	// .globl	binarize_input_opencl
.entry binarize_input_opencl(
	.param .u64 .ptr .global .align 4 binarize_input_opencl_param_0,
	.param .u32 binarize_input_opencl_param_1,
	.param .u32 binarize_input_opencl_param_2,
	.param .u64 .ptr .global .align 4 binarize_input_opencl_param_3
)
{
	.reg .pred 	%p<21>;
	.reg .f32 	%f<53>;
	.reg .b32 	%r<84>;
	.reg .b64 	%rd<33>;


	ld.param.u64 	%rd4, [binarize_input_opencl_param_0];
	ld.param.u32 	%r29, [binarize_input_opencl_param_1];
	ld.param.u32 	%r30, [binarize_input_opencl_param_2];
	ld.param.u64 	%rd5, [binarize_input_opencl_param_3];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r31, %ctaid.x;
	add.s32 	%r32, %r31, %r1;
	mov.u32 	%r33, %ctaid.y;
	mov.b32	%r2, %envreg1;
	add.s32 	%r34, %r33, %r2;
	mov.b32	%r3, %envreg6;
	mad.lo.s32 	%r35, %r34, %r3, %r32;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r35, %r4, %r5;
	setp.ge.s32	%p1, %r6, %r30;
	@%p1 bra 	BB55_21;

	mul.wide.s32 	%rd6, %r6, 4;
	add.s64 	%rd1, %rd4, %rd6;
	mov.f32 	%f52, 0f00000000;
	setp.lt.s32	%p2, %r29, 1;
	@%p2 bra 	BB55_11;

	and.b32  	%r39, %r29, 3;
	mov.u32 	%r76, 0;
	mov.f32 	%f52, 0f00000000;
	setp.eq.s32	%p3, %r39, 0;
	@%p3 bra 	BB55_8;

	setp.eq.s32	%p4, %r39, 1;
	@%p4 bra 	BB55_7;

	setp.eq.s32	%p5, %r39, 2;
	@%p5 bra 	BB55_6;

	ld.global.f32 	%f16, [%rd1];
	abs.f32 	%f17, %f16;
	add.f32 	%f52, %f17, 0f00000000;
	mov.u32 	%r76, 1;

BB55_6:
	neg.s32 	%r41, %r76;
	and.b32  	%r42, %r41, %r30;
	add.s32 	%r43, %r42, %r6;
	mul.wide.s32 	%rd7, %r43, 4;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.f32 	%f18, [%rd8];
	abs.f32 	%f19, %f18;
	add.f32 	%f52, %f52, %f19;
	add.s32 	%r76, %r76, 1;

BB55_7:
	mad.lo.s32 	%r44, %r76, %r30, %r6;
	mul.wide.s32 	%rd9, %r44, 4;
	add.s64 	%rd10, %rd4, %rd9;
	ld.global.f32 	%f20, [%rd10];
	abs.f32 	%f21, %f20;
	add.f32 	%f52, %f52, %f21;
	add.s32 	%r76, %r76, 1;

BB55_8:
	setp.lt.u32	%p6, %r29, 4;
	@%p6 bra 	BB55_11;

	mad.lo.s32 	%r49, %r3, %r34, %r32;
	mad.lo.s32 	%r50, %r4, %r49, %r5;
	shl.b32 	%r12, %r30, 2;
	mad.lo.s32 	%r77, %r76, %r30, %r50;
	mul.wide.s32 	%rd2, %r30, 4;

BB55_10:
	mul.wide.s32 	%rd11, %r77, 4;
	add.s64 	%rd12, %rd4, %rd11;
	ld.global.f32 	%f22, [%rd12];
	abs.f32 	%f23, %f22;
	add.f32 	%f24, %f52, %f23;
	add.s64 	%rd13, %rd12, %rd2;
	ld.global.f32 	%f25, [%rd13];
	abs.f32 	%f26, %f25;
	add.f32 	%f27, %f24, %f26;
	add.s64 	%rd14, %rd13, %rd2;
	ld.global.f32 	%f28, [%rd14];
	abs.f32 	%f29, %f28;
	add.f32 	%f30, %f27, %f29;
	add.s64 	%rd15, %rd14, %rd2;
	ld.global.f32 	%f31, [%rd15];
	abs.f32 	%f32, %f31;
	add.f32 	%f52, %f30, %f32;
	add.s32 	%r77, %r77, %r12;
	add.s32 	%r76, %r76, 4;
	setp.lt.s32	%p7, %r76, %r29;
	@%p7 bra 	BB55_10;

BB55_11:
	cvt.rn.f32.s32	%f33, %r29;
	div.full.f32 	%f10, %f52, %f33;
	@%p2 bra 	BB55_21;

	neg.f32 	%f11, %f10;
	and.b32  	%r54, %r29, 3;
	mov.u32 	%r79, 0;
	setp.eq.s32	%p9, %r54, 0;
	@%p9 bra 	BB55_18;

	setp.eq.s32	%p10, %r54, 1;
	@%p10 bra 	BB55_17;

	setp.eq.s32	%p11, %r54, 2;
	@%p11 bra 	BB55_16;

	ld.global.f32 	%f34, [%rd1];
	setp.gt.f32	%p12, %f34, 0f00000000;
	selp.f32	%f35, %f10, %f11, %p12;
	add.s64 	%rd17, %rd5, %rd6;
	st.global.f32 	[%rd17], %f35;
	mov.u32 	%r79, 1;

BB55_16:
	neg.s32 	%r64, %r79;
	and.b32  	%r65, %r64, %r30;
	add.s32 	%r66, %r65, %r6;
	mul.wide.s32 	%rd18, %r66, 4;
	add.s64 	%rd19, %rd4, %rd18;
	ld.global.f32 	%f36, [%rd19];
	setp.gt.f32	%p13, %f36, 0f00000000;
	selp.f32	%f37, %f10, %f11, %p13;
	add.s64 	%rd20, %rd5, %rd18;
	st.global.f32 	[%rd20], %f37;
	add.s32 	%r79, %r79, 1;

BB55_17:
	mad.lo.s32 	%r67, %r79, %r30, %r6;
	mul.wide.s32 	%rd21, %r67, 4;
	add.s64 	%rd22, %rd4, %rd21;
	ld.global.f32 	%f38, [%rd22];
	setp.gt.f32	%p14, %f38, 0f00000000;
	selp.f32	%f39, %f10, %f11, %p14;
	add.s64 	%rd23, %rd5, %rd21;
	st.global.f32 	[%rd23], %f39;
	add.s32 	%r79, %r79, 1;

BB55_18:
	setp.lt.u32	%p15, %r29, 4;
	@%p15 bra 	BB55_21;

	mad.lo.s32 	%r72, %r3, %r34, %r32;
	mad.lo.s32 	%r73, %r4, %r72, %r5;
	shl.b32 	%r23, %r30, 2;
	mad.lo.s32 	%r82, %r79, %r30, %r73;
	mul.wide.s32 	%rd3, %r30, 4;

BB55_20:
	mul.wide.s32 	%rd24, %r82, 4;
	add.s64 	%rd25, %rd4, %rd24;
	ld.global.f32 	%f40, [%rd25];
	setp.gt.f32	%p16, %f40, 0f00000000;
	selp.f32	%f41, %f10, %f11, %p16;
	add.s64 	%rd26, %rd5, %rd24;
	st.global.f32 	[%rd26], %f41;
	add.s64 	%rd27, %rd25, %rd3;
	ld.global.f32 	%f42, [%rd27];
	setp.gt.f32	%p17, %f42, 0f00000000;
	selp.f32	%f43, %f10, %f11, %p17;
	add.s64 	%rd28, %rd26, %rd3;
	st.global.f32 	[%rd28], %f43;
	add.s64 	%rd29, %rd27, %rd3;
	ld.global.f32 	%f44, [%rd29];
	setp.gt.f32	%p18, %f44, 0f00000000;
	selp.f32	%f45, %f10, %f11, %p18;
	add.s64 	%rd30, %rd28, %rd3;
	st.global.f32 	[%rd30], %f45;
	add.s64 	%rd31, %rd29, %rd3;
	ld.global.f32 	%f46, [%rd31];
	setp.gt.f32	%p19, %f46, 0f00000000;
	selp.f32	%f47, %f10, %f11, %p19;
	add.s64 	%rd32, %rd30, %rd3;
	st.global.f32 	[%rd32], %f47;
	add.s32 	%r82, %r82, %r23;
	add.s32 	%r79, %r79, 4;
	setp.lt.s32	%p20, %r79, %r29;
	@%p20 bra 	BB55_20;

BB55_21:
	ret;
}

	// .globl	binarize_weights_opencl
.entry binarize_weights_opencl(
	.param .u64 .ptr .global .align 4 binarize_weights_opencl_param_0,
	.param .u32 binarize_weights_opencl_param_1,
	.param .u32 binarize_weights_opencl_param_2,
	.param .u64 .ptr .global .align 4 binarize_weights_opencl_param_3
)
{
	.reg .pred 	%p<21>;
	.reg .f32 	%f<53>;
	.reg .b32 	%r<66>;
	.reg .b64 	%rd<29>;


	ld.param.u64 	%rd9, [binarize_weights_opencl_param_0];
	ld.param.u32 	%r24, [binarize_weights_opencl_param_1];
	ld.param.u32 	%r23, [binarize_weights_opencl_param_2];
	ld.param.u64 	%rd10, [binarize_weights_opencl_param_3];
	mov.b32	%r1, %envreg0;
	mov.u32 	%r25, %ctaid.x;
	add.s32 	%r26, %r25, %r1;
	mov.u32 	%r27, %ctaid.y;
	mov.b32	%r2, %envreg1;
	add.s32 	%r28, %r27, %r2;
	mov.b32	%r3, %envreg6;
	mad.lo.s32 	%r29, %r28, %r3, %r26;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r29, %r4, %r5;
	setp.ge.s32	%p1, %r6, %r24;
	@%p1 bra 	BB56_21;

	mul.lo.s32 	%r7, %r6, %r23;
	cvt.s64.s32	%rd1, %r7;
	mul.wide.s32 	%rd11, %r7, 4;
	add.s64 	%rd2, %rd9, %rd11;
	mov.f32 	%f52, 0f00000000;
	setp.lt.s32	%p2, %r23, 1;
	@%p2 bra 	BB56_11;

	and.b32  	%r33, %r23, 3;
	mov.u32 	%r60, 0;
	mov.f32 	%f52, 0f00000000;
	setp.eq.s32	%p3, %r33, 0;
	@%p3 bra 	BB56_8;

	setp.eq.s32	%p4, %r33, 1;
	@%p4 bra 	BB56_7;

	setp.eq.s32	%p5, %r33, 2;
	@%p5 bra 	BB56_6;

	ld.global.f32 	%f16, [%rd2];
	abs.f32 	%f17, %f16;
	add.f32 	%f52, %f17, 0f00000000;
	mov.u32 	%r60, 1;

BB56_6:
	add.s32 	%r35, %r60, %r7;
	mul.wide.s32 	%rd12, %r35, 4;
	add.s64 	%rd13, %rd9, %rd12;
	ld.global.f32 	%f18, [%rd13];
	abs.f32 	%f19, %f18;
	add.f32 	%f52, %f52, %f19;
	add.s32 	%r60, %r60, 1;

BB56_7:
	add.s32 	%r36, %r60, %r7;
	mul.wide.s32 	%rd14, %r36, 4;
	add.s64 	%rd15, %rd9, %rd14;
	ld.global.f32 	%f20, [%rd15];
	abs.f32 	%f21, %f20;
	add.f32 	%f52, %f52, %f21;
	add.s32 	%r60, %r60, 1;

BB56_8:
	setp.lt.u32	%p6, %r23, 4;
	@%p6 bra 	BB56_11;

	mad.lo.s32 	%r41, %r3, %r28, %r26;
	mad.lo.s32 	%r42, %r4, %r41, %r5;
	mad.lo.s32 	%r43, %r23, %r42, %r60;
	mul.wide.s32 	%rd16, %r43, 4;
	add.s64 	%rd27, %rd9, %rd16;

BB56_10:
	ld.global.f32 	%f22, [%rd27];
	abs.f32 	%f23, %f22;
	add.f32 	%f24, %f52, %f23;
	ld.global.f32 	%f25, [%rd27+4];
	abs.f32 	%f26, %f25;
	add.f32 	%f27, %f24, %f26;
	ld.global.f32 	%f28, [%rd27+8];
	abs.f32 	%f29, %f28;
	add.f32 	%f30, %f27, %f29;
	ld.global.f32 	%f31, [%rd27+12];
	abs.f32 	%f32, %f31;
	add.f32 	%f52, %f30, %f32;
	add.s64 	%rd27, %rd27, 16;
	add.s32 	%r60, %r60, 4;
	setp.lt.s32	%p7, %r60, %r23;
	@%p7 bra 	BB56_10;

BB56_11:
	cvt.rn.f32.s32	%f33, %r23;
	div.full.f32 	%f10, %f52, %f33;
	@%p2 bra 	BB56_21;

	neg.f32 	%f11, %f10;
	and.b32  	%r47, %r23, 3;
	mov.u32 	%r62, 0;
	setp.eq.s32	%p9, %r47, 0;
	@%p9 bra 	BB56_18;

	setp.eq.s32	%p10, %r47, 1;
	@%p10 bra 	BB56_17;

	setp.eq.s32	%p11, %r47, 2;
	@%p11 bra 	BB56_16;

	ld.global.f32 	%f34, [%rd2];
	setp.gt.f32	%p12, %f34, 0f00000000;
	selp.f32	%f35, %f10, %f11, %p12;
	shl.b64 	%rd17, %rd1, 2;
	add.s64 	%rd18, %rd10, %rd17;
	st.global.f32 	[%rd18], %f35;
	mov.u32 	%r62, 1;

BB56_16:
	add.s32 	%r49, %r62, %r7;
	mul.wide.s32 	%rd19, %r49, 4;
	add.s64 	%rd20, %rd9, %rd19;
	ld.global.f32 	%f36, [%rd20];
	setp.gt.f32	%p13, %f36, 0f00000000;
	selp.f32	%f37, %f10, %f11, %p13;
	add.s64 	%rd21, %rd10, %rd19;
	st.global.f32 	[%rd21], %f37;
	add.s32 	%r62, %r62, 1;

BB56_17:
	add.s32 	%r50, %r62, %r7;
	mul.wide.s32 	%rd22, %r50, 4;
	add.s64 	%rd23, %rd9, %rd22;
	ld.global.f32 	%f38, [%rd23];
	setp.gt.f32	%p14, %f38, 0f00000000;
	selp.f32	%f39, %f10, %f11, %p14;
	add.s64 	%rd24, %rd10, %rd22;
	st.global.f32 	[%rd24], %f39;
	add.s32 	%r62, %r62, 1;

BB56_18:
	setp.lt.u32	%p15, %r23, 4;
	@%p15 bra 	BB56_21;

	mad.lo.s32 	%r55, %r3, %r28, %r26;
	mad.lo.s32 	%r56, %r4, %r55, %r5;
	mad.lo.s32 	%r57, %r23, %r56, %r62;
	mul.wide.s32 	%rd28, %r57, 4;

BB56_20:
	add.s64 	%rd25, %rd9, %rd28;
	ld.global.f32 	%f40, [%rd25];
	setp.gt.f32	%p16, %f40, 0f00000000;
	selp.f32	%f41, %f10, %f11, %p16;
	add.s64 	%rd26, %rd10, %rd28;
	st.global.f32 	[%rd26], %f41;
	ld.global.f32 	%f42, [%rd25+4];
	setp.gt.f32	%p17, %f42, 0f00000000;
	selp.f32	%f43, %f10, %f11, %p17;
	st.global.f32 	[%rd26+4], %f43;
	ld.global.f32 	%f44, [%rd25+8];
	setp.gt.f32	%p18, %f44, 0f00000000;
	selp.f32	%f45, %f10, %f11, %p18;
	st.global.f32 	[%rd26+8], %f45;
	ld.global.f32 	%f46, [%rd25+12];
	setp.gt.f32	%p19, %f46, 0f00000000;
	selp.f32	%f47, %f10, %f11, %p19;
	st.global.f32 	[%rd26+12], %f47;
	add.s64 	%rd28, %rd28, 16;
	add.s32 	%r62, %r62, 4;
	setp.lt.s32	%p20, %r62, %r23;
	@%p20 bra 	BB56_20;

BB56_21:
	ret;
}

	// .globl	smooth_opencl
.entry smooth_opencl(
	.param .u64 .ptr .global .align 4 smooth_opencl_param_0,
	.param .u32 smooth_opencl_param_1,
	.param .u32 smooth_opencl_param_2,
	.param .u32 smooth_opencl_param_3,
	.param .u32 smooth_opencl_param_4,
	.param .u32 smooth_opencl_param_5,
	.param .f32 smooth_opencl_param_6,
	.param .u64 .ptr .global .align 4 smooth_opencl_param_7
)
{
	.reg .pred 	%p<40>;
	.reg .f32 	%f<64>;
	.reg .b32 	%r<59>;
	.reg .b64 	%rd<38>;


	ld.param.u64 	%rd4, [smooth_opencl_param_0];
	ld.param.u32 	%r22, [smooth_opencl_param_1];
	ld.param.u32 	%r19, [smooth_opencl_param_2];
	ld.param.u32 	%r20, [smooth_opencl_param_3];
	ld.param.u32 	%r21, [smooth_opencl_param_5];
	ld.param.f32 	%f18, [smooth_opencl_param_6];
	ld.param.u64 	%rd5, [smooth_opencl_param_7];
	mov.b32	%r23, %envreg0;
	mov.u32 	%r24, %ctaid.x;
	add.s32 	%r25, %r24, %r23;
	mov.u32 	%r26, %ctaid.y;
	mov.b32	%r27, %envreg1;
	add.s32 	%r28, %r26, %r27;
	mov.b32	%r29, %envreg6;
	mad.lo.s32 	%r30, %r28, %r29, %r25;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r1, %r30, %r31, %r32;
	setp.ge.s32	%p2, %r1, %r22;
	@%p2 bra 	BB57_26;

	div.s32 	%r2, %r1, %r19;
	rem.s32 	%r33, %r2, %r20;
	sub.s32 	%r3, %r2, %r33;
	setp.lt.s32	%p3, %r21, 1;
	@%p3 bra 	BB57_26;

	rem.s32 	%r35, %r1, %r19;
	cvt.rn.f32.s32	%f19, %r21;
	mul.f32 	%f20, %f19, 0fBF000000;
	cvt.rzi.s32.f32	%r37, %f20;
	add.s32 	%r38, %r3, %r33;
	mad.lo.s32 	%r39, %r38, %r19, %r35;
	add.s32 	%r4, %r33, %r37;
	add.s32 	%r5, %r35, %r37;
	cvt.s64.s32	%rd1, %r39;
	mov.u32 	%r34, 0;
	mov.u32 	%r54, %r34;

BB57_3:
	add.s32 	%r44, %r4, %r54;
	add.s32 	%r45, %r44, %r3;
	mul.lo.s32 	%r7, %r45, %r19;
	setp.gt.s32	%p4, %r44, -1;
	setp.lt.s32	%p5, %r44, %r20;
	and.pred  	%p1, %p4, %p5;
	and.b32  	%r43, %r21, 3;
	setp.eq.s32	%p6, %r43, 0;
	mov.u32 	%r58, %r34;
	@%p6 bra 	BB57_15;

	setp.eq.s32	%p7, %r43, 1;
	mov.u32 	%r56, %r34;
	@%p7 bra 	BB57_12;

	setp.eq.s32	%p8, %r43, 2;
	mov.u32 	%r55, %r34;
	@%p8 bra 	BB57_9;

	setp.lt.s32	%p9, %r5, %r19;
	setp.gt.s32	%p10, %r5, -1;
	and.pred  	%p11, %p1, %p10;
	and.pred  	%p12, %p11, %p9;
	mov.f32 	%f57, 0f00000000;
	@!%p12 bra 	BB57_8;
	bra.uni 	BB57_7;

BB57_7:
	add.s32 	%r46, %r5, %r7;
	mul.wide.s32 	%rd6, %r46, 4;
	add.s64 	%rd7, %rd4, %rd6;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd4, %rd8;
	ld.global.f32 	%f22, [%rd9];
	ld.global.f32 	%f23, [%rd7];
	sub.f32 	%f24, %f23, %f22;
	mul.f32 	%f57, %f24, %f18;

BB57_8:
	shl.b64 	%rd10, %rd1, 2;
	add.s64 	%rd11, %rd5, %rd10;
	ld.global.f32 	%f25, [%rd11];
	add.f32 	%f26, %f57, %f25;
	st.global.f32 	[%rd11], %f26;
	mov.u32 	%r55, 1;

BB57_9:
	add.s32 	%r9, %r5, %r55;
	setp.gt.s32	%p13, %r9, -1;
	and.pred  	%p14, %p1, %p13;
	setp.lt.s32	%p15, %r9, %r19;
	and.pred  	%p16, %p14, %p15;
	mov.f32 	%f58, 0f00000000;
	@!%p16 bra 	BB57_11;
	bra.uni 	BB57_10;

BB57_10:
	add.s32 	%r48, %r9, %r7;
	mul.wide.s32 	%rd12, %r48, 4;
	add.s64 	%rd13, %rd4, %rd12;
	shl.b64 	%rd14, %rd1, 2;
	add.s64 	%rd15, %rd4, %rd14;
	ld.global.f32 	%f28, [%rd15];
	ld.global.f32 	%f29, [%rd13];
	sub.f32 	%f30, %f29, %f28;
	mul.f32 	%f58, %f30, %f18;

BB57_11:
	shl.b64 	%rd16, %rd1, 2;
	add.s64 	%rd17, %rd5, %rd16;
	ld.global.f32 	%f31, [%rd17];
	add.f32 	%f32, %f58, %f31;
	st.global.f32 	[%rd17], %f32;
	add.s32 	%r56, %r55, 1;

BB57_12:
	add.s32 	%r12, %r5, %r56;
	setp.gt.s32	%p17, %r12, -1;
	and.pred  	%p18, %p1, %p17;
	setp.lt.s32	%p19, %r12, %r19;
	and.pred  	%p20, %p18, %p19;
	mov.f32 	%f59, 0f00000000;
	@!%p20 bra 	BB57_14;
	bra.uni 	BB57_13;

BB57_13:
	add.s32 	%r49, %r12, %r7;
	mul.wide.s32 	%rd18, %r49, 4;
	add.s64 	%rd19, %rd4, %rd18;
	shl.b64 	%rd20, %rd1, 2;
	add.s64 	%rd21, %rd4, %rd20;
	ld.global.f32 	%f34, [%rd21];
	ld.global.f32 	%f35, [%rd19];
	sub.f32 	%f36, %f35, %f34;
	mul.f32 	%f59, %f36, %f18;

BB57_14:
	shl.b64 	%rd22, %rd1, 2;
	add.s64 	%rd23, %rd5, %rd22;
	ld.global.f32 	%f37, [%rd23];
	add.f32 	%f38, %f59, %f37;
	st.global.f32 	[%rd23], %f38;
	add.s32 	%r58, %r56, 1;

BB57_15:
	setp.lt.u32	%p21, %r21, 4;
	@%p21 bra 	BB57_25;

BB57_16:
	add.s32 	%r16, %r5, %r58;
	add.s32 	%r50, %r16, %r7;
	setp.gt.s32	%p22, %r16, -1;
	and.pred  	%p23, %p1, %p22;
	setp.lt.s32	%p24, %r16, %r19;
	and.pred  	%p25, %p23, %p24;
	mul.wide.s32 	%rd24, %r50, 4;
	add.s64 	%rd2, %rd4, %rd24;
	mov.f32 	%f63, 0f00000000;
	mov.f32 	%f60, %f63;
	@!%p25 bra 	BB57_18;
	bra.uni 	BB57_17;

BB57_17:
	ld.global.f32 	%f40, [%rd2];
	shl.b64 	%rd25, %rd1, 2;
	add.s64 	%rd26, %rd4, %rd25;
	ld.global.f32 	%f41, [%rd26];
	sub.f32 	%f42, %f40, %f41;
	mul.f32 	%f60, %f42, %f18;

BB57_18:
	shl.b64 	%rd27, %rd1, 2;
	add.s64 	%rd28, %rd5, %rd27;
	ld.global.f32 	%f44, [%rd28];
	add.f32 	%f9, %f60, %f44;
	st.global.f32 	[%rd28], %f9;
	add.s32 	%r51, %r16, 1;
	setp.gt.s32	%p26, %r51, -1;
	and.pred  	%p27, %p1, %p26;
	setp.lt.s32	%p28, %r51, %r19;
	and.pred  	%p29, %p27, %p28;
	mov.f32 	%f61, %f63;
	@!%p29 bra 	BB57_20;
	bra.uni 	BB57_19;

BB57_19:
	add.s64 	%rd30, %rd4, %rd27;
	ld.global.f32 	%f45, [%rd30];
	ld.global.f32 	%f46, [%rd2+4];
	sub.f32 	%f47, %f46, %f45;
	mul.f32 	%f61, %f47, %f18;

BB57_20:
	add.f32 	%f12, %f61, %f9;
	st.global.f32 	[%rd28], %f12;
	add.s32 	%r52, %r16, 2;
	setp.gt.s32	%p30, %r52, -1;
	and.pred  	%p31, %p1, %p30;
	setp.lt.s32	%p32, %r52, %r19;
	and.pred  	%p33, %p31, %p32;
	mov.f32 	%f62, %f63;
	@!%p33 bra 	BB57_22;
	bra.uni 	BB57_21;

BB57_21:
	add.s64 	%rd34, %rd4, %rd27;
	ld.global.f32 	%f49, [%rd34];
	ld.global.f32 	%f50, [%rd2+8];
	sub.f32 	%f51, %f50, %f49;
	mul.f32 	%f62, %f51, %f18;

BB57_22:
	add.f32 	%f15, %f62, %f12;
	st.global.f32 	[%rd28], %f15;
	add.s32 	%r53, %r16, 3;
	setp.gt.s32	%p34, %r53, -1;
	and.pred  	%p35, %p1, %p34;
	setp.lt.s32	%p36, %r53, %r19;
	and.pred  	%p37, %p35, %p36;
	@!%p37 bra 	BB57_24;
	bra.uni 	BB57_23;

BB57_23:
	add.s64 	%rd37, %rd4, %rd27;
	ld.global.f32 	%f53, [%rd37];
	ld.global.f32 	%f54, [%rd2+12];
	sub.f32 	%f55, %f54, %f53;
	mul.f32 	%f63, %f55, %f18;

BB57_24:
	add.f32 	%f56, %f63, %f15;
	st.global.f32 	[%rd28], %f56;
	add.s32 	%r58, %r58, 4;
	setp.lt.s32	%p38, %r58, %r21;
	@%p38 bra 	BB57_16;

BB57_25:
	add.s32 	%r54, %r54, 1;
	setp.lt.s32	%p39, %r54, %r21;
	@%p39 bra 	BB57_3;

BB57_26:
	ret;
}

	// .globl	gemm_nn_opencl
.entry gemm_nn_opencl(
	.param .u32 gemm_nn_opencl_param_0,
	.param .u32 gemm_nn_opencl_param_1,
	.param .u32 gemm_nn_opencl_param_2,
	.param .f32 gemm_nn_opencl_param_3,
	.param .u64 .ptr .global .align 4 gemm_nn_opencl_param_4,
	.param .u32 gemm_nn_opencl_param_5,
	.param .u64 .ptr .global .align 4 gemm_nn_opencl_param_6,
	.param .u32 gemm_nn_opencl_param_7,
	.param .u64 .ptr .global .align 4 gemm_nn_opencl_param_8,
	.param .u32 gemm_nn_opencl_param_9
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<29>;


	ld.param.u32 	%r20, [gemm_nn_opencl_param_0];
	ld.param.u32 	%r16, [gemm_nn_opencl_param_2];
	ld.param.f32 	%f10, [gemm_nn_opencl_param_3];
	ld.param.u64 	%rd6, [gemm_nn_opencl_param_4];
	ld.param.u32 	%r17, [gemm_nn_opencl_param_5];
	ld.param.u64 	%rd7, [gemm_nn_opencl_param_6];
	ld.param.u32 	%r18, [gemm_nn_opencl_param_7];
	ld.param.u64 	%rd8, [gemm_nn_opencl_param_8];
	ld.param.u32 	%r19, [gemm_nn_opencl_param_9];
	mov.b32	%r21, %envreg0;
	mov.u32 	%r22, %ctaid.x;
	add.s32 	%r23, %r22, %r21;
	mov.u32 	%r24, %ctaid.y;
	mov.b32	%r25, %envreg1;
	add.s32 	%r26, %r24, %r25;
	mov.b32	%r27, %envreg6;
	mad.lo.s32 	%r28, %r26, %r27, %r23;
	mov.u32 	%r29, %ntid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r1, %r28, %r29, %r30;
	mul.lo.s32 	%r31, %r19, %r20;
	setp.ge.s32	%p1, %r1, %r31;
	@%p1 bra 	BB58_13;

	div.s32 	%r2, %r1, %r19;
	rem.s32 	%r3, %r1, %r19;
	setp.lt.s32	%p2, %r16, 1;
	@%p2 bra 	BB58_13;

	mul.lo.s32 	%r4, %r2, %r17;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd1, %rd8, %rd9;
	and.b32  	%r33, %r16, 3;
	mov.u32 	%r48, 0;
	setp.eq.s32	%p3, %r33, 0;
	@%p3 bra 	BB58_10;

	setp.eq.s32	%p4, %r33, 1;
	@%p4 bra 	BB58_6;
	bra.uni 	BB58_4;

BB58_6:
	ld.global.f32 	%f38, [%rd1];
	mov.u32 	%r45, 0;
	bra.uni 	BB58_9;

BB58_4:
	setp.ne.s32	%p5, %r33, 2;
	@%p5 bra 	BB58_7;

	ld.global.f32 	%f37, [%rd1];
	mov.u32 	%r44, 0;
	bra.uni 	BB58_8;

BB58_7:
	mul.wide.s32 	%rd10, %r4, 4;
	add.s64 	%rd11, %rd6, %rd10;
	ld.global.f32 	%f11, [%rd11];
	mul.f32 	%f12, %f11, %f10;
	mul.wide.s32 	%rd12, %r3, 4;
	add.s64 	%rd13, %rd7, %rd12;
	ld.global.f32 	%f13, [%rd13];
	ld.global.f32 	%f14, [%rd1];
	fma.rn.f32 	%f37, %f12, %f13, %f14;
	st.global.f32 	[%rd1], %f37;
	mov.u32 	%r44, 1;

BB58_8:
	add.s32 	%r37, %r44, %r4;
	mul.wide.s32 	%rd14, %r37, 4;
	add.s64 	%rd15, %rd6, %rd14;
	ld.global.f32 	%f15, [%rd15];
	mul.f32 	%f16, %f15, %f10;
	neg.s32 	%r38, %r44;
	and.b32  	%r39, %r38, %r18;
	add.s32 	%r40, %r39, %r3;
	mul.wide.s32 	%rd16, %r40, 4;
	add.s64 	%rd17, %rd7, %rd16;
	ld.global.f32 	%f17, [%rd17];
	fma.rn.f32 	%f38, %f16, %f17, %f37;
	st.global.f32 	[%rd1], %f38;
	add.s32 	%r45, %r44, 1;

BB58_9:
	add.s32 	%r41, %r45, %r4;
	mul.wide.s32 	%rd18, %r41, 4;
	add.s64 	%rd19, %rd6, %rd18;
	ld.global.f32 	%f18, [%rd19];
	mul.f32 	%f19, %f18, %f10;
	mad.lo.s32 	%r42, %r45, %r18, %r3;
	mul.wide.s32 	%rd20, %r42, 4;
	add.s64 	%rd21, %rd7, %rd20;
	ld.global.f32 	%f20, [%rd21];
	fma.rn.f32 	%f21, %f19, %f20, %f38;
	st.global.f32 	[%rd1], %f21;
	add.s32 	%r48, %r45, 1;

BB58_10:
	setp.lt.u32	%p6, %r16, 4;
	@%p6 bra 	BB58_13;

	ld.global.f32 	%f39, [%rd1];
	shl.b32 	%r10, %r18, 2;
	mad.lo.s32 	%r43, %r2, %r17, %r48;
	mul.wide.s32 	%rd22, %r43, 4;
	add.s64 	%rd28, %rd6, %rd22;
	mad.lo.s32 	%r47, %r48, %r18, %r3;
	mul.wide.s32 	%rd3, %r18, 4;

BB58_12:
	ld.global.f32 	%f22, [%rd28];
	mul.f32 	%f23, %f22, %f10;
	mul.wide.s32 	%rd23, %r47, 4;
	add.s64 	%rd24, %rd7, %rd23;
	ld.global.f32 	%f24, [%rd24];
	fma.rn.f32 	%f25, %f23, %f24, %f39;
	st.global.f32 	[%rd1], %f25;
	ld.global.f32 	%f26, [%rd28+4];
	mul.f32 	%f27, %f26, %f10;
	add.s64 	%rd25, %rd24, %rd3;
	ld.global.f32 	%f28, [%rd25];
	fma.rn.f32 	%f29, %f27, %f28, %f25;
	st.global.f32 	[%rd1], %f29;
	ld.global.f32 	%f30, [%rd28+8];
	mul.f32 	%f31, %f30, %f10;
	add.s64 	%rd26, %rd25, %rd3;
	ld.global.f32 	%f32, [%rd26];
	fma.rn.f32 	%f33, %f31, %f32, %f29;
	st.global.f32 	[%rd1], %f33;
	ld.global.f32 	%f34, [%rd28+12];
	mul.f32 	%f35, %f34, %f10;
	add.s64 	%rd27, %rd26, %rd3;
	ld.global.f32 	%f36, [%rd27];
	fma.rn.f32 	%f39, %f35, %f36, %f33;
	st.global.f32 	[%rd1], %f39;
	add.s64 	%rd28, %rd28, 16;
	add.s32 	%r47, %r47, %r10;
	add.s32 	%r48, %r48, 4;
	setp.lt.s32	%p7, %r48, %r16;
	@%p7 bra 	BB58_12;

BB58_13:
	ret;
}

	// .globl	gemm_nt_opencl
.entry gemm_nt_opencl(
	.param .u32 gemm_nt_opencl_param_0,
	.param .u32 gemm_nt_opencl_param_1,
	.param .u32 gemm_nt_opencl_param_2,
	.param .f32 gemm_nt_opencl_param_3,
	.param .u64 .ptr .global .align 4 gemm_nt_opencl_param_4,
	.param .u32 gemm_nt_opencl_param_5,
	.param .u64 .ptr .global .align 4 gemm_nt_opencl_param_6,
	.param .u32 gemm_nt_opencl_param_7,
	.param .u64 .ptr .global .align 4 gemm_nt_opencl_param_8,
	.param .u32 gemm_nt_opencl_param_9
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<46>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<28>;


	ld.param.u32 	%r17, [gemm_nt_opencl_param_0];
	ld.param.u32 	%r13, [gemm_nt_opencl_param_2];
	ld.param.f32 	%f10, [gemm_nt_opencl_param_3];
	ld.param.u64 	%rd7, [gemm_nt_opencl_param_4];
	ld.param.u32 	%r14, [gemm_nt_opencl_param_5];
	ld.param.u64 	%rd8, [gemm_nt_opencl_param_6];
	ld.param.u32 	%r15, [gemm_nt_opencl_param_7];
	ld.param.u64 	%rd9, [gemm_nt_opencl_param_8];
	ld.param.u32 	%r16, [gemm_nt_opencl_param_9];
	mov.b32	%r18, %envreg0;
	mov.u32 	%r19, %ctaid.x;
	add.s32 	%r20, %r19, %r18;
	mov.u32 	%r21, %ctaid.y;
	mov.b32	%r22, %envreg1;
	add.s32 	%r23, %r21, %r22;
	mov.b32	%r24, %envreg6;
	mad.lo.s32 	%r25, %r23, %r24, %r20;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r1, %r25, %r26, %r27;
	mul.lo.s32 	%r28, %r16, %r17;
	setp.ge.s32	%p1, %r1, %r28;
	@%p1 bra 	BB59_12;

	div.s32 	%r2, %r1, %r16;
	rem.s32 	%r3, %r1, %r16;
	mov.f32 	%f45, 0f00000000;
	setp.lt.s32	%p2, %r13, 1;
	@%p2 bra 	BB59_11;

	mul.lo.s32 	%r4, %r2, %r14;
	mul.lo.s32 	%r5, %r3, %r15;
	and.b32  	%r32, %r13, 3;
	mov.f32 	%f45, 0f00000000;
	mov.u32 	%r42, 0;
	setp.eq.s32	%p3, %r32, 0;
	@%p3 bra 	BB59_8;

	setp.eq.s32	%p4, %r32, 1;
	@%p4 bra 	BB59_7;

	setp.eq.s32	%p5, %r32, 2;
	@%p5 bra 	BB59_6;

	mul.wide.s32 	%rd10, %r4, 4;
	add.s64 	%rd11, %rd7, %rd10;
	ld.global.f32 	%f15, [%rd11];
	mul.f32 	%f16, %f15, %f10;
	mul.wide.s32 	%rd12, %r5, 4;
	add.s64 	%rd13, %rd8, %rd12;
	ld.global.f32 	%f17, [%rd13];
	fma.rn.f32 	%f45, %f16, %f17, 0f00000000;
	mov.u32 	%r42, 1;

BB59_6:
	add.s32 	%r34, %r42, %r4;
	mul.wide.s32 	%rd14, %r34, 4;
	add.s64 	%rd15, %rd7, %rd14;
	ld.global.f32 	%f18, [%rd15];
	mul.f32 	%f19, %f18, %f10;
	add.s32 	%r35, %r42, %r5;
	mul.wide.s32 	%rd16, %r35, 4;
	add.s64 	%rd17, %rd8, %rd16;
	ld.global.f32 	%f20, [%rd17];
	fma.rn.f32 	%f45, %f19, %f20, %f45;
	add.s32 	%r42, %r42, 1;

BB59_7:
	add.s32 	%r36, %r42, %r4;
	mul.wide.s32 	%rd18, %r36, 4;
	add.s64 	%rd19, %rd7, %rd18;
	ld.global.f32 	%f21, [%rd19];
	mul.f32 	%f22, %f21, %f10;
	add.s32 	%r37, %r42, %r5;
	mul.wide.s32 	%rd20, %r37, 4;
	add.s64 	%rd21, %rd8, %rd20;
	ld.global.f32 	%f23, [%rd21];
	fma.rn.f32 	%f45, %f22, %f23, %f45;
	add.s32 	%r42, %r42, 1;

BB59_8:
	setp.lt.u32	%p6, %r13, 4;
	@%p6 bra 	BB59_11;

	mad.lo.s32 	%r38, %r3, %r15, %r42;
	mul.wide.s32 	%rd22, %r38, 4;
	add.s64 	%rd27, %rd8, %rd22;
	mad.lo.s32 	%r39, %r2, %r14, %r42;
	mul.wide.s32 	%rd23, %r39, 4;
	add.s64 	%rd26, %rd7, %rd23;

BB59_10:
	ld.global.f32 	%f24, [%rd26];
	mul.f32 	%f25, %f24, %f10;
	ld.global.f32 	%f26, [%rd27];
	fma.rn.f32 	%f27, %f25, %f26, %f45;
	ld.global.f32 	%f28, [%rd26+4];
	mul.f32 	%f29, %f28, %f10;
	ld.global.f32 	%f30, [%rd27+4];
	fma.rn.f32 	%f31, %f29, %f30, %f27;
	ld.global.f32 	%f32, [%rd26+8];
	mul.f32 	%f33, %f32, %f10;
	ld.global.f32 	%f34, [%rd27+8];
	fma.rn.f32 	%f35, %f33, %f34, %f31;
	ld.global.f32 	%f36, [%rd26+12];
	mul.f32 	%f37, %f36, %f10;
	ld.global.f32 	%f38, [%rd27+12];
	fma.rn.f32 	%f45, %f37, %f38, %f35;
	add.s64 	%rd27, %rd27, 16;
	add.s64 	%rd26, %rd26, 16;
	add.s32 	%r42, %r42, 4;
	setp.lt.s32	%p7, %r42, %r13;
	@%p7 bra 	BB59_10;

BB59_11:
	mul.wide.s32 	%rd24, %r1, 4;
	add.s64 	%rd25, %rd9, %rd24;
	ld.global.f32 	%f39, [%rd25];
	add.f32 	%f40, %f45, %f39;
	st.global.f32 	[%rd25], %f40;

BB59_12:
	ret;
}

	// .globl	gemm_tn_opencl
.entry gemm_tn_opencl(
	.param .u32 gemm_tn_opencl_param_0,
	.param .u32 gemm_tn_opencl_param_1,
	.param .u32 gemm_tn_opencl_param_2,
	.param .f32 gemm_tn_opencl_param_3,
	.param .u64 .ptr .global .align 4 gemm_tn_opencl_param_4,
	.param .u32 gemm_tn_opencl_param_5,
	.param .u64 .ptr .global .align 4 gemm_tn_opencl_param_6,
	.param .u32 gemm_tn_opencl_param_7,
	.param .u64 .ptr .global .align 4 gemm_tn_opencl_param_8,
	.param .u32 gemm_tn_opencl_param_9
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<54>;
	.reg .b64 	%rd<30>;


	ld.param.u32 	%r23, [gemm_tn_opencl_param_0];
	ld.param.u32 	%r19, [gemm_tn_opencl_param_2];
	ld.param.f32 	%f10, [gemm_tn_opencl_param_3];
	ld.param.u64 	%rd4, [gemm_tn_opencl_param_4];
	ld.param.u32 	%r20, [gemm_tn_opencl_param_5];
	ld.param.u64 	%rd5, [gemm_tn_opencl_param_6];
	ld.param.u32 	%r21, [gemm_tn_opencl_param_7];
	ld.param.u64 	%rd6, [gemm_tn_opencl_param_8];
	ld.param.u32 	%r22, [gemm_tn_opencl_param_9];
	mov.b32	%r24, %envreg0;
	mov.u32 	%r25, %ctaid.x;
	add.s32 	%r26, %r25, %r24;
	mov.u32 	%r27, %ctaid.y;
	mov.b32	%r28, %envreg1;
	add.s32 	%r29, %r27, %r28;
	mov.b32	%r30, %envreg6;
	mad.lo.s32 	%r31, %r29, %r30, %r26;
	mov.u32 	%r32, %ntid.x;
	mov.u32 	%r33, %tid.x;
	mad.lo.s32 	%r1, %r31, %r32, %r33;
	mul.lo.s32 	%r34, %r22, %r23;
	setp.ge.s32	%p1, %r1, %r34;
	@%p1 bra 	BB60_13;

	div.s32 	%r2, %r1, %r22;
	rem.s32 	%r3, %r1, %r22;
	setp.lt.s32	%p2, %r19, 1;
	@%p2 bra 	BB60_13;

	mad.lo.s32 	%r37, %r2, %r22, %r3;
	mul.wide.s32 	%rd7, %r37, 4;
	add.s64 	%rd1, %rd6, %rd7;
	and.b32  	%r36, %r19, 3;
	mov.u32 	%r53, 0;
	setp.eq.s32	%p3, %r36, 0;
	@%p3 bra 	BB60_10;

	setp.eq.s32	%p4, %r36, 1;
	@%p4 bra 	BB60_6;
	bra.uni 	BB60_4;

BB60_6:
	ld.global.f32 	%f38, [%rd1];
	mov.u32 	%r49, 0;
	bra.uni 	BB60_9;

BB60_4:
	setp.ne.s32	%p5, %r36, 2;
	@%p5 bra 	BB60_7;

	ld.global.f32 	%f37, [%rd1];
	mov.u32 	%r48, 0;
	bra.uni 	BB60_8;

BB60_7:
	mul.wide.s32 	%rd8, %r2, 4;
	add.s64 	%rd9, %rd4, %rd8;
	ld.global.f32 	%f11, [%rd9];
	mul.f32 	%f12, %f11, %f10;
	mul.wide.s32 	%rd10, %r3, 4;
	add.s64 	%rd11, %rd5, %rd10;
	ld.global.f32 	%f13, [%rd11];
	ld.global.f32 	%f14, [%rd1];
	fma.rn.f32 	%f37, %f12, %f13, %f14;
	st.global.f32 	[%rd1], %f37;
	mov.u32 	%r48, 1;

BB60_8:
	neg.s32 	%r41, %r48;
	and.b32  	%r42, %r41, %r20;
	add.s32 	%r43, %r42, %r2;
	mul.wide.s32 	%rd12, %r43, 4;
	add.s64 	%rd13, %rd4, %rd12;
	ld.global.f32 	%f15, [%rd13];
	mul.f32 	%f16, %f15, %f10;
	and.b32  	%r44, %r41, %r21;
	add.s32 	%r45, %r44, %r3;
	mul.wide.s32 	%rd14, %r45, 4;
	add.s64 	%rd15, %rd5, %rd14;
	ld.global.f32 	%f17, [%rd15];
	fma.rn.f32 	%f38, %f16, %f17, %f37;
	st.global.f32 	[%rd1], %f38;
	add.s32 	%r49, %r48, 1;

BB60_9:
	mad.lo.s32 	%r46, %r49, %r20, %r2;
	mul.wide.s32 	%rd16, %r46, 4;
	add.s64 	%rd17, %rd4, %rd16;
	ld.global.f32 	%f18, [%rd17];
	mul.f32 	%f19, %f18, %f10;
	mad.lo.s32 	%r47, %r49, %r21, %r3;
	mul.wide.s32 	%rd18, %r47, 4;
	add.s64 	%rd19, %rd5, %rd18;
	ld.global.f32 	%f20, [%rd19];
	fma.rn.f32 	%f21, %f19, %f20, %f38;
	st.global.f32 	[%rd1], %f21;
	add.s32 	%r53, %r49, 1;

BB60_10:
	setp.lt.u32	%p6, %r19, 4;
	@%p6 bra 	BB60_13;

	ld.global.f32 	%f39, [%rd1];
	shl.b32 	%r9, %r21, 2;
	shl.b32 	%r10, %r20, 2;
	mad.lo.s32 	%r52, %r53, %r20, %r2;
	mad.lo.s32 	%r51, %r53, %r21, %r3;
	mul.wide.s32 	%rd2, %r20, 4;
	mul.wide.s32 	%rd3, %r21, 4;

BB60_12:
	mul.wide.s32 	%rd20, %r52, 4;
	add.s64 	%rd21, %rd4, %rd20;
	ld.global.f32 	%f22, [%rd21];
	mul.f32 	%f23, %f22, %f10;
	mul.wide.s32 	%rd22, %r51, 4;
	add.s64 	%rd23, %rd5, %rd22;
	ld.global.f32 	%f24, [%rd23];
	fma.rn.f32 	%f25, %f23, %f24, %f39;
	st.global.f32 	[%rd1], %f25;
	add.s64 	%rd24, %rd21, %rd2;
	ld.global.f32 	%f26, [%rd24];
	mul.f32 	%f27, %f26, %f10;
	add.s64 	%rd25, %rd23, %rd3;
	ld.global.f32 	%f28, [%rd25];
	fma.rn.f32 	%f29, %f27, %f28, %f25;
	st.global.f32 	[%rd1], %f29;
	add.s64 	%rd26, %rd24, %rd2;
	ld.global.f32 	%f30, [%rd26];
	mul.f32 	%f31, %f30, %f10;
	add.s64 	%rd27, %rd25, %rd3;
	ld.global.f32 	%f32, [%rd27];
	fma.rn.f32 	%f33, %f31, %f32, %f29;
	st.global.f32 	[%rd1], %f33;
	add.s64 	%rd28, %rd26, %rd2;
	ld.global.f32 	%f34, [%rd28];
	mul.f32 	%f35, %f34, %f10;
	add.s64 	%rd29, %rd27, %rd3;
	ld.global.f32 	%f36, [%rd29];
	fma.rn.f32 	%f39, %f35, %f36, %f33;
	st.global.f32 	[%rd1], %f39;
	add.s32 	%r52, %r52, %r10;
	add.s32 	%r51, %r51, %r9;
	add.s32 	%r53, %r53, 4;
	setp.lt.s32	%p7, %r53, %r19;
	@%p7 bra 	BB60_12;

BB60_13:
	ret;
}

	// .globl	gemm_tt_opencl
.entry gemm_tt_opencl(
	.param .u32 gemm_tt_opencl_param_0,
	.param .u32 gemm_tt_opencl_param_1,
	.param .u32 gemm_tt_opencl_param_2,
	.param .f32 gemm_tt_opencl_param_3,
	.param .u64 .ptr .global .align 4 gemm_tt_opencl_param_4,
	.param .u32 gemm_tt_opencl_param_5,
	.param .u64 .ptr .global .align 4 gemm_tt_opencl_param_6,
	.param .u32 gemm_tt_opencl_param_7,
	.param .u64 .ptr .global .align 4 gemm_tt_opencl_param_8,
	.param .u32 gemm_tt_opencl_param_9
)
{



	ret;
}

	// .globl	im2col_opencl
.entry im2col_opencl(
	.param .u32 im2col_opencl_param_0,
	.param .u64 .ptr .global .align 4 im2col_opencl_param_1,
	.param .u32 im2col_opencl_param_2,
	.param .u32 im2col_opencl_param_3,
	.param .u32 im2col_opencl_param_4,
	.param .u32 im2col_opencl_param_5,
	.param .u32 im2col_opencl_param_6,
	.param .u32 im2col_opencl_param_7,
	.param .u32 im2col_opencl_param_8,
	.param .u64 .ptr .global .align 4 im2col_opencl_param_9
)
{
	.reg .pred 	%p<45>;
	.reg .f32 	%f<29>;
	.reg .b32 	%r<91>;
	.reg .b64 	%rd<51>;


	ld.param.u32 	%r25, [im2col_opencl_param_0];
	ld.param.u64 	%rd21, [im2col_opencl_param_1];
	ld.param.u32 	%r26, [im2col_opencl_param_2];
	ld.param.u32 	%r27, [im2col_opencl_param_3];
	ld.param.u32 	%r28, [im2col_opencl_param_4];
	ld.param.u32 	%r29, [im2col_opencl_param_5];
	ld.param.u32 	%r30, [im2col_opencl_param_6];
	ld.param.u32 	%r31, [im2col_opencl_param_7];
	ld.param.u32 	%r32, [im2col_opencl_param_8];
	ld.param.u64 	%rd22, [im2col_opencl_param_9];
	mov.b32	%r33, %envreg0;
	mov.u32 	%r34, %ctaid.x;
	add.s32 	%r35, %r34, %r33;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r36, %tid.x;
	mad.lo.s32 	%r84, %r1, %r35, %r36;
	setp.ge.s32	%p1, %r84, %r25;
	@%p1 bra 	BB62_32;

	mov.b32	%r37, %envreg6;
	mul.lo.s32 	%r3, %r1, %r37;
	mul.lo.s32 	%r38, %r32, %r31;
	mul.wide.s32 	%rd1, %r38, 4;

BB62_2:
	div.s32 	%r39, %r84, %r32;
	rem.s32 	%r5, %r39, %r31;
	div.s32 	%r6, %r39, %r31;
	mul.lo.s32 	%r40, %r5, %r30;
	sub.s32 	%r7, %r40, %r29;
	rem.s32 	%r8, %r84, %r32;
	mul.lo.s32 	%r41, %r8, %r30;
	sub.s32 	%r9, %r41, %r29;
	mad.lo.s32 	%r42, %r6, %r26, %r7;
	mad.lo.s32 	%r43, %r42, %r27, %r9;
	cvt.s64.s32	%rd2, %r43;
	setp.lt.s32	%p2, %r28, 1;
	@%p2 bra 	BB62_31;

	mul.lo.s32 	%r45, %r28, %r28;
	mul.lo.s32 	%r46, %r45, %r31;
	mad.lo.s32 	%r47, %r46, %r6, %r5;
	mad.lo.s32 	%r48, %r47, %r32, %r8;
	mul.wide.s32 	%rd23, %r48, 4;
	add.s64 	%rd50, %rd22, %rd23;
	mul.lo.s32 	%r49, %r30, %r8;
	sub.s32 	%r10, %r49, %r29;
	mul.lo.s32 	%r50, %r30, %r5;
	sub.s32 	%r51, %r50, %r29;
	mad.lo.s32 	%r52, %r26, %r6, %r51;
	mad.lo.s32 	%r53, %r27, %r52, %r10;
	mul.wide.s32 	%rd24, %r53, 4;
	add.s64 	%rd4, %rd21, %rd24;
	mov.u32 	%r44, 0;
	mov.u32 	%r85, %r44;

BB62_4:
	mul.lo.s32 	%r12, %r85, %r27;
	and.b32  	%r57, %r28, 3;
	mov.u64 	%rd25, 0;
	setp.eq.s32	%p3, %r57, 0;
	@%p3 bra 	BB62_5;

	setp.eq.s32	%p4, %r57, 1;
	@%p4 bra 	BB62_7;
	bra.uni 	BB62_8;

BB62_7:
	mov.u32 	%r87, %r44;
	bra.uni 	BB62_16;

BB62_5:
	mov.u32 	%r90, %r44;
	mov.u64 	%rd46, %rd50;
	mov.u64 	%rd50, %rd25;
	bra.uni 	BB62_19;

BB62_8:
	setp.eq.s32	%p5, %r57, 2;
	@%p5 bra 	BB62_9;
	bra.uni 	BB62_10;

BB62_9:
	mov.u32 	%r86, %r44;
	bra.uni 	BB62_13;

BB62_10:
	add.s32 	%r58, %r85, %r7;
	setp.lt.s32	%p6, %r58, %r26;
	or.b32  	%r59, %r9, %r58;
	setp.gt.s32	%p7, %r59, -1;
	and.pred  	%p8, %p7, %p6;
	setp.lt.s32	%p9, %r9, %r27;
	and.pred  	%p10, %p8, %p9;
	mov.f32 	%f22, 0f00000000;
	@!%p10 bra 	BB62_12;
	bra.uni 	BB62_11;

BB62_11:
	cvt.s64.s32	%rd26, %r12;
	add.s64 	%rd27, %rd26, %rd2;
	shl.b64 	%rd28, %rd27, 2;
	add.s64 	%rd29, %rd21, %rd28;
	ld.global.f32 	%f22, [%rd29];

BB62_12:
	st.global.f32 	[%rd50], %f22;
	add.s64 	%rd50, %rd50, %rd1;
	mov.u32 	%r86, 1;

BB62_13:
	add.s32 	%r62, %r85, %r7;
	setp.lt.s32	%p11, %r62, %r26;
	add.s32 	%r63, %r86, %r9;
	or.b32  	%r64, %r63, %r62;
	setp.gt.s32	%p12, %r64, -1;
	and.pred  	%p13, %p12, %p11;
	setp.lt.s32	%p14, %r63, %r27;
	and.pred  	%p15, %p13, %p14;
	mov.f32 	%f23, 0f00000000;
	@!%p15 bra 	BB62_15;
	bra.uni 	BB62_14;

BB62_14:
	add.s32 	%r65, %r86, %r12;
	cvt.s64.s32	%rd31, %r65;
	add.s64 	%rd32, %rd31, %rd2;
	shl.b64 	%rd33, %rd32, 2;
	add.s64 	%rd34, %rd21, %rd33;
	ld.global.f32 	%f23, [%rd34];

BB62_15:
	st.global.f32 	[%rd50], %f23;
	add.s64 	%rd50, %rd50, %rd1;
	add.s32 	%r87, %r86, 1;

BB62_16:
	add.s32 	%r67, %r85, %r7;
	setp.lt.s32	%p16, %r67, %r26;
	add.s32 	%r68, %r87, %r9;
	or.b32  	%r69, %r68, %r67;
	setp.gt.s32	%p17, %r69, -1;
	and.pred  	%p18, %p17, %p16;
	setp.lt.s32	%p19, %r68, %r27;
	and.pred  	%p20, %p18, %p19;
	mov.f32 	%f24, 0f00000000;
	@!%p20 bra 	BB62_18;
	bra.uni 	BB62_17;

BB62_17:
	add.s32 	%r70, %r87, %r12;
	cvt.s64.s32	%rd36, %r70;
	add.s64 	%rd37, %rd36, %rd2;
	shl.b64 	%rd38, %rd37, 2;
	add.s64 	%rd39, %rd21, %rd38;
	ld.global.f32 	%f24, [%rd39];

BB62_18:
	st.global.f32 	[%rd50], %f24;
	add.s64 	%rd46, %rd50, %rd1;
	add.s32 	%r90, %r87, 1;
	mov.u64 	%rd50, %rd46;

BB62_19:
	setp.lt.u32	%p21, %r28, 4;
	@%p21 bra 	BB62_30;

	mad.lo.s32 	%r72, %r27, %r85, %r90;
	mul.wide.s32 	%rd41, %r72, 4;
	add.s64 	%rd49, %rd4, %rd41;
	add.s32 	%r89, %r10, %r90;
	mov.u64 	%rd50, %rd46;

BB62_21:
	add.s32 	%r73, %r85, %r7;
	setp.lt.s32	%p22, %r73, %r26;
	or.b32  	%r74, %r89, %r73;
	setp.gt.s32	%p23, %r74, -1;
	and.pred  	%p24, %p23, %p22;
	setp.lt.s32	%p25, %r89, %r27;
	and.pred  	%p26, %p24, %p25;
	mov.f32 	%f28, 0f00000000;
	mov.f32 	%f25, %f28;
	@!%p26 bra 	BB62_23;
	bra.uni 	BB62_22;

BB62_22:
	ld.global.f32 	%f25, [%rd49];

BB62_23:
	st.global.f32 	[%rd50], %f25;
	add.s32 	%r76, %r89, 1;
	or.b32  	%r77, %r76, %r73;
	setp.gt.s32	%p28, %r77, -1;
	and.pred  	%p29, %p28, %p22;
	setp.lt.s32	%p30, %r76, %r27;
	and.pred  	%p31, %p29, %p30;
	mov.f32 	%f26, %f28;
	@!%p31 bra 	BB62_25;
	bra.uni 	BB62_24;

BB62_24:
	ld.global.f32 	%f26, [%rd49+4];

BB62_25:
	add.s64 	%rd16, %rd50, %rd1;
	st.global.f32 	[%rd16], %f26;
	add.s32 	%r79, %r89, 2;
	or.b32  	%r80, %r79, %r73;
	setp.gt.s32	%p33, %r80, -1;
	and.pred  	%p34, %p33, %p22;
	setp.lt.s32	%p35, %r79, %r27;
	and.pred  	%p36, %p34, %p35;
	mov.f32 	%f27, %f28;
	@!%p36 bra 	BB62_27;
	bra.uni 	BB62_26;

BB62_26:
	ld.global.f32 	%f27, [%rd49+8];

BB62_27:
	add.s64 	%rd17, %rd16, %rd1;
	st.global.f32 	[%rd17], %f27;
	add.s32 	%r82, %r89, 3;
	or.b32  	%r83, %r82, %r73;
	setp.gt.s32	%p38, %r83, -1;
	and.pred  	%p39, %p38, %p22;
	setp.lt.s32	%p40, %r82, %r27;
	and.pred  	%p41, %p39, %p40;
	@!%p41 bra 	BB62_29;
	bra.uni 	BB62_28;

BB62_28:
	ld.global.f32 	%f28, [%rd49+12];

BB62_29:
	add.s64 	%rd42, %rd17, %rd1;
	add.s64 	%rd50, %rd42, %rd1;
	st.global.f32 	[%rd42], %f28;
	add.s64 	%rd49, %rd49, 16;
	add.s32 	%r89, %r89, 4;
	add.s32 	%r90, %r90, 4;
	setp.lt.s32	%p42, %r90, %r28;
	@%p42 bra 	BB62_21;

BB62_30:
	add.s32 	%r85, %r85, 1;
	setp.lt.s32	%p43, %r85, %r28;
	@%p43 bra 	BB62_4;

BB62_31:
	add.s32 	%r84, %r84, %r3;
	setp.lt.s32	%p44, %r84, %r25;
	@%p44 bra 	BB62_2;

BB62_32:
	ret;
}

	// .globl	levels_image_opencl
.entry levels_image_opencl(
	.param .u64 .ptr .global .align 4 levels_image_opencl_param_0,
	.param .u64 .ptr .global .align 4 levels_image_opencl_param_1,
	.param .u32 levels_image_opencl_param_2,
	.param .u32 levels_image_opencl_param_3,
	.param .u32 levels_image_opencl_param_4,
	.param .u32 levels_image_opencl_param_5,
	.param .f32 levels_image_opencl_param_6,
	.param .f32 levels_image_opencl_param_7,
	.param .f32 levels_image_opencl_param_8,
	.param .f32 levels_image_opencl_param_9,
	.param .f32 levels_image_opencl_param_10
)
{
	.reg .pred 	%p<28>;
	.reg .f32 	%f<111>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd2, [levels_image_opencl_param_0];
	ld.param.u64 	%rd3, [levels_image_opencl_param_1];
	ld.param.u32 	%r9, [levels_image_opencl_param_2];
	ld.param.u32 	%r6, [levels_image_opencl_param_3];
	ld.param.u32 	%r7, [levels_image_opencl_param_4];
	ld.param.u32 	%r8, [levels_image_opencl_param_5];
	ld.param.f32 	%f52, [levels_image_opencl_param_6];
	ld.param.f32 	%f53, [levels_image_opencl_param_7];
	ld.param.f32 	%f54, [levels_image_opencl_param_8];
	ld.param.f32 	%f55, [levels_image_opencl_param_9];
	ld.param.f32 	%f107, [levels_image_opencl_param_10];
	mul.lo.s32 	%r10, %r6, %r9;
	mul.lo.s32 	%r11, %r10, %r7;
	mov.u32 	%r12, %ctaid.x;
	mov.b32	%r13, %envreg0;
	add.s32 	%r14, %r12, %r13;
	mov.u32 	%r15, %ctaid.y;
	mov.b32	%r16, %envreg1;
	add.s32 	%r17, %r15, %r16;
	mov.b32	%r18, %envreg6;
	mad.lo.s32 	%r19, %r17, %r18, %r14;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r1, %r19, %r20, %r21;
	setp.ge.s32	%p1, %r1, %r11;
	@%p1 bra 	BB63_30;

	rem.s32 	%r2, %r1, %r6;
	div.s32 	%r22, %r1, %r6;
	rem.s32 	%r3, %r22, %r7;
	div.s32 	%r4, %r22, %r7;
	ld.global.f32 	%f1, [%rd3];
	ld.global.f32 	%f2, [%rd3+4];
	ld.global.f32 	%f3, [%rd3+8];
	shl.b32 	%r23, %r4, 3;
	mul.wide.s32 	%rd4, %r23, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f4, [%rd5+8];
	ld.global.f32 	%f5, [%rd5+12];
	add.f32 	%f57, %f52, 0fBF800000;
	ld.global.f32 	%f58, [%rd5];
	fma.rn.f32 	%f96, %f58, %f57, 0f3F800000;
	ld.global.f32 	%f59, [%rd5+4];
	setp.leu.f32	%p2, %f59, 0f3F000000;
	@%p2 bra 	BB63_3;

	rcp.approx.f32 	%f96, %f96;

BB63_3:
	add.f32 	%f60, %f53, 0fBF800000;
	fma.rn.f32 	%f97, %f4, %f60, 0f3F800000;
	setp.leu.f32	%p3, %f5, 0f3F000000;
	@%p3 bra 	BB63_5;

	rcp.approx.f32 	%f97, %f97;

BB63_5:
	mul.lo.s32 	%r24, %r7, %r6;
	mul.lo.s32 	%r25, %r24, %r4;
	mul.lo.s32 	%r26, %r25, 3;
	cvt.s64.s32	%rd6, %r26;
	mad.lo.s32 	%r27, %r3, %r6, %r2;
	cvt.s64.s32	%rd7, %r27;
	add.s64 	%rd8, %rd6, %rd7;
	shl.b64 	%rd9, %rd8, 2;
	add.s64 	%rd1, %rd2, %rd9;
	mul.wide.s32 	%rd10, %r24, 4;
	add.s64 	%rd11, %rd1, %rd10;
	add.s64 	%rd12, %rd11, %rd10;
	ld.global.f32 	%f108, [%rd1];
	ld.global.f32 	%f109, [%rd11];
	ld.global.f32 	%f110, [%rd12];
	setp.eq.s32	%p4, %r8, 0;
	mov.f32 	%f61, 0f00000000;
	@%p4 bra 	BB63_6;

	setp.gt.f32	%p5, %f108, %f109;
	selp.f32	%f64, %f108, %f109, %p5;
	setp.gt.f32	%p6, %f64, %f110;
	selp.f32	%f18, %f64, %f110, %p6;
	setp.lt.f32	%p7, %f108, %f109;
	selp.f32	%f65, %f108, %f109, %p7;
	setp.lt.f32	%p8, %f65, %f110;
	selp.f32	%f66, %f65, %f110, %p8;
	sub.f32 	%f19, %f18, %f66;
	setp.eq.f32	%p9, %f18, 0f00000000;
	mov.f32 	%f100, 0f00000000;
	mov.f32 	%f99, 0fBF800000;
	@%p9 bra 	BB63_14;

	setp.eq.f32	%p10, %f108, %f18;
	@%p10 bra 	BB63_12;
	bra.uni 	BB63_9;

BB63_12:
	sub.f32 	%f71, %f109, %f110;
	div.full.f32 	%f98, %f71, %f19;
	bra.uni 	BB63_13;

BB63_6:
	mov.f32 	%f107, %f61;
	bra.uni 	BB63_29;

BB63_9:
	setp.eq.f32	%p11, %f109, %f18;
	@%p11 bra 	BB63_11;
	bra.uni 	BB63_10;

BB63_11:
	sub.f32 	%f69, %f110, %f108;
	div.full.f32 	%f70, %f69, %f19;
	add.f32 	%f98, %f70, 0f40000000;
	bra.uni 	BB63_13;

BB63_10:
	sub.f32 	%f67, %f108, %f109;
	div.full.f32 	%f68, %f67, %f19;
	add.f32 	%f98, %f68, 0f40800000;

BB63_13:
	div.full.f32 	%f100, %f19, %f18;
	add.f32 	%f72, %f98, 0f40C00000;
	setp.lt.f32	%p12, %f98, 0f00000000;
	selp.f32	%f99, %f72, %f98, %p12;

BB63_14:
	mul.rn.f32 	%f103, %f18, %f97;
	mul.rn.f32 	%f29, %f100, %f96;
	setp.eq.f32	%p13, %f29, 0f00000000;
	@%p13 bra 	BB63_15;
	bra.uni 	BB63_16;

BB63_15:
	mov.f32 	%f101, %f103;
	mov.f32 	%f102, %f103;
	bra.uni 	BB63_23;

BB63_16:
	// inline asm
	cvt.rmi.f32.f32 	%f73, %f99;
	// inline asm
	cvt.rzi.s32.f32	%r5, %f73;
	cvt.rn.f32.s32	%f75, %r5;
	sub.f32 	%f76, %f99, %f75;
	mov.f32 	%f77, 0f3F800000;
	sub.f32 	%f78, %f77, %f29;
	mul.f32 	%f30, %f103, %f78;
	neg.f32 	%f79, %f29;
	fma.rn.f32 	%f80, %f79, %f76, 0f3F800000;
	mul.f32 	%f31, %f103, %f80;
	sub.f32 	%f81, %f77, %f76;
	fma.rn.f32 	%f82, %f79, %f81, 0f3F800000;
	mul.f32 	%f32, %f103, %f82;
	setp.eq.s32	%p14, %r5, 0;
	@%p14 bra 	BB63_17;

	setp.eq.s32	%p15, %r5, 1;
	@%p15 bra 	BB63_19;
	bra.uni 	BB63_20;

BB63_19:
	mov.f32 	%f101, %f31;
	mov.f32 	%f102, %f103;
	mov.f32 	%f103, %f30;
	bra.uni 	BB63_23;

BB63_17:
	mov.f32 	%f101, %f103;
	mov.f32 	%f102, %f32;
	mov.f32 	%f103, %f30;
	bra.uni 	BB63_23;

BB63_20:
	setp.eq.s32	%p16, %r5, 2;
	@%p16 bra 	BB63_21;
	bra.uni 	BB63_22;

BB63_21:
	mov.f32 	%f101, %f30;
	mov.f32 	%f102, %f103;
	mov.f32 	%f103, %f32;
	bra.uni 	BB63_23;

BB63_22:
	setp.eq.s32	%p17, %r5, 3;
	setp.eq.s32	%p18, %r5, 4;
	selp.f32	%f83, %f32, %f103, %p18;
	selp.f32	%f101, %f30, %f83, %p17;
	selp.f32	%f102, %f31, %f30, %p17;
	setp.ne.s32	%p19, %r5, 3;
	setp.ne.s32	%p20, %r5, 4;
	and.pred  	%p21, %p20, %p19;
	selp.f32	%f103, %f31, %f103, %p21;

BB63_23:
	setp.lt.f32	%p22, %f101, 0f00000000;
	mov.f32 	%f110, 0f00000000;
	mov.f32 	%f108, %f110;
	@%p22 bra 	BB63_25;

	setp.gt.f32	%p23, %f101, 0f3F800000;
	selp.f32	%f108, 0f3F800000, %f101, %p23;

BB63_25:
	setp.lt.f32	%p24, %f102, 0f00000000;
	mov.f32 	%f109, %f110;
	@%p24 bra 	BB63_27;

	setp.gt.f32	%p25, %f102, 0f3F800000;
	selp.f32	%f109, 0f3F800000, %f102, %p25;

BB63_27:
	setp.lt.f32	%p26, %f103, 0f00000000;
	@%p26 bra 	BB63_29;

	setp.gt.f32	%p27, %f103, 0f3F800000;
	selp.f32	%f110, 0f3F800000, %f103, %p27;

BB63_29:
	fma.rn.f32 	%f87, %f108, %f55, %f54;
	add.f32 	%f88, %f1, 0fBF000000;
	fma.rn.f32 	%f89, %f88, %f107, %f87;
	st.global.f32 	[%rd1], %f89;
	fma.rn.f32 	%f90, %f109, %f55, %f54;
	add.f32 	%f91, %f2, 0fBF000000;
	fma.rn.f32 	%f92, %f91, %f107, %f90;
	st.global.f32 	[%rd11], %f92;
	fma.rn.f32 	%f93, %f110, %f55, %f54;
	add.f32 	%f94, %f3, 0fBF000000;
	fma.rn.f32 	%f95, %f94, %f107, %f93;
	st.global.f32 	[%rd12], %f95;

BB63_30:
	ret;
}

	// .globl	forward_crop_layer_opencl
.entry forward_crop_layer_opencl(
	.param .u64 .ptr .global .align 4 forward_crop_layer_opencl_param_0,
	.param .u64 .ptr .global .align 4 forward_crop_layer_opencl_param_1,
	.param .u32 forward_crop_layer_opencl_param_2,
	.param .u32 forward_crop_layer_opencl_param_3,
	.param .u32 forward_crop_layer_opencl_param_4,
	.param .u32 forward_crop_layer_opencl_param_5,
	.param .u32 forward_crop_layer_opencl_param_6,
	.param .u32 forward_crop_layer_opencl_param_7,
	.param .u32 forward_crop_layer_opencl_param_8,
	.param .u32 forward_crop_layer_opencl_param_9,
	.param .f32 forward_crop_layer_opencl_param_10,
	.param .u64 .ptr .global .align 4 forward_crop_layer_opencl_param_11
)
{
	.local .align 4 .b8 	__local_depot64[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<96>;
	.reg .f32 	%f<256>;
	.reg .b32 	%r<415>;
	.reg .b64 	%rd<84>;


	mov.u64 	%rd83, __local_depot64;
	cvta.local.u64 	%SP, %rd83;
	ld.param.u64 	%rd34, [forward_crop_layer_opencl_param_0];
	ld.param.u64 	%rd35, [forward_crop_layer_opencl_param_1];
	ld.param.u32 	%r158, [forward_crop_layer_opencl_param_2];
	ld.param.u32 	%r151, [forward_crop_layer_opencl_param_3];
	ld.param.u32 	%r152, [forward_crop_layer_opencl_param_4];
	ld.param.u32 	%r153, [forward_crop_layer_opencl_param_5];
	ld.param.u32 	%r154, [forward_crop_layer_opencl_param_6];
	ld.param.u32 	%r155, [forward_crop_layer_opencl_param_7];
	ld.param.u32 	%r156, [forward_crop_layer_opencl_param_8];
	ld.param.u32 	%r157, [forward_crop_layer_opencl_param_9];
	ld.param.f32 	%f96, [forward_crop_layer_opencl_param_10];
	ld.param.u64 	%rd36, [forward_crop_layer_opencl_param_11];
	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd37;
	mov.u32 	%r159, %ctaid.x;
	mov.b32	%r160, %envreg0;
	add.s32 	%r161, %r159, %r160;
	mov.u32 	%r162, %ctaid.y;
	mov.b32	%r163, %envreg1;
	add.s32 	%r164, %r162, %r163;
	mov.b32	%r165, %envreg6;
	mad.lo.s32 	%r166, %r164, %r165, %r161;
	mov.u32 	%r167, %ntid.x;
	mov.u32 	%r168, %tid.x;
	mad.lo.s32 	%r1, %r166, %r167, %r168;
	setp.ge.s32	%p5, %r1, %r158;
	@%p5 bra 	BB64_104;

	cvt.rn.f32.s32	%f1, %r153;
	mul.f32 	%f2, %f1, 0f3F000000;
	cvt.rn.f32.s32	%f97, %r152;
	mul.f32 	%f3, %f97, 0f3F000000;
	rem.s32 	%r2, %r1, %r155;
	div.s32 	%r169, %r1, %r155;
	rem.s32 	%r3, %r169, %r154;
	div.s32 	%r170, %r169, %r154;
	rem.s32 	%r4, %r170, %r151;
	div.s32 	%r5, %r170, %r151;
	shl.b32 	%r171, %r5, 3;
	add.s32 	%r172, %r171, 4;
	mul.wide.s32 	%rd38, %r172, 4;
	add.s64 	%rd2, %rd35, %rd38;
	ld.global.f32 	%f4, [%rd2];
	ld.global.f32 	%f5, [%rd2+4];
	ld.global.f32 	%f6, [%rd2+12];
	setp.eq.s32	%p7, %r157, 0;
	mov.pred 	%p95, 0;
	@%p7 bra 	BB64_3;

	ld.global.f32 	%f98, [%rd2+8];
	setp.gt.f32	%p95, %f98, 0f3F000000;

BB64_3:
	sub.s32 	%r173, %r153, %r155;
	cvt.rn.f32.s32	%f99, %r173;
	sub.s32 	%r174, %r152, %r154;
	cvt.rn.f32.s32	%f100, %r174;
	neg.f32 	%f101, %f96;
	add.f32 	%f102, %f96, %f96;
	fma.rn.f32 	%f103, %f102, %f6, %f101;
	setp.eq.s32	%p8, %r156, 0;
	selp.f32	%f246, 0f00000000, %f103, %p8;
	selp.f32	%f104, 0f3F000000, %f4, %p8;
	selp.f32	%f105, 0f3F000000, %f5, %p8;
	mul.f32 	%f106, %f99, %f104;
	mul.lo.s32 	%r175, %r152, %r151;
	mul.lo.s32 	%r176, %r175, %r153;
	mul.lo.s32 	%r177, %r176, %r5;
	cvt.s64.s32	%rd3, %r177;
	not.pred 	%p9, %p95;
	or.pred  	%p10, %p8, %p9;
	sub.f32 	%f107, %f1, %f106;
	cvt.rn.f32.s32	%f108, %r2;
	sub.f32 	%f109, %f107, %f108;
	add.f32 	%f110, %f109, 0fBF800000;
	add.f32 	%f111, %f108, %f106;
	selp.f32	%f8, %f111, %f110, %p10;
	cvt.rn.f32.s32	%f112, %r3;
	fma.rn.f32 	%f9, %f100, %f105, %f112;
	abs.f32 	%f10, %f246;
	setp.neu.f32	%p11, %f10, 0f7F800000;
	mov.f32 	%f228, %f246;
	@%p11 bra 	BB64_5;

	mov.f32 	%f113, 0f00000000;
	mul.rn.f32 	%f228, %f246, %f113;

BB64_5:
	mul.f32 	%f114, %f228, 0f3F22F983;
	cvt.rni.s32.f32	%r381, %f114;
	cvt.rn.f32.s32	%f115, %r381;
	neg.f32 	%f116, %f115;
	mov.f32 	%f117, 0f3FC90FDA;
	fma.rn.f32 	%f118, %f116, %f117, %f228;
	mov.f32 	%f119, 0f33A22168;
	fma.rn.f32 	%f120, %f116, %f119, %f118;
	mov.f32 	%f121, 0f27C234C5;
	fma.rn.f32 	%f229, %f116, %f121, %f120;
	abs.f32 	%f122, %f228;
	setp.leu.f32	%p12, %f122, 0f47CE4780;
	@%p12 bra 	BB64_16;

	mov.b32 	 %r7, %f228;
	and.b32  	%r8, %r7, -2147483648;
	shl.b32 	%r181, %r7, 8;
	or.b32  	%r9, %r181, -2147483648;
	mov.u32 	%r371, 0;
	mov.u64 	%rd72, 0;
	mov.u64 	%rd73, %rd1;
	mov.u32 	%r373, %r371;
	mov.pred 	%p13, 0;
	@%p13 bra 	BB64_8;

BB64_7:
	shl.b64 	%rd40, %rd72, 2;
	mov.u64 	%rd41, __cudart_i2opi_f;
	add.s64 	%rd42, %rd41, %rd40;
	ld.const.u32 	%r184, [%rd42];
	// inline asm
	{
	mad.lo.cc.u32   %r182, %r184, %r9, %r373;
	madc.hi.u32     %r373, %r184, %r9,  0;
	}
	// inline asm
	st.local.u32 	[%rd73], %r182;
	add.s32 	%r371, %r371, 1;
	setp.lt.s32	%p14, %r371, 6;
	cvt.s64.s32	%rd72, %r371;
	mul.wide.s32 	%rd43, %r371, 4;
	add.s64 	%rd73, %rd1, %rd43;
	@%p14 bra 	BB64_7;

BB64_8:
	bfe.u32 	%r187, %r7, 23, 8;
	add.s32 	%r188, %r187, -128;
	shr.u32 	%r189, %r188, 5;
	st.local.u32 	[%rd73], %r373;
	mov.u32 	%r190, 6;
	sub.s32 	%r191, %r190, %r189;
	mul.wide.s32 	%rd44, %r191, 4;
	add.s64 	%rd10, %rd1, %rd44;
	ld.local.u32 	%r374, [%rd10];
	ld.local.u32 	%r375, [%rd10+-4];
	bfe.u32 	%r17, %r7, 23, 5;
	setp.eq.s32	%p15, %r17, 0;
	@%p15 bra 	BB64_10;

	mov.u32 	%r192, 32;
	sub.s32 	%r193, %r192, %r17;
	shr.u32 	%r194, %r375, %r193;
	shl.b32 	%r195, %r374, %r17;
	add.s32 	%r374, %r194, %r195;
	ld.local.u32 	%r196, [%rd10+-8];
	shr.u32 	%r197, %r196, %r193;
	shl.b32 	%r198, %r375, %r17;
	add.s32 	%r375, %r197, %r198;

BB64_10:
	shr.u32 	%r199, %r375, 30;
	shl.b32 	%r200, %r374, 2;
	add.s32 	%r376, %r199, %r200;
	shl.b32 	%r23, %r375, 2;
	shr.u32 	%r201, %r376, 31;
	shr.u32 	%r202, %r374, 30;
	add.s32 	%r24, %r201, %r202;
	setp.eq.s32	%p16, %r201, 0;
	@%p16 bra 	BB64_11;

	not.b32 	%r203, %r376;
	neg.s32 	%r378, %r23;
	setp.eq.s32	%p17, %r23, 0;
	selp.u32	%r204, 1, 0, %p17;
	add.s32 	%r376, %r204, %r203;
	xor.b32  	%r377, %r8, -2147483648;
	bra.uni 	BB64_13;

BB64_11:
	mov.u32 	%r377, %r8;
	mov.u32 	%r378, %r23;

BB64_13:
	neg.s32 	%r205, %r24;
	setp.eq.s32	%p18, %r8, 0;
	selp.b32	%r381, %r24, %r205, %p18;
	clz.b32 	%r380, %r376;
	setp.eq.s32	%p19, %r380, 0;
	shl.b32 	%r206, %r376, %r380;
	mov.u32 	%r207, 32;
	sub.s32 	%r208, %r207, %r380;
	shr.u32 	%r209, %r378, %r208;
	add.s32 	%r210, %r209, %r206;
	selp.b32	%r33, %r376, %r210, %p19;
	mov.u32 	%r211, -921707870;
	mul.hi.u32 	%r379, %r33, %r211;
	setp.lt.s32	%p20, %r379, 1;
	@%p20 bra 	BB64_15;

	mul.lo.s32 	%r212, %r33, -921707870;
	shr.u32 	%r213, %r212, 31;
	shl.b32 	%r214, %r379, 1;
	add.s32 	%r379, %r213, %r214;
	add.s32 	%r380, %r380, 1;

BB64_15:
	mov.u32 	%r215, 126;
	sub.s32 	%r216, %r215, %r380;
	shl.b32 	%r217, %r216, 23;
	add.s32 	%r218, %r379, 1;
	shr.u32 	%r219, %r218, 7;
	add.s32 	%r220, %r219, 1;
	shr.u32 	%r221, %r220, 1;
	add.s32 	%r222, %r221, %r217;
	or.b32  	%r223, %r222, %r377;
	mov.b32 	 %f229, %r223;

BB64_16:
	mul.rn.f32 	%f16, %f229, %f229;
	add.s32 	%r40, %r381, 1;
	and.b32  	%r41, %r40, 1;
	setp.eq.s32	%p21, %r41, 0;
	@%p21 bra 	BB64_18;

	mov.f32 	%f123, 0fBAB6061A;
	mov.f32 	%f124, 0f37CCF5CE;
	fma.rn.f32 	%f230, %f124, %f16, %f123;
	bra.uni 	BB64_19;

BB64_18:
	mov.f32 	%f125, 0f3C08839E;
	mov.f32 	%f126, 0fB94CA1F9;
	fma.rn.f32 	%f230, %f126, %f16, %f125;

BB64_19:
	@%p21 bra 	BB64_21;

	mov.f32 	%f127, 0f3D2AAAA5;
	fma.rn.f32 	%f128, %f230, %f16, %f127;
	mov.f32 	%f129, 0fBF000000;
	fma.rn.f32 	%f231, %f128, %f16, %f129;
	bra.uni 	BB64_22;

BB64_21:
	mov.f32 	%f130, 0fBE2AAAA3;
	fma.rn.f32 	%f131, %f230, %f16, %f130;
	mov.f32 	%f132, 0f00000000;
	fma.rn.f32 	%f231, %f131, %f16, %f132;

BB64_22:
	fma.rn.f32 	%f232, %f231, %f229, %f229;
	@%p21 bra 	BB64_24;

	mov.f32 	%f133, 0f3F800000;
	fma.rn.f32 	%f232, %f231, %f16, %f133;

BB64_24:
	and.b32  	%r224, %r40, 2;
	setp.eq.s32	%p24, %r224, 0;
	@%p24 bra 	BB64_26;

	mov.f32 	%f134, 0f00000000;
	mov.f32 	%f135, 0fBF800000;
	fma.rn.f32 	%f232, %f232, %f135, %f134;

BB64_26:
	sub.f32 	%f28, %f8, %f2;
	mov.f32 	%f234, %f246;
	@%p11 bra 	BB64_28;

	mov.f32 	%f136, 0f00000000;
	mul.rn.f32 	%f234, %f246, %f136;

BB64_28:
	mul.f32 	%f137, %f234, 0f3F22F983;
	cvt.rni.s32.f32	%r392, %f137;
	cvt.rn.f32.s32	%f138, %r392;
	neg.f32 	%f139, %f138;
	fma.rn.f32 	%f141, %f139, %f117, %f234;
	fma.rn.f32 	%f143, %f139, %f119, %f141;
	fma.rn.f32 	%f235, %f139, %f121, %f143;
	abs.f32 	%f145, %f234;
	setp.leu.f32	%p26, %f145, 0f47CE4780;
	@%p26 bra 	BB64_39;

	mov.b32 	 %r43, %f234;
	and.b32  	%r44, %r43, -2147483648;
	shl.b32 	%r228, %r43, 8;
	or.b32  	%r45, %r228, -2147483648;
	mov.u32 	%r382, 0;
	mov.u64 	%rd75, 0;
	mov.u64 	%rd76, %rd1;
	mov.u32 	%r384, %r382;
	mov.pred 	%p27, 0;
	@%p27 bra 	BB64_31;

BB64_30:
	shl.b64 	%rd46, %rd75, 2;
	mov.u64 	%rd47, __cudart_i2opi_f;
	add.s64 	%rd48, %rd47, %rd46;
	ld.const.u32 	%r231, [%rd48];
	// inline asm
	{
	mad.lo.cc.u32   %r229, %r231, %r45, %r384;
	madc.hi.u32     %r384, %r231, %r45,  0;
	}
	// inline asm
	st.local.u32 	[%rd76], %r229;
	add.s32 	%r382, %r382, 1;
	setp.lt.s32	%p28, %r382, 6;
	cvt.s64.s32	%rd75, %r382;
	mul.wide.s32 	%rd49, %r382, 4;
	add.s64 	%rd76, %rd1, %rd49;
	@%p28 bra 	BB64_30;

BB64_31:
	bfe.u32 	%r234, %r43, 23, 8;
	add.s32 	%r235, %r234, -128;
	shr.u32 	%r236, %r235, 5;
	st.local.u32 	[%rd76], %r384;
	mov.u32 	%r237, 6;
	sub.s32 	%r238, %r237, %r236;
	mul.wide.s32 	%rd50, %r238, 4;
	add.s64 	%rd17, %rd1, %rd50;
	ld.local.u32 	%r385, [%rd17];
	ld.local.u32 	%r386, [%rd17+-4];
	bfe.u32 	%r53, %r43, 23, 5;
	setp.eq.s32	%p29, %r53, 0;
	@%p29 bra 	BB64_33;

	mov.u32 	%r239, 32;
	sub.s32 	%r240, %r239, %r53;
	shr.u32 	%r241, %r386, %r240;
	shl.b32 	%r242, %r385, %r53;
	add.s32 	%r385, %r241, %r242;
	ld.local.u32 	%r243, [%rd17+-8];
	shr.u32 	%r244, %r243, %r240;
	shl.b32 	%r245, %r386, %r53;
	add.s32 	%r386, %r244, %r245;

BB64_33:
	shr.u32 	%r246, %r386, 30;
	shl.b32 	%r247, %r385, 2;
	add.s32 	%r387, %r246, %r247;
	shl.b32 	%r59, %r386, 2;
	shr.u32 	%r248, %r387, 31;
	shr.u32 	%r249, %r385, 30;
	add.s32 	%r60, %r248, %r249;
	setp.eq.s32	%p30, %r248, 0;
	@%p30 bra 	BB64_34;

	not.b32 	%r250, %r387;
	neg.s32 	%r389, %r59;
	setp.eq.s32	%p31, %r59, 0;
	selp.u32	%r251, 1, 0, %p31;
	add.s32 	%r387, %r251, %r250;
	xor.b32  	%r388, %r44, -2147483648;
	bra.uni 	BB64_36;

BB64_34:
	mov.u32 	%r388, %r44;
	mov.u32 	%r389, %r59;

BB64_36:
	neg.s32 	%r252, %r60;
	setp.eq.s32	%p32, %r44, 0;
	selp.b32	%r392, %r60, %r252, %p32;
	clz.b32 	%r391, %r387;
	setp.eq.s32	%p33, %r391, 0;
	shl.b32 	%r253, %r387, %r391;
	mov.u32 	%r254, 32;
	sub.s32 	%r255, %r254, %r391;
	shr.u32 	%r256, %r389, %r255;
	add.s32 	%r257, %r256, %r253;
	selp.b32	%r69, %r387, %r257, %p33;
	mov.u32 	%r258, -921707870;
	mul.hi.u32 	%r390, %r69, %r258;
	setp.lt.s32	%p34, %r390, 1;
	@%p34 bra 	BB64_38;

	mul.lo.s32 	%r259, %r69, -921707870;
	shr.u32 	%r260, %r259, 31;
	shl.b32 	%r261, %r390, 1;
	add.s32 	%r390, %r260, %r261;
	add.s32 	%r391, %r391, 1;

BB64_38:
	mov.u32 	%r262, 126;
	sub.s32 	%r263, %r262, %r391;
	shl.b32 	%r264, %r263, 23;
	add.s32 	%r265, %r390, 1;
	shr.u32 	%r266, %r265, 7;
	add.s32 	%r267, %r266, 1;
	shr.u32 	%r268, %r267, 1;
	add.s32 	%r269, %r268, %r264;
	or.b32  	%r270, %r269, %r388;
	mov.b32 	 %f235, %r270;

BB64_39:
	mul.rn.f32 	%f34, %f235, %f235;
	and.b32  	%r76, %r392, 1;
	setp.eq.s32	%p35, %r76, 0;
	@%p35 bra 	BB64_41;

	mov.f32 	%f146, 0fBAB6061A;
	mov.f32 	%f147, 0f37CCF5CE;
	fma.rn.f32 	%f236, %f147, %f34, %f146;
	bra.uni 	BB64_42;

BB64_41:
	mov.f32 	%f148, 0f3C08839E;
	mov.f32 	%f149, 0fB94CA1F9;
	fma.rn.f32 	%f236, %f149, %f34, %f148;

BB64_42:
	@%p35 bra 	BB64_44;

	mov.f32 	%f150, 0f3D2AAAA5;
	fma.rn.f32 	%f151, %f236, %f34, %f150;
	mov.f32 	%f152, 0fBF000000;
	fma.rn.f32 	%f237, %f151, %f34, %f152;
	bra.uni 	BB64_45;

BB64_44:
	mov.f32 	%f153, 0fBE2AAAA3;
	fma.rn.f32 	%f154, %f236, %f34, %f153;
	mov.f32 	%f155, 0f00000000;
	fma.rn.f32 	%f237, %f154, %f34, %f155;

BB64_45:
	fma.rn.f32 	%f238, %f237, %f235, %f235;
	@%p35 bra 	BB64_47;

	mov.f32 	%f156, 0f3F800000;
	fma.rn.f32 	%f238, %f237, %f34, %f156;

BB64_47:
	and.b32  	%r271, %r392, 2;
	setp.eq.s32	%p38, %r271, 0;
	@%p38 bra 	BB64_49;

	mov.f32 	%f157, 0f00000000;
	mov.f32 	%f158, 0fBF800000;
	fma.rn.f32 	%f238, %f238, %f158, %f157;

BB64_49:
	sub.f32 	%f46, %f9, %f3;
	mul.f32 	%f159, %f46, %f238;
	neg.f32 	%f160, %f159;
	fma.rn.f32 	%f161, %f232, %f28, %f160;
	add.f32 	%f47, %f2, %f161;
	mov.f32 	%f240, %f246;
	@%p11 bra 	BB64_51;

	mov.f32 	%f162, 0f00000000;
	mul.rn.f32 	%f240, %f246, %f162;

BB64_51:
	mul.f32 	%f163, %f240, 0f3F22F983;
	cvt.rni.s32.f32	%r403, %f163;
	cvt.rn.f32.s32	%f164, %r403;
	neg.f32 	%f165, %f164;
	fma.rn.f32 	%f167, %f165, %f117, %f240;
	fma.rn.f32 	%f169, %f165, %f119, %f167;
	fma.rn.f32 	%f241, %f165, %f121, %f169;
	abs.f32 	%f171, %f240;
	setp.leu.f32	%p40, %f171, 0f47CE4780;
	@%p40 bra 	BB64_62;

	mov.b32 	 %r78, %f240;
	and.b32  	%r79, %r78, -2147483648;
	shl.b32 	%r275, %r78, 8;
	or.b32  	%r80, %r275, -2147483648;
	mov.u32 	%r393, 0;
	mov.u64 	%rd78, 0;
	mov.u64 	%rd79, %rd1;
	mov.u32 	%r395, %r393;
	mov.pred 	%p41, 0;
	@%p41 bra 	BB64_54;

BB64_53:
	shl.b64 	%rd52, %rd78, 2;
	mov.u64 	%rd53, __cudart_i2opi_f;
	add.s64 	%rd54, %rd53, %rd52;
	ld.const.u32 	%r278, [%rd54];
	// inline asm
	{
	mad.lo.cc.u32   %r276, %r278, %r80, %r395;
	madc.hi.u32     %r395, %r278, %r80,  0;
	}
	// inline asm
	st.local.u32 	[%rd79], %r276;
	add.s32 	%r393, %r393, 1;
	setp.lt.s32	%p42, %r393, 6;
	cvt.s64.s32	%rd78, %r393;
	mul.wide.s32 	%rd55, %r393, 4;
	add.s64 	%rd79, %rd1, %rd55;
	@%p42 bra 	BB64_53;

BB64_54:
	bfe.u32 	%r281, %r78, 23, 8;
	add.s32 	%r282, %r281, -128;
	shr.u32 	%r283, %r282, 5;
	st.local.u32 	[%rd79], %r395;
	mov.u32 	%r284, 6;
	sub.s32 	%r285, %r284, %r283;
	mul.wide.s32 	%rd56, %r285, 4;
	add.s64 	%rd24, %rd1, %rd56;
	ld.local.u32 	%r396, [%rd24];
	ld.local.u32 	%r397, [%rd24+-4];
	bfe.u32 	%r88, %r78, 23, 5;
	setp.eq.s32	%p43, %r88, 0;
	@%p43 bra 	BB64_56;

	mov.u32 	%r286, 32;
	sub.s32 	%r287, %r286, %r88;
	shr.u32 	%r288, %r397, %r287;
	shl.b32 	%r289, %r396, %r88;
	add.s32 	%r396, %r288, %r289;
	ld.local.u32 	%r290, [%rd24+-8];
	shr.u32 	%r291, %r290, %r287;
	shl.b32 	%r292, %r397, %r88;
	add.s32 	%r397, %r291, %r292;

BB64_56:
	shr.u32 	%r293, %r397, 30;
	shl.b32 	%r294, %r396, 2;
	add.s32 	%r398, %r293, %r294;
	shl.b32 	%r94, %r397, 2;
	shr.u32 	%r295, %r398, 31;
	shr.u32 	%r296, %r396, 30;
	add.s32 	%r95, %r295, %r296;
	setp.eq.s32	%p44, %r295, 0;
	@%p44 bra 	BB64_57;

	not.b32 	%r297, %r398;
	neg.s32 	%r400, %r94;
	setp.eq.s32	%p45, %r94, 0;
	selp.u32	%r298, 1, 0, %p45;
	add.s32 	%r398, %r298, %r297;
	xor.b32  	%r399, %r79, -2147483648;
	bra.uni 	BB64_59;

BB64_57:
	mov.u32 	%r399, %r79;
	mov.u32 	%r400, %r94;

BB64_59:
	neg.s32 	%r299, %r95;
	setp.eq.s32	%p46, %r79, 0;
	selp.b32	%r403, %r95, %r299, %p46;
	clz.b32 	%r402, %r398;
	setp.eq.s32	%p47, %r402, 0;
	shl.b32 	%r300, %r398, %r402;
	mov.u32 	%r301, 32;
	sub.s32 	%r302, %r301, %r402;
	shr.u32 	%r303, %r400, %r302;
	add.s32 	%r304, %r303, %r300;
	selp.b32	%r104, %r398, %r304, %p47;
	mov.u32 	%r305, -921707870;
	mul.hi.u32 	%r401, %r104, %r305;
	setp.lt.s32	%p48, %r401, 1;
	@%p48 bra 	BB64_61;

	mul.lo.s32 	%r306, %r104, -921707870;
	shr.u32 	%r307, %r306, 31;
	shl.b32 	%r308, %r401, 1;
	add.s32 	%r401, %r307, %r308;
	add.s32 	%r402, %r402, 1;

BB64_61:
	mov.u32 	%r309, 126;
	sub.s32 	%r310, %r309, %r402;
	shl.b32 	%r311, %r310, 23;
	add.s32 	%r312, %r401, 1;
	shr.u32 	%r313, %r312, 7;
	add.s32 	%r314, %r313, 1;
	shr.u32 	%r315, %r314, 1;
	add.s32 	%r316, %r315, %r311;
	or.b32  	%r317, %r316, %r399;
	mov.b32 	 %f241, %r317;

BB64_62:
	mul.rn.f32 	%f53, %f241, %f241;
	and.b32  	%r111, %r403, 1;
	setp.eq.s32	%p49, %r111, 0;
	@%p49 bra 	BB64_64;

	mov.f32 	%f172, 0fBAB6061A;
	mov.f32 	%f173, 0f37CCF5CE;
	fma.rn.f32 	%f242, %f173, %f53, %f172;
	bra.uni 	BB64_65;

BB64_64:
	mov.f32 	%f174, 0f3C08839E;
	mov.f32 	%f175, 0fB94CA1F9;
	fma.rn.f32 	%f242, %f175, %f53, %f174;

BB64_65:
	@%p49 bra 	BB64_67;

	mov.f32 	%f176, 0f3D2AAAA5;
	fma.rn.f32 	%f177, %f242, %f53, %f176;
	mov.f32 	%f178, 0fBF000000;
	fma.rn.f32 	%f243, %f177, %f53, %f178;
	bra.uni 	BB64_68;

BB64_67:
	mov.f32 	%f179, 0fBE2AAAA3;
	fma.rn.f32 	%f180, %f242, %f53, %f179;
	mov.f32 	%f181, 0f00000000;
	fma.rn.f32 	%f243, %f180, %f53, %f181;

BB64_68:
	fma.rn.f32 	%f244, %f243, %f241, %f241;
	@%p49 bra 	BB64_70;

	mov.f32 	%f182, 0f3F800000;
	fma.rn.f32 	%f244, %f243, %f53, %f182;

BB64_70:
	and.b32  	%r318, %r403, 2;
	setp.eq.s32	%p52, %r318, 0;
	@%p52 bra 	BB64_72;

	mov.f32 	%f183, 0f00000000;
	mov.f32 	%f184, 0fBF800000;
	fma.rn.f32 	%f244, %f244, %f184, %f183;

BB64_72:
	@%p11 bra 	BB64_74;

	mov.f32 	%f185, 0f00000000;
	mul.rn.f32 	%f246, %f246, %f185;

BB64_74:
	mul.f32 	%f186, %f246, 0f3F22F983;
	cvt.rni.s32.f32	%r414, %f186;
	cvt.rn.f32.s32	%f187, %r414;
	neg.f32 	%f188, %f187;
	fma.rn.f32 	%f190, %f188, %f117, %f246;
	fma.rn.f32 	%f192, %f188, %f119, %f190;
	fma.rn.f32 	%f247, %f188, %f121, %f192;
	abs.f32 	%f194, %f246;
	setp.leu.f32	%p54, %f194, 0f47CE4780;
	@%p54 bra 	BB64_85;

	mov.b32 	 %r113, %f246;
	and.b32  	%r114, %r113, -2147483648;
	shl.b32 	%r322, %r113, 8;
	or.b32  	%r115, %r322, -2147483648;
	mov.u32 	%r404, 0;
	mov.u64 	%rd81, 0;
	mov.u64 	%rd82, %rd1;
	mov.u32 	%r406, %r404;
	mov.pred 	%p55, 0;
	@%p55 bra 	BB64_77;

BB64_76:
	shl.b64 	%rd58, %rd81, 2;
	mov.u64 	%rd59, __cudart_i2opi_f;
	add.s64 	%rd60, %rd59, %rd58;
	ld.const.u32 	%r325, [%rd60];
	// inline asm
	{
	mad.lo.cc.u32   %r323, %r325, %r115, %r406;
	madc.hi.u32     %r406, %r325, %r115,  0;
	}
	// inline asm
	st.local.u32 	[%rd82], %r323;
	add.s32 	%r404, %r404, 1;
	setp.lt.s32	%p56, %r404, 6;
	cvt.s64.s32	%rd81, %r404;
	mul.wide.s32 	%rd61, %r404, 4;
	add.s64 	%rd82, %rd1, %rd61;
	@%p56 bra 	BB64_76;

BB64_77:
	bfe.u32 	%r328, %r113, 23, 8;
	add.s32 	%r329, %r328, -128;
	shr.u32 	%r330, %r329, 5;
	st.local.u32 	[%rd82], %r406;
	mov.u32 	%r331, 6;
	sub.s32 	%r332, %r331, %r330;
	mul.wide.s32 	%rd62, %r332, 4;
	add.s64 	%rd31, %rd1, %rd62;
	ld.local.u32 	%r407, [%rd31];
	ld.local.u32 	%r408, [%rd31+-4];
	bfe.u32 	%r123, %r113, 23, 5;
	setp.eq.s32	%p57, %r123, 0;
	@%p57 bra 	BB64_79;

	mov.u32 	%r333, 32;
	sub.s32 	%r334, %r333, %r123;
	shr.u32 	%r335, %r408, %r334;
	shl.b32 	%r336, %r407, %r123;
	add.s32 	%r407, %r335, %r336;
	ld.local.u32 	%r337, [%rd31+-8];
	shr.u32 	%r338, %r337, %r334;
	shl.b32 	%r339, %r408, %r123;
	add.s32 	%r408, %r338, %r339;

BB64_79:
	shr.u32 	%r340, %r408, 30;
	shl.b32 	%r341, %r407, 2;
	add.s32 	%r409, %r340, %r341;
	shl.b32 	%r129, %r408, 2;
	shr.u32 	%r342, %r409, 31;
	shr.u32 	%r343, %r407, 30;
	add.s32 	%r130, %r342, %r343;
	setp.eq.s32	%p58, %r342, 0;
	@%p58 bra 	BB64_80;

	not.b32 	%r344, %r409;
	neg.s32 	%r411, %r129;
	setp.eq.s32	%p59, %r129, 0;
	selp.u32	%r345, 1, 0, %p59;
	add.s32 	%r409, %r345, %r344;
	xor.b32  	%r410, %r114, -2147483648;
	bra.uni 	BB64_82;

BB64_80:
	mov.u32 	%r410, %r114;
	mov.u32 	%r411, %r129;

BB64_82:
	neg.s32 	%r346, %r130;
	setp.eq.s32	%p60, %r114, 0;
	selp.b32	%r414, %r130, %r346, %p60;
	clz.b32 	%r413, %r409;
	setp.eq.s32	%p61, %r413, 0;
	shl.b32 	%r347, %r409, %r413;
	mov.u32 	%r348, 32;
	sub.s32 	%r349, %r348, %r413;
	shr.u32 	%r350, %r411, %r349;
	add.s32 	%r351, %r350, %r347;
	selp.b32	%r139, %r409, %r351, %p61;
	mov.u32 	%r352, -921707870;
	mul.hi.u32 	%r412, %r139, %r352;
	setp.lt.s32	%p62, %r412, 1;
	@%p62 bra 	BB64_84;

	mul.lo.s32 	%r353, %r139, -921707870;
	shr.u32 	%r354, %r353, 31;
	shl.b32 	%r355, %r412, 1;
	add.s32 	%r412, %r354, %r355;
	add.s32 	%r413, %r413, 1;

BB64_84:
	mov.u32 	%r356, 126;
	sub.s32 	%r357, %r356, %r413;
	shl.b32 	%r358, %r357, 23;
	add.s32 	%r359, %r412, 1;
	shr.u32 	%r360, %r359, 7;
	add.s32 	%r361, %r360, 1;
	shr.u32 	%r362, %r361, 1;
	add.s32 	%r363, %r362, %r358;
	or.b32  	%r364, %r363, %r410;
	mov.b32 	 %f247, %r364;

BB64_85:
	mul.rn.f32 	%f70, %f247, %f247;
	add.s32 	%r146, %r414, 1;
	and.b32  	%r147, %r146, 1;
	setp.eq.s32	%p63, %r147, 0;
	@%p63 bra 	BB64_87;

	mov.f32 	%f195, 0fBAB6061A;
	mov.f32 	%f196, 0f37CCF5CE;
	fma.rn.f32 	%f248, %f196, %f70, %f195;
	bra.uni 	BB64_88;

BB64_87:
	mov.f32 	%f197, 0f3C08839E;
	mov.f32 	%f198, 0fB94CA1F9;
	fma.rn.f32 	%f248, %f198, %f70, %f197;

BB64_88:
	@%p63 bra 	BB64_90;

	mov.f32 	%f199, 0f3D2AAAA5;
	fma.rn.f32 	%f200, %f248, %f70, %f199;
	mov.f32 	%f201, 0fBF000000;
	fma.rn.f32 	%f249, %f200, %f70, %f201;
	bra.uni 	BB64_91;

BB64_90:
	mov.f32 	%f202, 0fBE2AAAA3;
	fma.rn.f32 	%f203, %f248, %f70, %f202;
	mov.f32 	%f204, 0f00000000;
	fma.rn.f32 	%f249, %f203, %f70, %f204;

BB64_91:
	fma.rn.f32 	%f250, %f249, %f247, %f247;
	@%p63 bra 	BB64_93;

	mov.f32 	%f205, 0f3F800000;
	fma.rn.f32 	%f250, %f249, %f70, %f205;

BB64_93:
	and.b32  	%r365, %r146, 2;
	setp.eq.s32	%p66, %r365, 0;
	@%p66 bra 	BB64_95;

	mov.f32 	%f206, 0f00000000;
	mov.f32 	%f207, 0fBF800000;
	fma.rn.f32 	%f250, %f250, %f207, %f206;

BB64_95:
	mul.f32 	%f213, %f46, %f250;
	fma.rn.f32 	%f214, %f244, %f28, %f213;
	add.f32 	%f211, %f3, %f214;
	// inline asm
	cvt.rmi.f32.f32 	%f208, %f47;
	// inline asm
	cvt.rzi.s32.f32	%r148, %f208;
	// inline asm
	cvt.rmi.f32.f32 	%f210, %f211;
	// inline asm
	cvt.rzi.s32.f32	%r149, %f210;
	cvt.rn.f32.s32	%f215, %r148;
	sub.f32 	%f82, %f47, %f215;
	cvt.rn.f32.s32	%f216, %r149;
	sub.f32 	%f83, %f211, %f216;
	mov.f32 	%f217, 0f3F800000;
	sub.f32 	%f84, %f217, %f83;
	setp.gt.s32	%p67, %r148, -1;
	setp.lt.s32	%p68, %r148, 0;
	setp.lt.s32	%p69, %r148, %r153;
	setp.ge.s32	%p70, %r148, %r153;
	or.pred  	%p3, %p70, %p68;
	and.pred  	%p71, %p69, %p67;
	setp.gt.s32	%p72, %r149, -1;
	and.pred  	%p73, %p71, %p72;
	setp.lt.s32	%p74, %r149, %r152;
	and.pred  	%p75, %p74, %p73;
	mad.lo.s32 	%r366, %r4, %r152, %r149;
	mad.lo.s32 	%r367, %r366, %r153, %r148;
	cvt.s64.s32	%rd63, %r367;
	add.s64 	%rd64, %rd63, %rd3;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd32, %rd34, %rd65;
	mov.f32 	%f255, 0f00000000;
	mov.f32 	%f252, %f255;
	@!%p75 bra 	BB64_97;
	bra.uni 	BB64_96;

BB64_96:
	ld.global.f32 	%f252, [%rd32];

BB64_97:
	add.s32 	%r150, %r149, 1;
	setp.gt.s32	%p76, %r150, -1;
	not.pred 	%p77, %p3;
	and.pred  	%p78, %p77, %p76;
	setp.lt.s32	%p79, %r150, %r152;
	and.pred  	%p80, %p79, %p78;
	mad.lo.s32 	%r368, %r4, %r152, %r150;
	mad.lo.s32 	%r369, %r368, %r153, %r148;
	cvt.s64.s32	%rd66, %r369;
	add.s64 	%rd67, %rd66, %rd3;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd33, %rd34, %rd68;
	mov.f32 	%f253, %f255;
	@!%p80 bra 	BB64_99;
	bra.uni 	BB64_98;

BB64_98:
	ld.global.f32 	%f253, [%rd33];

BB64_99:
	sub.f32 	%f221, %f217, %f82;
	mul.f32 	%f222, %f221, %f84;
	mul.f32 	%f223, %f83, %f221;
	mul.f32 	%f224, %f223, %f253;
	fma.rn.f32 	%f89, %f222, %f252, %f224;
	add.s32 	%r370, %r148, 1;
	setp.lt.s32	%p81, %r370, %r153;
	setp.ge.s32	%p82, %r370, %r153;
	setp.gt.s32	%p83, %r148, -2;
	setp.lt.s32	%p84, %r148, -1;
	or.pred  	%p4, %p82, %p84;
	and.pred  	%p85, %p81, %p83;
	and.pred  	%p87, %p85, %p72;
	and.pred  	%p89, %p74, %p87;
	mov.f32 	%f254, %f255;
	@!%p89 bra 	BB64_101;
	bra.uni 	BB64_100;

BB64_100:
	ld.global.f32 	%f254, [%rd32+4];

BB64_101:
	mul.f32 	%f226, %f82, %f84;
	fma.rn.f32 	%f92, %f226, %f254, %f89;
	mul.f32 	%f93, %f82, %f83;
	not.pred 	%p91, %p4;
	and.pred  	%p92, %p91, %p76;
	and.pred  	%p94, %p79, %p92;
	@!%p94 bra 	BB64_103;
	bra.uni 	BB64_102;

BB64_102:
	ld.global.f32 	%f255, [%rd33+4];

BB64_103:
	mul.wide.s32 	%rd69, %r1, 4;
	add.s64 	%rd70, %rd36, %rd69;
	fma.rn.f32 	%f227, %f93, %f255, %f92;
	st.global.f32 	[%rd70], %f227;

BB64_104:
	ret;
}

	// .globl	yoloswag420blazeit360noscope
.entry yoloswag420blazeit360noscope(
	.param .u64 .ptr .global .align 4 yoloswag420blazeit360noscope_param_0,
	.param .u32 yoloswag420blazeit360noscope_param_1,
	.param .u64 .ptr .global .align 4 yoloswag420blazeit360noscope_param_2,
	.param .f32 yoloswag420blazeit360noscope_param_3,
	.param .f32 yoloswag420blazeit360noscope_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd2, [yoloswag420blazeit360noscope_param_0];
	ld.param.u32 	%r2, [yoloswag420blazeit360noscope_param_1];
	ld.param.u64 	%rd3, [yoloswag420blazeit360noscope_param_2];
	ld.param.f32 	%f3, [yoloswag420blazeit360noscope_param_3];
	ld.param.f32 	%f4, [yoloswag420blazeit360noscope_param_4];
	mov.b32	%r3, %envreg0;
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r3;
	mov.u32 	%r6, %ctaid.y;
	mov.b32	%r7, %envreg1;
	add.s32 	%r8, %r6, %r7;
	mov.b32	%r9, %envreg6;
	mad.lo.s32 	%r10, %r8, %r9, %r5;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB65_4;

	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f6, [%rd5];
	setp.lt.f32	%p2, %f6, %f3;
	add.s64 	%rd1, %rd2, %rd4;
	mov.f32 	%f8, 0f00000000;
	@%p2 bra 	BB65_3;

	ld.global.f32 	%f7, [%rd1];
	mul.f32 	%f8, %f7, %f4;

BB65_3:
	st.global.f32 	[%rd1], %f8;

BB65_4:
	ret;
}

	// .globl	forward_maxpool_layer_opencl
.entry forward_maxpool_layer_opencl(
	.param .u32 forward_maxpool_layer_opencl_param_0,
	.param .u32 forward_maxpool_layer_opencl_param_1,
	.param .u32 forward_maxpool_layer_opencl_param_2,
	.param .u32 forward_maxpool_layer_opencl_param_3,
	.param .u32 forward_maxpool_layer_opencl_param_4,
	.param .u32 forward_maxpool_layer_opencl_param_5,
	.param .u32 forward_maxpool_layer_opencl_param_6,
	.param .u64 .ptr .global .align 4 forward_maxpool_layer_opencl_param_7,
	.param .u64 .ptr .global .align 4 forward_maxpool_layer_opencl_param_8,
	.param .u64 .ptr .global .align 4 forward_maxpool_layer_opencl_param_9
)
{
	.reg .pred 	%p<47>;
	.reg .f32 	%f<55>;
	.reg .b32 	%r<113>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r53, [forward_maxpool_layer_opencl_param_0];
	ld.param.u32 	%r48, [forward_maxpool_layer_opencl_param_1];
	ld.param.u32 	%r49, [forward_maxpool_layer_opencl_param_2];
	ld.param.u32 	%r50, [forward_maxpool_layer_opencl_param_4];
	ld.param.u32 	%r51, [forward_maxpool_layer_opencl_param_5];
	ld.param.u32 	%r52, [forward_maxpool_layer_opencl_param_6];
	ld.param.u64 	%rd4, [forward_maxpool_layer_opencl_param_7];
	ld.param.u64 	%rd5, [forward_maxpool_layer_opencl_param_8];
	ld.param.u64 	%rd6, [forward_maxpool_layer_opencl_param_9];
	mov.u32 	%r54, %ctaid.x;
	mov.b32	%r55, %envreg0;
	add.s32 	%r56, %r54, %r55;
	mov.u32 	%r57, %ctaid.y;
	mov.b32	%r58, %envreg1;
	add.s32 	%r59, %r57, %r58;
	mov.b32	%r60, %envreg6;
	mad.lo.s32 	%r61, %r59, %r60, %r56;
	mov.u32 	%r62, %ntid.x;
	mov.u32 	%r63, %tid.x;
	mad.lo.s32 	%r1, %r61, %r62, %r63;
	setp.ge.s32	%p2, %r1, %r53;
	@%p2 bra 	BB66_31;

	sub.s32 	%r65, %r48, %r51;
	add.s32 	%r66, %r65, %r52;
	div.s32 	%r67, %r66, %r50;
	add.s32 	%r2, %r67, 1;
	sub.s32 	%r68, %r49, %r51;
	add.s32 	%r69, %r68, %r52;
	div.s32 	%r70, %r69, %r50;
	add.s32 	%r3, %r70, 1;
	rem.s32 	%r4, %r1, %r3;
	div.s32 	%r71, %r1, %r3;
	rem.s32 	%r5, %r71, %r2;
	div.s32 	%r6, %r71, %r2;
	mov.f32 	%f53, 0fFF800000;
	mov.u32 	%r111, -1;
	setp.lt.s32	%p3, %r51, 1;
	@%p3 bra 	BB66_30;

	shr.u32 	%r74, %r52, 31;
	add.s32 	%r75, %r52, %r74;
	shr.s32 	%r76, %r75, 1;
	neg.s32 	%r77, %r76;
	mul.lo.s32 	%r78, %r5, %r50;
	sub.s32 	%r7, %r78, %r76;
	mad.lo.s32 	%r8, %r4, %r50, %r77;
	mul.lo.s32 	%r12, %r6, %r48;
	mov.f32 	%f53, 0fFF800000;
	mov.u32 	%r111, -1;
	mov.u32 	%r72, 0;
	mov.u32 	%r98, %r72;

BB66_3:
	add.s32 	%r15, %r7, %r98;
	add.s32 	%r84, %r15, %r12;
	mul.lo.s32 	%r16, %r84, %r49;
	setp.gt.s32	%p4, %r15, -1;
	setp.lt.s32	%p5, %r15, %r48;
	and.pred  	%p1, %p4, %p5;
	and.b32  	%r83, %r51, 3;
	mov.f32 	%f32, 0f00000000;
	setp.eq.s32	%p6, %r83, 0;
	@%p6 bra 	BB66_4;

	setp.eq.s32	%p7, %r83, 1;
	@%p7 bra 	BB66_6;
	bra.uni 	BB66_7;

BB66_6:
	mov.u32 	%r102, %r72;
	bra.uni 	BB66_15;

BB66_4:
	mov.u32 	%r109, %r72;
	mov.u32 	%r105, %r111;
	mov.f32 	%f46, %f53;
	mov.f32 	%f53, %f32;
	mov.u32 	%r111, %r72;
	bra.uni 	BB66_18;

BB66_7:
	setp.eq.s32	%p8, %r83, 2;
	@%p8 bra 	BB66_8;
	bra.uni 	BB66_9;

BB66_8:
	mov.u32 	%r100, %r72;
	bra.uni 	BB66_12;

BB66_9:
	setp.lt.s32	%p9, %r8, %r49;
	add.s32 	%r17, %r8, %r16;
	setp.gt.s32	%p10, %r8, -1;
	and.pred  	%p11, %p1, %p10;
	and.pred  	%p12, %p11, %p9;
	mov.f32 	%f41, 0fFF800000;
	@!%p12 bra 	BB66_11;
	bra.uni 	BB66_10;

BB66_10:
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.f32 	%f41, [%rd8];

BB66_11:
	setp.gt.f32	%p13, %f41, %f53;
	selp.b32	%r111, %r17, %r111, %p13;
	selp.f32	%f53, %f41, %f53, %p13;
	mov.u32 	%r100, 1;

BB66_12:
	add.s32 	%r86, %r8, %r100;
	add.s32 	%r21, %r86, %r16;
	setp.gt.s32	%p14, %r86, -1;
	and.pred  	%p15, %p1, %p14;
	setp.lt.s32	%p16, %r86, %r49;
	and.pred  	%p17, %p15, %p16;
	mov.f32 	%f43, 0fFF800000;
	@!%p17 bra 	BB66_14;
	bra.uni 	BB66_13;

BB66_13:
	mul.wide.s32 	%rd9, %r21, 4;
	add.s64 	%rd10, %rd4, %rd9;
	ld.global.f32 	%f43, [%rd10];

BB66_14:
	setp.gt.f32	%p18, %f43, %f53;
	selp.b32	%r111, %r21, %r111, %p18;
	selp.f32	%f53, %f43, %f53, %p18;
	add.s32 	%r102, %r100, 1;

BB66_15:
	add.s32 	%r87, %r8, %r102;
	add.s32 	%r26, %r87, %r16;
	setp.gt.s32	%p19, %r87, -1;
	and.pred  	%p20, %p1, %p19;
	setp.lt.s32	%p21, %r87, %r49;
	and.pred  	%p22, %p20, %p21;
	mov.f32 	%f45, 0fFF800000;
	@!%p22 bra 	BB66_17;
	bra.uni 	BB66_16;

BB66_16:
	mul.wide.s32 	%rd11, %r26, 4;
	add.s64 	%rd12, %rd4, %rd11;
	ld.global.f32 	%f45, [%rd12];

BB66_17:
	setp.gt.f32	%p23, %f45, %f53;
	selp.b32	%r105, %r26, %r111, %p23;
	selp.f32	%f46, %f45, %f53, %p23;
	add.s32 	%r109, %r102, 1;
	mov.f32 	%f53, %f46;
	mov.u32 	%r111, %r105;

BB66_18:
	setp.lt.u32	%p24, %r51, 4;
	@%p24 bra 	BB66_29;

	add.s32 	%r108, %r8, %r109;
	add.s32 	%r89, %r8, %r109;
	mad.lo.s32 	%r107, %r49, %r84, %r89;
	mul.wide.s32 	%rd13, %r107, 4;
	add.s64 	%rd17, %rd4, %rd13;
	mov.u32 	%r111, %r105;
	mov.f32 	%f53, %f46;

BB66_20:
	setp.gt.s32	%p25, %r108, -1;
	and.pred  	%p26, %p1, %p25;
	setp.lt.s32	%p27, %r108, %r49;
	and.pred  	%p28, %p26, %p27;
	mov.f32 	%f52, 0fFF800000;
	mov.f32 	%f49, %f52;
	@!%p28 bra 	BB66_22;
	bra.uni 	BB66_21;

BB66_21:
	ld.global.f32 	%f49, [%rd17];

BB66_22:
	setp.gt.f32	%p29, %f49, %f53;
	selp.b32	%r38, %r107, %r111, %p29;
	selp.f32	%f18, %f49, %f53, %p29;
	add.s32 	%r90, %r108, 1;
	setp.gt.s32	%p30, %r90, -1;
	and.pred  	%p31, %p1, %p30;
	setp.lt.s32	%p32, %r90, %r49;
	and.pred  	%p33, %p31, %p32;
	mov.f32 	%f50, %f52;
	@!%p33 bra 	BB66_24;
	bra.uni 	BB66_23;

BB66_23:
	ld.global.f32 	%f50, [%rd17+4];

BB66_24:
	add.s32 	%r91, %r107, 1;
	setp.gt.f32	%p34, %f50, %f18;
	selp.b32	%r39, %r91, %r38, %p34;
	selp.f32	%f21, %f50, %f18, %p34;
	add.s32 	%r92, %r108, 2;
	setp.gt.s32	%p35, %r92, -1;
	and.pred  	%p36, %p1, %p35;
	setp.lt.s32	%p37, %r92, %r49;
	and.pred  	%p38, %p36, %p37;
	mov.f32 	%f51, %f52;
	@!%p38 bra 	BB66_26;
	bra.uni 	BB66_25;

BB66_25:
	ld.global.f32 	%f51, [%rd17+8];

BB66_26:
	add.s32 	%r93, %r107, 2;
	setp.gt.f32	%p39, %f51, %f21;
	selp.b32	%r40, %r93, %r39, %p39;
	selp.f32	%f24, %f51, %f21, %p39;
	add.s32 	%r94, %r108, 3;
	setp.gt.s32	%p40, %r94, -1;
	and.pred  	%p41, %p1, %p40;
	setp.lt.s32	%p42, %r94, %r49;
	and.pred  	%p43, %p41, %p42;
	@!%p43 bra 	BB66_28;
	bra.uni 	BB66_27;

BB66_27:
	ld.global.f32 	%f52, [%rd17+12];

BB66_28:
	add.s32 	%r95, %r107, 3;
	setp.gt.f32	%p44, %f52, %f24;
	selp.b32	%r111, %r95, %r40, %p44;
	selp.f32	%f53, %f52, %f24, %p44;
	add.s32 	%r108, %r108, 4;
	add.s32 	%r107, %r107, 4;
	add.s64 	%rd17, %rd17, 16;
	add.s32 	%r109, %r109, 4;
	setp.lt.s32	%p45, %r109, %r51;
	@%p45 bra 	BB66_20;

BB66_29:
	add.s32 	%r98, %r98, 1;
	setp.lt.s32	%p46, %r98, %r51;
	@%p46 bra 	BB66_3;

BB66_30:
	mad.lo.s32 	%r96, %r6, %r2, %r5;
	mad.lo.s32 	%r97, %r96, %r3, %r4;
	mul.wide.s32 	%rd14, %r97, 4;
	add.s64 	%rd15, %rd5, %rd14;
	st.global.f32 	[%rd15], %f53;
	add.s64 	%rd16, %rd6, %rd14;
	st.global.u32 	[%rd16], %r111;

BB66_31:
	ret;
}

	// .globl	backward_maxpool_layer_opencl
.entry backward_maxpool_layer_opencl(
	.param .u32 backward_maxpool_layer_opencl_param_0,
	.param .u32 backward_maxpool_layer_opencl_param_1,
	.param .u32 backward_maxpool_layer_opencl_param_2,
	.param .u32 backward_maxpool_layer_opencl_param_3,
	.param .u32 backward_maxpool_layer_opencl_param_4,
	.param .u32 backward_maxpool_layer_opencl_param_5,
	.param .u32 backward_maxpool_layer_opencl_param_6,
	.param .u64 .ptr .global .align 4 backward_maxpool_layer_opencl_param_7,
	.param .u64 .ptr .global .align 4 backward_maxpool_layer_opencl_param_8,
	.param .u64 .ptr .global .align 4 backward_maxpool_layer_opencl_param_9
)
{
	.reg .pred 	%p<65>;
	.reg .f32 	%f<64>;
	.reg .b32 	%r<95>;
	.reg .b64 	%rd<33>;


	ld.param.u32 	%r38, [backward_maxpool_layer_opencl_param_0];
	ld.param.u32 	%r34, [backward_maxpool_layer_opencl_param_1];
	ld.param.u32 	%r35, [backward_maxpool_layer_opencl_param_2];
	ld.param.u32 	%r36, [backward_maxpool_layer_opencl_param_4];
	ld.param.u32 	%r39, [backward_maxpool_layer_opencl_param_5];
	ld.param.u32 	%r37, [backward_maxpool_layer_opencl_param_6];
	ld.param.u64 	%rd7, [backward_maxpool_layer_opencl_param_7];
	ld.param.u64 	%rd8, [backward_maxpool_layer_opencl_param_8];
	ld.param.u64 	%rd9, [backward_maxpool_layer_opencl_param_9];
	sub.s32 	%r40, %r34, %r39;
	add.s32 	%r41, %r40, %r37;
	div.s32 	%r1, %r41, %r36;
	add.s32 	%r2, %r1, 1;
	sub.s32 	%r42, %r35, %r39;
	add.s32 	%r43, %r42, %r37;
	div.s32 	%r3, %r43, %r36;
	add.s32 	%r4, %r3, 1;
	add.s32 	%r44, %r39, -1;
	div.s32 	%r5, %r44, %r36;
	mov.u32 	%r45, %ctaid.x;
	mov.b32	%r46, %envreg0;
	add.s32 	%r47, %r45, %r46;
	mov.u32 	%r48, %ctaid.y;
	mov.b32	%r49, %envreg1;
	add.s32 	%r50, %r48, %r49;
	mov.b32	%r51, %envreg6;
	mad.lo.s32 	%r52, %r50, %r51, %r47;
	mov.u32 	%r53, %ntid.x;
	mov.u32 	%r54, %tid.x;
	mad.lo.s32 	%r6, %r52, %r53, %r54;
	setp.ge.s32	%p1, %r6, %r38;
	@%p1 bra 	BB67_38;

	neg.s32 	%r7, %r5;
	setp.lt.s32	%p2, %r5, %r7;
	mov.f32 	%f62, 0f00000000;
	@%p2 bra 	BB67_37;

	rem.s32 	%r55, %r6, %r35;
	div.s32 	%r56, %r6, %r35;
	rem.s32 	%r57, %r56, %r34;
	div.s32 	%r58, %r56, %r34;
	shr.u32 	%r59, %r37, 31;
	add.s32 	%r60, %r37, %r59;
	shr.s32 	%r61, %r60, 1;
	neg.s32 	%r62, %r61;
	add.s32 	%r63, %r5, 1;
	sub.s32 	%r8, %r55, %r62;
	sub.s32 	%r9, %r57, %r62;
	mul.lo.s32 	%r10, %r58, %r2;
	mov.u32 	%r64, 1;
	sub.s32 	%r65, %r64, %r5;
	max.s32 	%r66, %r63, %r65;
	add.s32 	%r11, %r5, %r66;
	mov.f32 	%f31, 0f00000000;
	div.s32 	%r15, %r8, %r36;
	div.s32 	%r69, %r9, %r36;
	mov.u32 	%r89, %r7;
	mov.f32 	%f62, %f31;

BB67_3:
	add.s32 	%r16, %r69, %r89;
	add.s32 	%r70, %r16, %r10;
	mul.lo.s32 	%r17, %r70, %r4;
	and.b32  	%r68, %r11, 3;
	setp.eq.s32	%p3, %r68, 0;
	@%p3 bra 	BB67_4;

	setp.eq.s32	%p4, %r68, 1;
	@%p4 bra 	BB67_6;
	bra.uni 	BB67_7;

BB67_6:
	mov.u32 	%r91, %r7;
	bra.uni 	BB67_17;

BB67_4:
	mov.u32 	%r94, %r7;
	mov.f32 	%f55, %f62;
	mov.f32 	%f62, %f31;
	bra.uni 	BB67_21;

BB67_7:
	setp.eq.s32	%p5, %r68, 2;
	@%p5 bra 	BB67_8;
	bra.uni 	BB67_9;

BB67_8:
	mov.u32 	%r90, %r7;
	bra.uni 	BB67_13;

BB67_9:
	setp.lt.s32	%p6, %r16, %r2;
	sub.s32 	%r19, %r15, %r5;
	setp.gt.s32	%p7, %r19, -1;
	setp.lt.s32	%p8, %r19, %r4;
	and.pred  	%p9, %p7, %p8;
	setp.gt.s32	%p10, %r16, -1;
	and.pred  	%p11, %p9, %p10;
	and.pred  	%p12, %p11, %p6;
	mov.f32 	%f50, 0f00000000;
	@!%p12 bra 	BB67_12;
	bra.uni 	BB67_10;

BB67_10:
	add.s32 	%r71, %r17, %r19;
	cvt.s64.s32	%rd1, %r71;
	mul.wide.s32 	%rd10, %r71, 4;
	add.s64 	%rd11, %rd9, %rd10;
	ld.global.u32 	%r72, [%rd11];
	setp.ne.s32	%p13, %r72, %r6;
	@%p13 bra 	BB67_12;

	shl.b64 	%rd12, %rd1, 2;
	add.s64 	%rd13, %rd7, %rd12;
	ld.global.f32 	%f50, [%rd13];

BB67_12:
	add.f32 	%f62, %f62, %f50;
	mov.u32 	%r90, %r65;

BB67_13:
	add.s32 	%r22, %r15, %r90;
	setp.gt.s32	%p14, %r22, -1;
	setp.lt.s32	%p15, %r22, %r4;
	and.pred  	%p16, %p14, %p15;
	setp.gt.s32	%p17, %r16, -1;
	and.pred  	%p18, %p16, %p17;
	setp.lt.s32	%p19, %r16, %r2;
	and.pred  	%p20, %p18, %p19;
	mov.f32 	%f52, 0f00000000;
	@!%p20 bra 	BB67_16;
	bra.uni 	BB67_14;

BB67_14:
	add.s32 	%r74, %r17, %r22;
	cvt.s64.s32	%rd2, %r74;
	mul.wide.s32 	%rd14, %r74, 4;
	add.s64 	%rd15, %rd9, %rd14;
	ld.global.u32 	%r75, [%rd15];
	setp.ne.s32	%p21, %r75, %r6;
	@%p21 bra 	BB67_16;

	shl.b64 	%rd16, %rd2, 2;
	add.s64 	%rd17, %rd7, %rd16;
	ld.global.f32 	%f52, [%rd17];

BB67_16:
	add.f32 	%f62, %f62, %f52;
	add.s32 	%r91, %r90, 1;

BB67_17:
	add.s32 	%r76, %r15, %r91;
	add.s32 	%r25, %r17, %r76;
	setp.gt.s32	%p22, %r76, -1;
	setp.lt.s32	%p23, %r76, %r4;
	and.pred  	%p24, %p22, %p23;
	setp.gt.s32	%p25, %r16, -1;
	and.pred  	%p26, %p24, %p25;
	setp.lt.s32	%p27, %r16, %r2;
	and.pred  	%p28, %p26, %p27;
	mov.f32 	%f54, 0f00000000;
	@!%p28 bra 	BB67_20;
	bra.uni 	BB67_18;

BB67_18:
	cvt.s64.s32	%rd3, %r25;
	mul.wide.s32 	%rd18, %r25, 4;
	add.s64 	%rd19, %rd9, %rd18;
	ld.global.u32 	%r77, [%rd19];
	setp.ne.s32	%p29, %r77, %r6;
	@%p29 bra 	BB67_20;

	shl.b64 	%rd20, %rd3, 2;
	add.s64 	%rd21, %rd7, %rd20;
	ld.global.f32 	%f54, [%rd21];

BB67_20:
	add.f32 	%f55, %f62, %f54;
	add.s32 	%r94, %r91, 1;
	mov.f32 	%f62, %f55;

BB67_21:
	setp.lt.u32	%p30, %r11, 4;
	@%p30 bra 	BB67_36;

	add.s32 	%r93, %r94, %r15;
	mad.lo.s32 	%r79, %r4, %r70, %r93;
	mul.wide.s32 	%rd32, %r79, 4;
	mov.f32 	%f62, %f55;

BB67_23:
	setp.lt.s32	%p31, %r93, %r4;
	setp.gt.s32	%p32, %r93, -1;
	and.pred  	%p33, %p32, %p31;
	setp.gt.s32	%p34, %r16, -1;
	and.pred  	%p35, %p33, %p34;
	setp.lt.s32	%p36, %r16, %r2;
	and.pred  	%p37, %p35, %p36;
	mov.f32 	%f61, 0f00000000;
	mov.f32 	%f58, %f61;
	@!%p37 bra 	BB67_26;
	bra.uni 	BB67_24;

BB67_24:
	add.s64 	%rd22, %rd9, %rd32;
	ld.global.u32 	%r80, [%rd22];
	setp.ne.s32	%p38, %r80, %r6;
	mov.f32 	%f58, %f61;
	@%p38 bra 	BB67_26;

	add.s64 	%rd23, %rd7, %rd32;
	ld.global.f32 	%f58, [%rd23];

BB67_26:
	add.f32 	%f18, %f62, %f58;
	add.s32 	%r81, %r93, 1;
	setp.gt.s32	%p39, %r81, -1;
	setp.lt.s32	%p40, %r81, %r4;
	and.pred  	%p41, %p39, %p40;
	and.pred  	%p43, %p41, %p34;
	and.pred  	%p45, %p43, %p36;
	mov.f32 	%f59, %f61;
	@!%p45 bra 	BB67_29;
	bra.uni 	BB67_27;

BB67_27:
	add.s64 	%rd24, %rd9, %rd32;
	ld.global.u32 	%r82, [%rd24+4];
	setp.ne.s32	%p46, %r82, %r6;
	mov.f32 	%f59, %f61;
	@%p46 bra 	BB67_29;

	add.s64 	%rd25, %rd7, %rd32;
	ld.global.f32 	%f59, [%rd25+4];

BB67_29:
	add.f32 	%f21, %f18, %f59;
	add.s32 	%r83, %r93, 2;
	setp.gt.s32	%p47, %r83, -1;
	setp.lt.s32	%p48, %r83, %r4;
	and.pred  	%p49, %p47, %p48;
	and.pred  	%p51, %p49, %p34;
	and.pred  	%p53, %p51, %p36;
	mov.f32 	%f60, %f61;
	@!%p53 bra 	BB67_32;
	bra.uni 	BB67_30;

BB67_30:
	add.s64 	%rd26, %rd9, %rd32;
	ld.global.u32 	%r84, [%rd26+8];
	setp.ne.s32	%p54, %r84, %r6;
	mov.f32 	%f60, %f61;
	@%p54 bra 	BB67_32;

	add.s64 	%rd27, %rd7, %rd32;
	ld.global.f32 	%f60, [%rd27+8];

BB67_32:
	add.f32 	%f24, %f21, %f60;
	add.s32 	%r85, %r93, 3;
	setp.gt.s32	%p55, %r85, -1;
	setp.lt.s32	%p56, %r85, %r4;
	and.pred  	%p57, %p55, %p56;
	and.pred  	%p59, %p57, %p34;
	and.pred  	%p61, %p59, %p36;
	@!%p61 bra 	BB67_35;
	bra.uni 	BB67_33;

BB67_33:
	add.s64 	%rd28, %rd9, %rd32;
	ld.global.u32 	%r86, [%rd28+12];
	setp.ne.s32	%p62, %r86, %r6;
	@%p62 bra 	BB67_35;

	add.s64 	%rd29, %rd7, %rd32;
	ld.global.f32 	%f61, [%rd29+12];

BB67_35:
	add.f32 	%f62, %f24, %f61;
	add.s32 	%r93, %r93, 4;
	add.s64 	%rd32, %rd32, 16;
	add.s32 	%r94, %r94, 4;
	setp.lt.s32	%p63, %r94, %r63;
	@%p63 bra 	BB67_23;

BB67_36:
	add.s32 	%r89, %r89, 1;
	setp.lt.s32	%p64, %r89, %r63;
	@%p64 bra 	BB67_3;

BB67_37:
	mul.wide.s32 	%rd30, %r6, 4;
	add.s64 	%rd31, %rd8, %rd30;
	ld.global.f32 	%f47, [%rd31];
	add.f32 	%f48, %f62, %f47;
	st.global.f32 	[%rd31], %f48;

BB67_38:
	ret;
}

	// .globl	shiftMem_opencl
.entry shiftMem_opencl(
	.param .u64 .ptr .global .align 4 shiftMem_opencl_param_0,
	.param .u32 shiftMem_opencl_param_1
)
{



	ret;
}


  